/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/alpinejs/dist/alpine.js":
/*!**********************************************!*\
  !*** ./node_modules/alpinejs/dist/alpine.js ***!
  \**********************************************/
/***/ (function(module) {

(function (global, factory) {
   true ? module.exports = factory() :
  0;
}(this, (function () { 'use strict';

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  // Thanks @stimulus:
  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts
  function domReady() {
    return new Promise(resolve => {
      if (document.readyState == "loading") {
        document.addEventListener("DOMContentLoaded", resolve);
      } else {
        resolve();
      }
    });
  }
  function arrayUnique(array) {
    return Array.from(new Set(array));
  }
  function isTesting() {
    return navigator.userAgent.includes("Node.js") || navigator.userAgent.includes("jsdom");
  }
  function checkedAttrLooseCompare(valueA, valueB) {
    return valueA == valueB;
  }
  function warnIfMalformedTemplate(el, directive) {
    if (el.tagName.toLowerCase() !== 'template') {
      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);
    } else if (el.content.childElementCount !== 1) {
      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);
    }
  }
  function kebabCase(subject) {
    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\s]/, '-').toLowerCase();
  }
  function camelCase(subject) {
    return subject.toLowerCase().replace(/-(\w)/g, (match, char) => char.toUpperCase());
  }
  function walk(el, callback) {
    if (callback(el) === false) return;
    let node = el.firstElementChild;

    while (node) {
      walk(node, callback);
      node = node.nextElementSibling;
    }
  }
  function debounce(func, wait) {
    var timeout;
    return function () {
      var context = this,
          args = arguments;

      var later = function later() {
        timeout = null;
        func.apply(context, args);
      };

      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  const handleError = (el, expression, error) => {
    console.warn(`Alpine Error: "${error}"\n\nExpression: "${expression}"\nElement:`, el);

    if (!isTesting()) {
      Object.assign(error, {
        el,
        expression
      });
      throw error;
    }
  };

  function tryCatch(cb, {
    el,
    expression
  }) {
    try {
      const value = cb();
      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;
    } catch (e) {
      handleError(el, expression, e);
    }
  }

  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {
    return tryCatch(() => {
      if (typeof expression === 'function') {
        return expression.call(dataContext);
      }

      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));
    }, {
      el,
      expression
    });
  }
  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {
    return tryCatch(() => {
      if (typeof expression === 'function') {
        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));
      }

      let AsyncFunction = Function;
      /* MODERN-ONLY:START */

      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;
      /* MODERN-ONLY:END */
      // For the cases when users pass only a function reference to the caller: `x-on:click="foo"`
      // Where "foo" is a function. Also, we'll pass the function the event instance when we call it.

      if (Object.keys(dataContext).includes(expression)) {
        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));

        if (typeof methodReference === 'function') {
          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));
        } else {
          return Promise.resolve();
        }
      }

      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));
    }, {
      el,
      expression
    });
  }
  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\b/;
  function isXAttr(attr) {
    const name = replaceAtAndColonWithStandardSyntax(attr.name);
    return xAttrRE.test(name);
  }
  function getXAttrs(el, component, type) {
    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.

    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];

    if (spreadDirective) {
      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.

      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({
        name,
        value
      })));
    }

    if (type) return directives.filter(i => i.type === type);
    return sortDirectives(directives);
  }

  function sortDirectives(directives) {
    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];
    return directives.sort((a, b) => {
      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;
      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;
      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);
    });
  }

  function parseHtmlAttribute({
    name,
    value
  }) {
    const normalizedName = replaceAtAndColonWithStandardSyntax(name);
    const typeMatch = normalizedName.match(xAttrRE);
    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\-:]+)/);
    const modifiers = normalizedName.match(/\.[^.\]]+(?=[^\]]*$)/g) || [];
    return {
      type: typeMatch ? typeMatch[1] : null,
      value: valueMatch ? valueMatch[1] : null,
      modifiers: modifiers.map(i => i.replace('.', '')),
      expression: value
    };
  }
  function isBooleanAttr(attrName) {
    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute
    // Array roughly ordered by estimated usage
    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];
    return booleanAttributes.includes(attrName);
  }
  function replaceAtAndColonWithStandardSyntax(name) {
    if (name.startsWith('@')) {
      return name.replace('@', 'x-on:');
    } else if (name.startsWith(':')) {
      return name.replace(':', 'x-bind:');
    }

    return name;
  }
  function convertClassStringToArray(classList, filterFn = Boolean) {
    return classList.split(' ').filter(filterFn);
  }
  const TRANSITION_TYPE_IN = 'in';
  const TRANSITION_TYPE_OUT = 'out';
  const TRANSITION_CANCELLED = 'cancelled';
  function transitionIn(el, show, reject, component, forceSkip = false) {
    // We don't want to transition on the initial page load.
    if (forceSkip) return show();

    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {
      // there is already a similar transition going on, this was probably triggered by
      // a change in a different property, let's just leave the previous one doing its job
      return;
    }

    const attrs = getXAttrs(el, component, 'transition');
    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.

    if (showAttr && showAttr.modifiers.includes('transition')) {
      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the "in" transition.

      if (modifiers.includes('out') && !modifiers.includes('in')) return show();
      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use "in" related modifiers for this transition.

      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;
      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.
    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {
      transitionClassesIn(el, component, attrs, show, reject);
    } else {
      // If neither, just show that damn thing.
      show();
    }
  }
  function transitionOut(el, hide, reject, component, forceSkip = false) {
    // We don't want to transition on the initial page load.
    if (forceSkip) return hide();

    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {
      // there is already a similar transition going on, this was probably triggered by
      // a change in a different property, let's just leave the previous one doing its job
      return;
    }

    const attrs = getXAttrs(el, component, 'transition');
    const showAttr = getXAttrs(el, component, 'show')[0];

    if (showAttr && showAttr.modifiers.includes('transition')) {
      let modifiers = showAttr.modifiers;
      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();
      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');
      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;
      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);
    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {
      transitionClassesOut(el, component, attrs, hide, reject);
    } else {
      hide();
    }
  }
  function transitionHelperIn(el, modifiers, showCallback, reject) {
    // Default values inspired by: https://material.io/design/motion/speed.html#duration
    const styleValues = {
      duration: modifierValue(modifiers, 'duration', 150),
      origin: modifierValue(modifiers, 'origin', 'center'),
      first: {
        opacity: 0,
        scale: modifierValue(modifiers, 'scale', 95)
      },
      second: {
        opacity: 1,
        scale: 100
      }
    };
    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);
  }
  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {
    // Make the "out" transition .5x slower than the "in". (Visually better)
    // HOWEVER, if they explicitly set a duration for the "out" transition,
    // use that.
    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;
    const styleValues = {
      duration: duration,
      origin: modifierValue(modifiers, 'origin', 'center'),
      first: {
        opacity: 1,
        scale: 100
      },
      second: {
        opacity: 0,
        scale: modifierValue(modifiers, 'scale', 95)
      }
    };
    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);
  }

  function modifierValue(modifiers, key, fallback) {
    // If the modifier isn't present, use the default.
    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms

    const rawValue = modifiers[modifiers.indexOf(key) + 1];
    if (!rawValue) return fallback;

    if (key === 'scale') {
      // Check if the very next value is NOT a number and return the fallback.
      // If x-show.transition.scale, we'll use the default scale value.
      // That is how a user opts out of the opacity transition.
      if (!isNumeric(rawValue)) return fallback;
    }

    if (key === 'duration') {
      // Support x-show.transition.duration.500ms && duration.500
      let match = rawValue.match(/([0-9]+)ms/);
      if (match) return match[1];
    }

    if (key === 'origin') {
      // Support chaining origin directions: x-show.transition.top.right
      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {
        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');
      }
    }

    return rawValue;
  }

  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {
    // clear the previous transition if exists to avoid caching the wrong styles
    if (el.__x_transition) {
      el.__x_transition.cancel && el.__x_transition.cancel();
    } // If the user set these style values, we'll put them back when we're done with them.


    const opacityCache = el.style.opacity;
    const transformCache = el.style.transform;
    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.

    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');
    const transitionOpacity = noModifiers || modifiers.includes('opacity');
    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).
    // This way you can get a birds eye view of the hooks, and the differences
    // between them.

    const stages = {
      start() {
        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;
        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;
      },

      during() {
        if (transitionScale) el.style.transformOrigin = styleValues.origin;
        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();
        el.style.transitionDuration = `${styleValues.duration / 1000}s`;
        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;
      },

      show() {
        hook1();
      },

      end() {
        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;
        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;
      },

      hide() {
        hook2();
      },

      cleanup() {
        if (transitionOpacity) el.style.opacity = opacityCache;
        if (transitionScale) el.style.transform = transformCache;
        if (transitionScale) el.style.transformOrigin = transformOriginCache;
        el.style.transitionProperty = null;
        el.style.transitionDuration = null;
        el.style.transitionTimingFunction = null;
      }

    };
    transition(el, stages, type, reject);
  }

  const ensureStringExpression = (expression, el, component) => {
    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;
  };

  function transitionClassesIn(el, component, directives, showCallback, reject) {
    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {
      expression: ''
    }).expression, el, component));
    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {
      expression: ''
    }).expression, el, component));
    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {
      expression: ''
    }).expression, el, component));
    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);
  }
  function transitionClassesOut(el, component, directives, hideCallback, reject) {
    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {
      expression: ''
    }).expression, el, component));
    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {
      expression: ''
    }).expression, el, component));
    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {
      expression: ''
    }).expression, el, component));
    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);
  }
  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {
    // clear the previous transition if exists to avoid caching the wrong classes
    if (el.__x_transition) {
      el.__x_transition.cancel && el.__x_transition.cancel();
    }

    const originalClasses = el.__x_original_classes || [];
    const stages = {
      start() {
        el.classList.add(...classesStart);
      },

      during() {
        el.classList.add(...classesDuring);
      },

      show() {
        hook1();
      },

      end() {
        // Don't remove classes that were in the original class attribute.
        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));
        el.classList.add(...classesEnd);
      },

      hide() {
        hook2();
      },

      cleanup() {
        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));
        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));
      }

    };
    transition(el, stages, type, reject);
  }
  function transition(el, stages, type, reject) {
    const finish = once(() => {
      stages.hide(); // Adding an "isConnected" check, in case the callback
      // removed the element from the DOM.

      if (el.isConnected) {
        stages.cleanup();
      }

      delete el.__x_transition;
    });
    el.__x_transition = {
      // Set transition type so we can avoid clearing transition if the direction is the same
      type: type,
      // create a callback for the last stages of the transition so we can call it
      // from different point and early terminate it. Once will ensure that function
      // is only called one time.
      cancel: once(() => {
        reject(TRANSITION_CANCELLED);
        finish();
      }),
      finish,
      // This store the next animation frame so we can cancel it
      nextFrame: null
    };
    stages.start();
    stages.during();
    el.__x_transition.nextFrame = requestAnimationFrame(() => {
      // Note: Safari's transitionDuration property will list out comma separated transition durations
      // for every single transition property. Let's grab the first one and call it a day.
      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;

      if (duration === 0) {
        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;
      }

      stages.show();
      el.__x_transition.nextFrame = requestAnimationFrame(() => {
        stages.end();
        setTimeout(el.__x_transition.finish, duration);
      });
    });
  }
  function isNumeric(subject) {
    return !Array.isArray(subject) && !isNaN(subject);
  } // Thanks @vuejs
  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js

  function once(callback) {
    let called = false;
    return function () {
      if (!called) {
        called = true;
        callback.apply(this, arguments);
      }
    };
  }

  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {
    warnIfMalformedTemplate(templateEl, 'x-for');
    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);
    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).

    let currentEl = templateEl;
    items.forEach((item, index) => {
      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());
      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);
      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.

      if (!nextEl) {
        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.

        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);
        nextEl.__x_for = iterationScopeVariables;
        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.
      } else {
        // Temporarily remove the key indicator to allow the normal "updateElements" to work.
        delete nextEl.__x_for_key;
        nextEl.__x_for = iterationScopeVariables;
        component.updateElements(nextEl, () => nextEl.__x_for);
      }

      currentEl = nextEl;
      currentEl.__x_for_key = currentKey;
    });
    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);
  } // This was taken from VueJS 2.* core. Thanks Vue!

  function parseForExpression(expression) {
    let forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
    let stripParensRE = /^\(|\)$/g;
    let forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
    let inMatch = String(expression).match(forAliasRE);
    if (!inMatch) return;
    let res = {};
    res.items = inMatch[2].trim();
    let item = inMatch[1].trim().replace(stripParensRE, '');
    let iteratorMatch = item.match(forIteratorRE);

    if (iteratorMatch) {
      res.item = item.replace(forIteratorRE, '').trim();
      res.index = iteratorMatch[1].trim();

      if (iteratorMatch[2]) {
        res.collection = iteratorMatch[2].trim();
      }
    } else {
      res.item = item;
    }

    return res;
  }

  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {
    // We must create a new object, so each iteration has a new scope
    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};
    scopeVariables[iteratorNames.item] = item;
    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;
    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;
    return scopeVariables;
  }

  function generateKeyForIteration(component, el, index, iterationScopeVariables) {
    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.

    if (!bindKeyAttribute) return index;
    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);
  }

  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {
    let ifAttribute = getXAttrs(el, component, 'if')[0];

    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {
      return [];
    }

    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.

    if (isNumeric(items) && items >= 0) {
      items = Array.from(Array(items).keys(), i => i + 1);
    }

    return items;
  }

  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {
    let clone = document.importNode(templateEl.content, true);
    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);
    return currentEl.nextElementSibling;
  }

  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {
    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.

    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.

    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.
    // If we find it, we'll move it to the current position in the loop.

    let tmpNextEl = nextEl;

    while (tmpNextEl) {
      if (tmpNextEl.__x_for_key === currentKey) {
        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);
      }

      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;
    }
  }

  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {
    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;

    while (nextElementFromOldLoop) {
      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;
      let nextSibling = nextElementFromOldLoop.nextElementSibling;
      transitionOut(nextElementFromOldLoop, () => {
        nextElementFromOldLoopImmutable.remove();
      }, () => {}, component);
      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;
    }
  }

  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {
    var value = component.evaluateReturnExpression(el, expression, extraVars);

    if (attrName === 'value') {
      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.

      if (value === undefined && String(expression).match(/\./)) {
        value = '';
      }

      if (el.type === 'radio') {
        // Set radio value from x-bind:value, if no "value" attribute exists.
        // If there are any initial state values, radio will have a correct
        // "checked" value since x-bind:value is processed before x-model.
        if (el.attributes.value === undefined && attrType === 'bind') {
          el.value = value;
        } else if (attrType !== 'bind') {
          el.checked = checkedAttrLooseCompare(el.value, value);
        }
      } else if (el.type === 'checkbox') {
        // If we are explicitly binding a string to the :value, set the string,
        // If the value is a boolean, leave it alone, it will be set to "on"
        // automatically.
        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {
          el.value = String(value);
        } else if (attrType !== 'bind') {
          if (Array.isArray(value)) {
            // I'm purposely not using Array.includes here because it's
            // strict, and because of Numeric/String mis-casting, I
            // want the "includes" to be "fuzzy".
            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));
          } else {
            el.checked = !!value;
          }
        }
      } else if (el.tagName === 'SELECT') {
        updateSelect(el, value);
      } else {
        if (el.value === value) return;
        el.value = value;
      }
    } else if (attrName === 'class') {
      if (Array.isArray(value)) {
        const originalClasses = el.__x_original_classes || [];
        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));
      } else if (typeof value === 'object') {
        // Sorting the keys / class names by their boolean value will ensure that
        // anything that evaluates to `false` and needs to remove classes is run first.
        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);
        keysSortedByBooleanValue.forEach(classNames => {
          if (value[classNames]) {
            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));
          } else {
            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));
          }
        });
      } else {
        const originalClasses = el.__x_original_classes || [];
        const newClasses = value ? convertClassStringToArray(value) : [];
        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));
      }
    } else {
      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute

      if ([null, undefined, false].includes(value)) {
        el.removeAttribute(attrName);
      } else {
        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);
      }
    }
  }

  function setIfChanged(el, attrName, value) {
    if (el.getAttribute(attrName) != value) {
      el.setAttribute(attrName, value);
    }
  }

  function updateSelect(el, value) {
    const arrayWrappedValue = [].concat(value).map(value => {
      return value + '';
    });
    Array.from(el.options).forEach(option => {
      option.selected = arrayWrappedValue.includes(option.value || option.text);
    });
  }

  function handleTextDirective(el, output, expression) {
    // If nested model key is undefined, set the default value to empty string.
    if (output === undefined && String(expression).match(/\./)) {
      output = '';
    }

    el.textContent = output;
  }

  function handleHtmlDirective(component, el, expression, extraVars) {
    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);
  }

  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {
    const hide = () => {
      el.style.display = 'none';
      el.__x_is_shown = false;
    };

    const show = () => {
      if (el.style.length === 1 && el.style.display === 'none') {
        el.removeAttribute('style');
      } else {
        el.style.removeProperty('display');
      }

      el.__x_is_shown = true;
    };

    if (initialUpdate === true) {
      if (value) {
        show();
      } else {
        hide();
      }

      return;
    }

    const handle = (resolve, reject) => {
      if (value) {
        if (el.style.display === 'none' || el.__x_transition) {
          transitionIn(el, () => {
            show();
          }, reject, component);
        }

        resolve(() => {});
      } else {
        if (el.style.display !== 'none') {
          transitionOut(el, () => {
            resolve(() => {
              hide();
            });
          }, reject, component);
        } else {
          resolve(() => {});
        }
      }
    }; // The working of x-show is a bit complex because we need to
    // wait for any child transitions to finish before hiding
    // some element. Also, this has to be done recursively.
    // If x-show.immediate, foregoe the waiting.


    if (modifiers.includes('immediate')) {
      handle(finish => finish(), () => {});
      return;
    } // x-show is encountered during a DOM tree walk. If an element
    // we encounter is NOT a child of another x-show element we
    // can execute the previous x-show stack (if one exists).


    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {
      component.executeAndClearRemainingShowDirectiveStack();
    }

    component.showDirectiveStack.push(handle);
    component.showDirectiveLastElement = el;
  }

  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {
    warnIfMalformedTemplate(el, 'x-if');
    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;

    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {
      const clone = document.importNode(el.content, true);
      el.parentElement.insertBefore(clone, el.nextElementSibling);
      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);
      component.initializeElements(el.nextElementSibling, extraVars);
      el.nextElementSibling.__x_inserted_me = true;
    } else if (!expressionResult && elementHasAlreadyBeenAdded) {
      transitionOut(el.nextElementSibling, () => {
        el.nextElementSibling.remove();
      }, () => {}, component, initialUpdate);
    }
  }

  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {
    const options = {
      passive: modifiers.includes('passive')
    };

    if (modifiers.includes('camel')) {
      event = camelCase(event);
    }

    let handler, listenerTarget;

    if (modifiers.includes('away')) {
      listenerTarget = document;

      handler = e => {
        // Don't do anything if the click came from the element or within it.
        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.

        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click
        // is from outside it, let's run the expression.

        runListenerHandler(component, expression, e, extraVars);

        if (modifiers.includes('once')) {
          document.removeEventListener(event, handler, options);
        }
      };
    } else {
      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;

      handler = e => {
        // Remove this global event handler if the element that declared it
        // has been removed. It's now stale.
        if (listenerTarget === window || listenerTarget === document) {
          if (!document.body.contains(el)) {
            listenerTarget.removeEventListener(event, handler, options);
            return;
          }
        }

        if (isKeyEvent(event)) {
          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {
            return;
          }
        }

        if (modifiers.includes('prevent')) e.preventDefault();
        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and
        // the target element matches the element we are registering the
        // event on, run the handler

        if (!modifiers.includes('self') || e.target === el) {
          const returnValue = runListenerHandler(component, expression, e, extraVars);
          returnValue.then(value => {
            if (value === false) {
              e.preventDefault();
            } else {
              if (modifiers.includes('once')) {
                listenerTarget.removeEventListener(event, handler, options);
              }
            }
          });
        }
      };
    }

    if (modifiers.includes('debounce')) {
      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';
      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;
      handler = debounce(handler, wait);
    }

    listenerTarget.addEventListener(event, handler, options);
  }

  function runListenerHandler(component, expression, e, extraVars) {
    return component.evaluateCommandExpression(e.target, expression, () => {
      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {
        '$event': e
      });
    });
  }

  function isKeyEvent(event) {
    return ['keydown', 'keyup'].includes(event);
  }

  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {
    let keyModifiers = modifiers.filter(i => {
      return !['window', 'document', 'prevent', 'stop'].includes(i);
    });

    if (keyModifiers.includes('debounce')) {
      let debounceIndex = keyModifiers.indexOf('debounce');
      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);
    } // If no modifier is specified, we'll call it a press.


    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.

    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.

    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];
    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));
    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));

    if (selectedSystemKeyModifiers.length > 0) {
      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {
        // Alias "cmd" and "super" to "meta"
        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';
        return e[`${modifier}Key`];
      }); // If all the modifiers selected are pressed, ...

      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {
        // AND the remaining key is pressed as well. It's a press.
        if (keyModifiers[0] === keyToModifier(e.key)) return false;
      }
    } // We'll call it NOT a valid keypress.


    return true;
  }

  function keyToModifier(key) {
    switch (key) {
      case '/':
        return 'slash';

      case ' ':
      case 'Spacebar':
        return 'space';

      default:
        return key && kebabCase(key);
    }
  }

  function registerModelListener(component, el, modifiers, expression, extraVars) {
    // If the element we are binding to is a select, a radio, or checkbox
    // we'll listen for the change event instead of the "input" event.
    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';
    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;
    registerListener(component, el, event, modifiers, listenerExpression, () => {
      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {
        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)
      });
    });
  }

  function generateModelAssignmentFunction(el, modifiers, expression) {
    if (el.type === 'radio') {
      // Radio buttons only work properly when they share a name attribute.
      // People might assume we take care of that for them, because
      // they already set a shared "x-model" attribute.
      if (!el.hasAttribute('name')) el.setAttribute('name', expression);
    }

    return (event, currentValue) => {
      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.
      if (event instanceof CustomEvent && event.detail) {
        return event.detail;
      } else if (el.type === 'checkbox') {
        // If the data we are binding to is an array, toggle its value inside the array.
        if (Array.isArray(currentValue)) {
          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;
          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));
        } else {
          return event.target.checked;
        }
      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {
        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {
          const rawValue = option.value || option.text;
          return safeParseNumber(rawValue);
        }) : Array.from(event.target.selectedOptions).map(option => {
          return option.value || option.text;
        });
      } else {
        const rawValue = event.target.value;
        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;
      }
    };
  }

  function safeParseNumber(rawValue) {
    const number = rawValue ? parseFloat(rawValue) : null;
    return isNumeric(number) ? number : rawValue;
  }

  /**
   * Copyright (C) 2017 salesforce.com, inc.
   */
  const { isArray } = Array;
  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;
  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;
  function isUndefined(obj) {
      return obj === undefined;
  }
  function isFunction(obj) {
      return typeof obj === 'function';
  }
  function isObject(obj) {
      return typeof obj === 'object';
  }
  const proxyToValueMap = new WeakMap();
  function registerProxy(proxy, value) {
      proxyToValueMap.set(proxy, value);
  }
  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;

  function wrapValue(membrane, value) {
      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;
  }
  /**
   * Unwrap property descriptors will set value on original descriptor
   * We only need to unwrap if value is specified
   * @param descriptor external descrpitor provided to define new property on original value
   */
  function unwrapDescriptor(descriptor) {
      if (hasOwnProperty.call(descriptor, 'value')) {
          descriptor.value = unwrap(descriptor.value);
      }
      return descriptor;
  }
  function lockShadowTarget(membrane, shadowTarget, originalTarget) {
      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));
      targetKeys.forEach((key) => {
          let descriptor = getOwnPropertyDescriptor(originalTarget, key);
          // We do not need to wrap the descriptor if configurable
          // Because we can deal with wrapping it when user goes through
          // Get own property descriptor. There is also a chance that this descriptor
          // could change sometime in the future, so we can defer wrapping
          // until we need to
          if (!descriptor.configurable) {
              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);
          }
          ObjectDefineProperty(shadowTarget, key, descriptor);
      });
      preventExtensions(shadowTarget);
  }
  class ReactiveProxyHandler {
      constructor(membrane, value) {
          this.originalTarget = value;
          this.membrane = membrane;
      }
      get(shadowTarget, key) {
          const { originalTarget, membrane } = this;
          const value = originalTarget[key];
          const { valueObserved } = membrane;
          valueObserved(originalTarget, key);
          return membrane.getProxy(value);
      }
      set(shadowTarget, key, value) {
          const { originalTarget, membrane: { valueMutated } } = this;
          const oldValue = originalTarget[key];
          if (oldValue !== value) {
              originalTarget[key] = value;
              valueMutated(originalTarget, key);
          }
          else if (key === 'length' && isArray(originalTarget)) {
              // fix for issue #236: push will add the new index, and by the time length
              // is updated, the internal length is already equal to the new length value
              // therefore, the oldValue is equal to the value. This is the forking logic
              // to support this use case.
              valueMutated(originalTarget, key);
          }
          return true;
      }
      deleteProperty(shadowTarget, key) {
          const { originalTarget, membrane: { valueMutated } } = this;
          delete originalTarget[key];
          valueMutated(originalTarget, key);
          return true;
      }
      apply(shadowTarget, thisArg, argArray) {
          /* No op */
      }
      construct(target, argArray, newTarget) {
          /* No op */
      }
      has(shadowTarget, key) {
          const { originalTarget, membrane: { valueObserved } } = this;
          valueObserved(originalTarget, key);
          return key in originalTarget;
      }
      ownKeys(shadowTarget) {
          const { originalTarget } = this;
          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));
      }
      isExtensible(shadowTarget) {
          const shadowIsExtensible = isExtensible(shadowTarget);
          if (!shadowIsExtensible) {
              return shadowIsExtensible;
          }
          const { originalTarget, membrane } = this;
          const targetIsExtensible = isExtensible(originalTarget);
          if (!targetIsExtensible) {
              lockShadowTarget(membrane, shadowTarget, originalTarget);
          }
          return targetIsExtensible;
      }
      setPrototypeOf(shadowTarget, prototype) {
      }
      getPrototypeOf(shadowTarget) {
          const { originalTarget } = this;
          return getPrototypeOf(originalTarget);
      }
      getOwnPropertyDescriptor(shadowTarget, key) {
          const { originalTarget, membrane } = this;
          const { valueObserved } = this.membrane;
          // keys looked up via hasOwnProperty need to be reactive
          valueObserved(originalTarget, key);
          let desc = getOwnPropertyDescriptor(originalTarget, key);
          if (isUndefined(desc)) {
              return desc;
          }
          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);
          if (!isUndefined(shadowDescriptor)) {
              return shadowDescriptor;
          }
          // Note: by accessing the descriptor, the key is marked as observed
          // but access to the value, setter or getter (if available) cannot observe
          // mutations, just like regular methods, in which case we just do nothing.
          desc = wrapDescriptor(membrane, desc, wrapValue);
          if (!desc.configurable) {
              // If descriptor from original target is not configurable,
              // We must copy the wrapped descriptor over to the shadow target.
              // Otherwise, proxy will throw an invariant error.
              // This is our last chance to lock the value.
              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants
              ObjectDefineProperty(shadowTarget, key, desc);
          }
          return desc;
      }
      preventExtensions(shadowTarget) {
          const { originalTarget, membrane } = this;
          lockShadowTarget(membrane, shadowTarget, originalTarget);
          preventExtensions(originalTarget);
          return true;
      }
      defineProperty(shadowTarget, key, descriptor) {
          const { originalTarget, membrane } = this;
          const { valueMutated } = membrane;
          const { configurable } = descriptor;
          // We have to check for value in descriptor
          // because Object.freeze(proxy) calls this method
          // with only { configurable: false, writeable: false }
          // Additionally, method will only be called with writeable:false
          // if the descriptor has a value, as opposed to getter/setter
          // So we can just check if writable is present and then see if
          // value is present. This eliminates getter and setter descriptors
          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {
              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);
              descriptor.value = originalDescriptor.value;
          }
          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));
          if (configurable === false) {
              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));
          }
          valueMutated(originalTarget, key);
          return true;
      }
  }

  function wrapReadOnlyValue(membrane, value) {
      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;
  }
  class ReadOnlyHandler {
      constructor(membrane, value) {
          this.originalTarget = value;
          this.membrane = membrane;
      }
      get(shadowTarget, key) {
          const { membrane, originalTarget } = this;
          const value = originalTarget[key];
          const { valueObserved } = membrane;
          valueObserved(originalTarget, key);
          return membrane.getReadOnlyProxy(value);
      }
      set(shadowTarget, key, value) {
          return false;
      }
      deleteProperty(shadowTarget, key) {
          return false;
      }
      apply(shadowTarget, thisArg, argArray) {
          /* No op */
      }
      construct(target, argArray, newTarget) {
          /* No op */
      }
      has(shadowTarget, key) {
          const { originalTarget, membrane: { valueObserved } } = this;
          valueObserved(originalTarget, key);
          return key in originalTarget;
      }
      ownKeys(shadowTarget) {
          const { originalTarget } = this;
          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));
      }
      setPrototypeOf(shadowTarget, prototype) {
      }
      getOwnPropertyDescriptor(shadowTarget, key) {
          const { originalTarget, membrane } = this;
          const { valueObserved } = membrane;
          // keys looked up via hasOwnProperty need to be reactive
          valueObserved(originalTarget, key);
          let desc = getOwnPropertyDescriptor(originalTarget, key);
          if (isUndefined(desc)) {
              return desc;
          }
          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);
          if (!isUndefined(shadowDescriptor)) {
              return shadowDescriptor;
          }
          // Note: by accessing the descriptor, the key is marked as observed
          // but access to the value or getter (if available) cannot be observed,
          // just like regular methods, in which case we just do nothing.
          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);
          if (hasOwnProperty.call(desc, 'set')) {
              desc.set = undefined; // readOnly membrane does not allow setters
          }
          if (!desc.configurable) {
              // If descriptor from original target is not configurable,
              // We must copy the wrapped descriptor over to the shadow target.
              // Otherwise, proxy will throw an invariant error.
              // This is our last chance to lock the value.
              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants
              ObjectDefineProperty(shadowTarget, key, desc);
          }
          return desc;
      }
      preventExtensions(shadowTarget) {
          return false;
      }
      defineProperty(shadowTarget, key, descriptor) {
          return false;
      }
  }
  function createShadowTarget(value) {
      let shadowTarget = undefined;
      if (isArray(value)) {
          shadowTarget = [];
      }
      else if (isObject(value)) {
          shadowTarget = {};
      }
      return shadowTarget;
  }
  const ObjectDotPrototype = Object.prototype;
  function defaultValueIsObservable(value) {
      // intentionally checking for null
      if (value === null) {
          return false;
      }
      // treat all non-object types, including undefined, as non-observable values
      if (typeof value !== 'object') {
          return false;
      }
      if (isArray(value)) {
          return true;
      }
      const proto = getPrototypeOf(value);
      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);
  }
  const defaultValueObserved = (obj, key) => {
      /* do nothing */
  };
  const defaultValueMutated = (obj, key) => {
      /* do nothing */
  };
  const defaultValueDistortion = (value) => value;
  function wrapDescriptor(membrane, descriptor, getValue) {
      const { set, get } = descriptor;
      if (hasOwnProperty.call(descriptor, 'value')) {
          descriptor.value = getValue(membrane, descriptor.value);
      }
      else {
          if (!isUndefined(get)) {
              descriptor.get = function () {
                  // invoking the original getter with the original target
                  return getValue(membrane, get.call(unwrap(this)));
              };
          }
          if (!isUndefined(set)) {
              descriptor.set = function (value) {
                  // At this point we don't have a clear indication of whether
                  // or not a valid mutation will occur, we don't have the key,
                  // and we are not sure why and how they are invoking this setter.
                  // Nevertheless we preserve the original semantics by invoking the
                  // original setter with the original target and the unwrapped value
                  set.call(unwrap(this), membrane.unwrapProxy(value));
              };
          }
      }
      return descriptor;
  }
  class ReactiveMembrane {
      constructor(options) {
          this.valueDistortion = defaultValueDistortion;
          this.valueMutated = defaultValueMutated;
          this.valueObserved = defaultValueObserved;
          this.valueIsObservable = defaultValueIsObservable;
          this.objectGraph = new WeakMap();
          if (!isUndefined(options)) {
              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;
              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;
              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;
              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;
              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;
          }
      }
      getProxy(value) {
          const unwrappedValue = unwrap(value);
          const distorted = this.valueDistortion(unwrappedValue);
          if (this.valueIsObservable(distorted)) {
              const o = this.getReactiveState(unwrappedValue, distorted);
              // when trying to extract the writable version of a readonly
              // we return the readonly.
              return o.readOnly === value ? value : o.reactive;
          }
          return distorted;
      }
      getReadOnlyProxy(value) {
          value = unwrap(value);
          const distorted = this.valueDistortion(value);
          if (this.valueIsObservable(distorted)) {
              return this.getReactiveState(value, distorted).readOnly;
          }
          return distorted;
      }
      unwrapProxy(p) {
          return unwrap(p);
      }
      getReactiveState(value, distortedValue) {
          const { objectGraph, } = this;
          let reactiveState = objectGraph.get(distortedValue);
          if (reactiveState) {
              return reactiveState;
          }
          const membrane = this;
          reactiveState = {
              get reactive() {
                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);
                  // caching the reactive proxy after the first time it is accessed
                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);
                  registerProxy(proxy, value);
                  ObjectDefineProperty(this, 'reactive', { value: proxy });
                  return proxy;
              },
              get readOnly() {
                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);
                  // caching the readOnly proxy after the first time it is accessed
                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);
                  registerProxy(proxy, value);
                  ObjectDefineProperty(this, 'readOnly', { value: proxy });
                  return proxy;
              }
          };
          objectGraph.set(distortedValue, reactiveState);
          return reactiveState;
      }
  }
  /** version: 0.26.0 */

  function wrap(data, mutationCallback) {

    let membrane = new ReactiveMembrane({
      valueMutated(target, key) {
        mutationCallback(target, key);
      }

    });
    return {
      data: membrane.getProxy(data),
      membrane: membrane
    };
  }
  function unwrap$1(membrane, observable) {
    let unwrappedData = membrane.unwrapProxy(observable);
    let copy = {};
    Object.keys(unwrappedData).forEach(key => {
      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;
      copy[key] = unwrappedData[key];
    });
    return copy;
  }

  class Component {
    constructor(el, componentForClone = null) {
      this.$el = el;
      const dataAttr = this.$el.getAttribute('x-data');
      const dataExpression = dataAttr === '' ? '{}' : dataAttr;
      const initExpression = this.$el.getAttribute('x-init');
      let dataExtras = {
        $el: this.$el
      };
      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;
      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {
        Object.defineProperty(dataExtras, `$${name}`, {
          get: function get() {
            return callback(canonicalComponentElementReference);
          }
        });
      });
      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);
      // Construct a Proxy-based observable. This will be used to handle reactivity.

      let {
        membrane,
        data
      } = this.wrapDataInObservable(this.unobservedData);
      this.$data = data;
      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add
      // our magic properties to the original data for access.

      this.unobservedData.$el = this.$el;
      this.unobservedData.$refs = this.getRefsProxy();
      this.nextTickStack = [];

      this.unobservedData.$nextTick = callback => {
        this.nextTickStack.push(callback);
      };

      this.watchers = {};

      this.unobservedData.$watch = (property, callback) => {
        if (!this.watchers[property]) this.watchers[property] = [];
        this.watchers[property].push(callback);
      };
      /* MODERN-ONLY:START */
      // We remove this piece of code from the legacy build.
      // In IE11, we have already defined our helpers at this point.
      // Register custom magic properties.


      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {
        Object.defineProperty(this.unobservedData, `$${name}`, {
          get: function get() {
            return callback(canonicalComponentElementReference, this.$el);
          }
        });
      });
      /* MODERN-ONLY:END */

      this.showDirectiveStack = [];
      this.showDirectiveLastElement;
      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));
      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)

      if (initExpression && !componentForClone) {
        // We want to allow data manipulation, but not trigger DOM updates just yet.
        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.
        this.pauseReactivity = true;
        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);
        this.pauseReactivity = false;
      } // Register all our listeners and set all our attribute bindings.
      // If we're cloning a component, the third parameter ensures no duplicate
      // event listeners are registered (the mutation observer will take care of them)


      this.initializeElements(this.$el, () => {}, componentForClone); // Use mutation observer to detect new elements being added within this component at run-time.
      // Alpine's just so darn flexible amirite?

      this.listenForNewElementsToInitialize();

      if (typeof initReturnedCallback === 'function') {
        // Run the callback returned from the "x-init" hook to allow the user to do stuff after
        // Alpine's got it's grubby little paws all over everything.
        initReturnedCallback.call(this.$data);
      }

      componentForClone || setTimeout(() => {
        Alpine.onComponentInitializeds.forEach(callback => callback(this));
      }, 0);
    }

    getUnobservedData() {
      return unwrap$1(this.membrane, this.$data);
    }

    wrapDataInObservable(data) {
      var self = this;
      let updateDom = debounce(function () {
        self.updateElements(self.$el);
      }, 0);
      return wrap(data, (target, key) => {
        if (self.watchers[key]) {
          // If there's a watcher for this specific key, run it.
          self.watchers[key].forEach(callback => callback(target[key]));
        } else if (Array.isArray(target)) {
          // Arrays are special cases, if any of the items change, we consider the array as mutated.
          Object.keys(self.watchers).forEach(fullDotNotationKey => {
            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.
            // For example, when calling push, we would get a mutation for the item's key
            // and a second mutation for the length property.

            if (key === 'length') return;
            dotNotationParts.reduce((comparisonData, part) => {
              if (Object.is(target, comparisonData[part])) {
                self.watchers[fullDotNotationKey].forEach(callback => callback(target));
              }

              return comparisonData[part];
            }, self.unobservedData);
          });
        } else {
          // Let's walk through the watchers with "dot-notation" (foo.bar) and see
          // if this mutation fits any of them.
          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {
            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last "part" doesn't match the current
            // key, then skip it early for performance reasons.

            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation "parts" recursively to find
            // a match, and call the watcher if one's found.

            dotNotationParts.reduce((comparisonData, part) => {
              if (Object.is(target, comparisonData)) {
                // Run the watchers.
                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));
              }

              return comparisonData[part];
            }, self.unobservedData);
          });
        } // Don't react to data changes for cases like the `x-created` hook.


        if (self.pauseReactivity) return;
        updateDom();
      });
    }

    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {
      walk(el, el => {
        // We've hit a component.
        if (el.hasAttribute('x-data')) {
          // If it's not the current one.
          if (!el.isSameNode(this.$el)) {
            // Initialize it if it's not.
            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.

            return false;
          }
        }

        return callback(el);
      });
    }

    initializeElements(rootEl, extraVars = () => {}, componentForClone = false) {
      this.walkAndSkipNestedComponents(rootEl, el => {
        // Don't touch spawns from for loop
        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives

        if (el.__x_inserted_me !== undefined) return false;
        this.initializeElement(el, extraVars, componentForClone ? false : true);
      }, el => {
        if (!componentForClone) el.__x = new Component(el);
      });
      this.executeAndClearRemainingShowDirectiveStack();
      this.executeAndClearNextTickStack(rootEl);
    }

    initializeElement(el, extraVars, shouldRegisterListeners = true) {
      // To support class attribute merging, we have to know what the element's
      // original class attribute looked like for reference.
      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {
        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));
      }

      shouldRegisterListeners && this.registerListeners(el, extraVars);
      this.resolveBoundAttributes(el, true, extraVars);
    }

    updateElements(rootEl, extraVars = () => {}) {
      this.walkAndSkipNestedComponents(rootEl, el => {
        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)
        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;
        this.updateElement(el, extraVars);
      }, el => {
        el.__x = new Component(el);
      });
      this.executeAndClearRemainingShowDirectiveStack();
      this.executeAndClearNextTickStack(rootEl);
    }

    executeAndClearNextTickStack(el) {
      // Skip spawns from alpine directives
      if (el === this.$el && this.nextTickStack.length > 0) {
        // We run the tick stack after the next frame to allow any
        // running transitions to pass the initial show stage.
        requestAnimationFrame(() => {
          while (this.nextTickStack.length > 0) {
            this.nextTickStack.shift()();
          }
        });
      }
    }

    executeAndClearRemainingShowDirectiveStack() {
      // The goal here is to start all the x-show transitions
      // and build a nested promise chain so that elements
      // only hide when the children are finished hiding.
      this.showDirectiveStack.reverse().map(handler => {
        return new Promise((resolve, reject) => {
          handler(resolve, reject);
        });
      }).reduce((promiseChain, promise) => {
        return promiseChain.then(() => {
          return promise.then(finishElement => {
            finishElement();
          });
        });
      }, Promise.resolve(() => {})).catch(e => {
        if (e !== TRANSITION_CANCELLED) throw e;
      }); // We've processed the handler stack. let's clear it.

      this.showDirectiveStack = [];
      this.showDirectiveLastElement = undefined;
    }

    updateElement(el, extraVars) {
      this.resolveBoundAttributes(el, false, extraVars);
    }

    registerListeners(el, extraVars) {
      getXAttrs(el, this).forEach(({
        type,
        value,
        modifiers,
        expression
      }) => {
        switch (type) {
          case 'on':
            registerListener(this, el, value, modifiers, expression, extraVars);
            break;

          case 'model':
            registerModelListener(this, el, modifiers, expression, extraVars);
            break;
        }
      });
    }

    resolveBoundAttributes(el, initialUpdate = false, extraVars) {
      let attrs = getXAttrs(el, this);
      attrs.forEach(({
        type,
        value,
        modifiers,
        expression
      }) => {
        switch (type) {
          case 'model':
            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);
            break;

          case 'bind':
            // The :key binding on an x-for is special, ignore it.
            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;
            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);
            break;

          case 'text':
            var output = this.evaluateReturnExpression(el, expression, extraVars);
            handleTextDirective(el, output, expression);
            break;

          case 'html':
            handleHtmlDirective(this, el, expression, extraVars);
            break;

          case 'show':
            var output = this.evaluateReturnExpression(el, expression, extraVars);
            handleShowDirective(this, el, output, modifiers, initialUpdate);
            break;

          case 'if':
            // If this element also has x-for on it, don't process x-if.
            // We will let the "x-for" directive handle the "if"ing.
            if (attrs.some(i => i.type === 'for')) return;
            var output = this.evaluateReturnExpression(el, expression, extraVars);
            handleIfDirective(this, el, output, initialUpdate, extraVars);
            break;

          case 'for':
            handleForDirective(this, el, expression, initialUpdate, extraVars);
            break;

          case 'cloak':
            el.removeAttribute('x-cloak');
            break;
        }
      });
    }

    evaluateReturnExpression(el, expression, extraVars = () => {}) {
      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {
        $dispatch: this.getDispatchFunction(el)
      }));
    }

    evaluateCommandExpression(el, expression, extraVars = () => {}) {
      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {
        $dispatch: this.getDispatchFunction(el)
      }));
    }

    getDispatchFunction(el) {
      return (event, detail = {}) => {
        el.dispatchEvent(new CustomEvent(event, {
          detail,
          bubbles: true
        }));
      };
    }

    listenForNewElementsToInitialize() {
      const targetNode = this.$el;
      const observerOptions = {
        childList: true,
        attributes: true,
        subtree: true
      };
      const observer = new MutationObserver(mutations => {
        for (let i = 0; i < mutations.length; i++) {
          // Filter out mutations triggered from child components.
          const closestParentComponent = mutations[i].target.closest('[x-data]');
          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;

          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {
            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';
            const rawData = saferEval(this.$el, xAttr, {
              $el: this.$el
            });
            Object.keys(rawData).forEach(key => {
              if (this.$data[key] !== rawData[key]) {
                this.$data[key] = rawData[key];
              }
            });
          }

          if (mutations[i].addedNodes.length > 0) {
            mutations[i].addedNodes.forEach(node => {
              if (node.nodeType !== 1 || node.__x_inserted_me) return;

              if (node.matches('[x-data]') && !node.__x) {
                node.__x = new Component(node);
                return;
              }

              this.initializeElements(node);
            });
          }
        }
      });
      observer.observe(targetNode, observerOptions);
    }

    getRefsProxy() {
      var self = this;
      var refObj = {};
      // One of the goals of this is to not hold elements in memory, but rather re-evaluate
      // the DOM when the system needs something from it. This way, the framework is flexible and
      // friendly to outside DOM changes from libraries like Vue/Livewire.
      // For this reason, I'm using an "on-demand" proxy to fake a "$refs" object.

      return new Proxy(refObj, {
        get(object, property) {
          if (property === '$isAlpineProxy') return true;
          var ref; // We can't just query the DOM because it's hard to filter out refs in
          // nested components.

          self.walkAndSkipNestedComponents(self.$el, el => {
            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {
              ref = el;
            }
          });
          return ref;
        }

      });
    }

  }

  const Alpine = {
    version: "2.8.2",
    pauseMutationObserver: false,
    magicProperties: {},
    onComponentInitializeds: [],
    onBeforeComponentInitializeds: [],
    ignoreFocusedForValueBinding: false,
    start: async function start() {
      if (!isTesting()) {
        await domReady();
      }

      this.discoverComponents(el => {
        this.initializeComponent(el);
      }); // It's easier and more performant to just support Turbolinks than listen
      // to MutationObserver mutations at the document level.

      document.addEventListener("turbolinks:load", () => {
        this.discoverUninitializedComponents(el => {
          this.initializeComponent(el);
        });
      });
      this.listenForNewUninitializedComponentsAtRunTime();
    },
    discoverComponents: function discoverComponents(callback) {
      const rootEls = document.querySelectorAll('[x-data]');
      rootEls.forEach(rootEl => {
        callback(rootEl);
      });
    },
    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {
      const rootEls = (el || document).querySelectorAll('[x-data]');
      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {
        callback(rootEl);
      });
    },
    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {
      const targetNode = document.querySelector('body');
      const observerOptions = {
        childList: true,
        attributes: true,
        subtree: true
      };
      const observer = new MutationObserver(mutations => {
        if (this.pauseMutationObserver) return;

        for (let i = 0; i < mutations.length; i++) {
          if (mutations[i].addedNodes.length > 0) {
            mutations[i].addedNodes.forEach(node => {
              // Discard non-element nodes (like line-breaks)
              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.
              // They will take care of themselves.

              if (node.parentElement && node.parentElement.closest('[x-data]')) return;
              this.discoverUninitializedComponents(el => {
                this.initializeComponent(el);
              }, node.parentElement);
            });
          }
        }
      });
      observer.observe(targetNode, observerOptions);
    },
    initializeComponent: function initializeComponent(el) {
      if (!el.__x) {
        // Wrap in a try/catch so that we don't prevent other components
        // from initializing when one component contains an error.
        try {
          el.__x = new Component(el);
        } catch (error) {
          setTimeout(() => {
            throw error;
          }, 0);
        }
      }
    },
    clone: function clone(component, newEl) {
      if (!newEl.__x) {
        newEl.__x = new Component(newEl, component);
      }
    },
    addMagicProperty: function addMagicProperty(name, callback) {
      this.magicProperties[name] = callback;
    },
    onComponentInitialized: function onComponentInitialized(callback) {
      this.onComponentInitializeds.push(callback);
    },
    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {
      this.onBeforeComponentInitializeds.push(callback);
    }
  };

  if (!isTesting()) {
    window.Alpine = Alpine;

    if (window.deferLoadingAlpine) {
      window.deferLoadingAlpine(function () {
        window.Alpine.start();
      });
    } else {
      window.Alpine.start();
    }
  }

  return Alpine;

})));


/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ "./node_modules/axios/lib/core/buildFullPath.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/axios/lib/core/createError.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ "./node_modules/axios/lib/helpers/isAxiosError.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* provided dependency */ var process = __webpack_require__(/*! process/browser */ "./node_modules/process/browser.js");


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./bootstrap */ "./resources/js/bootstrap.js");

__webpack_require__(/*! alpinejs */ "./node_modules/alpinejs/dist/alpine.js");

__webpack_require__(/*! @mdi/font/css/materialdesignicons.css */ "./node_modules/@mdi/font/css/materialdesignicons.css"); // var container = document.getElementById('editor');
// var editor = new Quill(container);
// require('quill/core/quill');

/***/ }),

/***/ "./resources/js/bootstrap.js":
/*!***********************************!*\
  !*** ./resources/js/bootstrap.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

window._ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/**
 * We'll load the axios HTTP library which allows us to easily issue requests
 * to our Laravel back-end. This library automatically handles sending the
 * CSRF token as a header based on the value of the "XSRF" token cookie.
 */

window.axios = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
window.Quill = __webpack_require__(/*! quill/core/editor */ "./node_modules/quill/core/editor.js");
/**
 * Echo exposes an expressive API for subscribing to channels and listening
 * for events that are broadcast by Laravel. Echo and event broadcasting
 * allows your team to easily build robust real-time web applications.
 */
// import Echo from 'laravel-echo';
// window.Pusher = require('pusher-js');
// window.Echo = new Echo({
//     broadcaster: 'pusher',
//     key: process.env.MIX_PUSHER_APP_KEY,
//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,
//     forceTLS: true
// });

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = __webpack_require__.g.TYPED_ARRAY_SUPPORT !== undefined
  ? __webpack_require__.g.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}


/***/ }),

/***/ "./node_modules/call-bind/callBound.js":
/*!*********************************************!*\
  !*** ./node_modules/call-bind/callBound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

var callBind = __webpack_require__(/*! ./ */ "./node_modules/call-bind/index.js");

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};


/***/ }),

/***/ "./node_modules/call-bind/index.js":
/*!*****************************************!*\
  !*** ./node_modules/call-bind/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var GetIntrinsic = __webpack_require__(/*! get-intrinsic */ "./node_modules/get-intrinsic/index.js");

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}


/***/ }),

/***/ "./node_modules/clone/clone.js":
/*!*************************************!*\
  !*** ./node_modules/clone/clone.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];
var clone = (function() {
'use strict';

function _instanceof(obj, type) {
  return type != null && obj instanceof type;
}

var nativeMap;
try {
  nativeMap = Map;
} catch(_) {
  // maybe a reference error because no `Map`. Give it a dummy value that no
  // value will ever be an instanceof.
  nativeMap = function() {};
}

var nativeSet;
try {
  nativeSet = Set;
} catch(_) {
  nativeSet = function() {};
}

var nativePromise;
try {
  nativePromise = Promise;
} catch(_) {
  nativePromise = function() {};
}

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
 * @param `includeNonEnumerable` - set to true if the non-enumerable properties
 *    should be cloned as well. Non-enumerable properties on the prototype
 *    chain will be ignored. (optional - false by default)
*/
function clone(parent, circular, depth, prototype, includeNonEnumerable) {
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    includeNonEnumerable = circular.includeNonEnumerable;
    circular = circular.circular;
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth === 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (_instanceof(parent, nativeMap)) {
      child = new nativeMap();
    } else if (_instanceof(parent, nativeSet)) {
      child = new nativeSet();
    } else if (_instanceof(parent, nativePromise)) {
      child = new nativePromise(function (resolve, reject) {
        parent.then(function(value) {
          resolve(_clone(value, depth - 1));
        }, function(err) {
          reject(_clone(err, depth - 1));
        });
      });
    } else if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      if (Buffer.allocUnsafe) {
        // Node.js >= 4.5.0
        child = Buffer.allocUnsafe(parent.length);
      } else {
        // Older Node.js versions
        child = new Buffer(parent.length);
      }
      parent.copy(child);
      return child;
    } else if (_instanceof(parent, Error)) {
      child = Object.create(parent);
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    if (_instanceof(parent, nativeMap)) {
      parent.forEach(function(value, key) {
        var keyChild = _clone(key, depth - 1);
        var valueChild = _clone(value, depth - 1);
        child.set(keyChild, valueChild);
      });
    }
    if (_instanceof(parent, nativeSet)) {
      parent.forEach(function(value) {
        var entryChild = _clone(value, depth - 1);
        child.add(entryChild);
      });
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(parent);
      for (var i = 0; i < symbols.length; i++) {
        // Don't need to worry about cloning a symbol because it is a primitive,
        // like a number or string.
        var symbol = symbols[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
          continue;
        }
        child[symbol] = _clone(parent[symbol], depth - 1);
        if (!descriptor.enumerable) {
          Object.defineProperty(child, symbol, {
            enumerable: false
          });
        }
      }
    }

    if (includeNonEnumerable) {
      var allPropertyNames = Object.getOwnPropertyNames(parent);
      for (var i = 0; i < allPropertyNames.length; i++) {
        var propertyName = allPropertyNames[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
        if (descriptor && descriptor.enumerable) {
          continue;
        }
        child[propertyName] = _clone(parent[propertyName], depth - 1);
        Object.defineProperty(child, propertyName, {
          enumerable: false
        });
      }
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
}
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
}
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
}
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
}
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
}
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if ( true && module.exports) {
  module.exports = clone;
}


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@mdi/font/css/materialdesignicons.css":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@mdi/font/css/materialdesignicons.css ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _fonts_materialdesignicons_webfont_eot_v_5_9_55__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fonts/materialdesignicons-webfont.eot?v=5.9.55 */ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.eot?v=5.9.55");
/* harmony import */ var _fonts_materialdesignicons_webfont_eot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../fonts/materialdesignicons-webfont.eot */ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.eot");
/* harmony import */ var _fonts_materialdesignicons_webfont_woff2_v_5_9_55__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../fonts/materialdesignicons-webfont.woff2?v=5.9.55 */ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.woff2?v=5.9.55");
/* harmony import */ var _fonts_materialdesignicons_webfont_woff_v_5_9_55__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../fonts/materialdesignicons-webfont.woff?v=5.9.55 */ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.woff?v=5.9.55");
/* harmony import */ var _fonts_materialdesignicons_webfont_ttf_v_5_9_55__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../fonts/materialdesignicons-webfont.ttf?v=5.9.55 */ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.ttf?v=5.9.55");
// Imports







var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_materialdesignicons_webfont_eot_v_5_9_55__WEBPACK_IMPORTED_MODULE_2__.default);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_materialdesignicons_webfont_eot__WEBPACK_IMPORTED_MODULE_3__.default, { hash: "?#iefix&v=5.9.55" });
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_materialdesignicons_webfont_woff2_v_5_9_55__WEBPACK_IMPORTED_MODULE_4__.default);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_materialdesignicons_webfont_woff_v_5_9_55__WEBPACK_IMPORTED_MODULE_5__.default);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_materialdesignicons_webfont_ttf_v_5_9_55__WEBPACK_IMPORTED_MODULE_6__.default);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/* MaterialDesignIcons.com */\n@font-face {\n  font-family: \"Material Design Icons\";\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\n  src: url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"embedded-opentype\"), url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"woff2\"), url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff\"), url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n.mdi:before,\n.mdi-set {\n  display: inline-block;\n  font: normal normal normal 24px/1 \"Material Design Icons\";\n  font-size: inherit;\n  text-rendering: auto;\n  line-height: inherit;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.mdi-ab-testing::before {\n  content: \"\\F01C9\";\n}\n\n.mdi-abacus::before {\n  content: \"\\F16E0\";\n}\n\n.mdi-abjad-arabic::before {\n  content: \"\\F1328\";\n}\n\n.mdi-abjad-hebrew::before {\n  content: \"\\F1329\";\n}\n\n.mdi-abugida-devanagari::before {\n  content: \"\\F132A\";\n}\n\n.mdi-abugida-thai::before {\n  content: \"\\F132B\";\n}\n\n.mdi-access-point::before {\n  content: \"\\F0003\";\n}\n\n.mdi-access-point-check::before {\n  content: \"\\F1538\";\n}\n\n.mdi-access-point-minus::before {\n  content: \"\\F1539\";\n}\n\n.mdi-access-point-network::before {\n  content: \"\\F0002\";\n}\n\n.mdi-access-point-network-off::before {\n  content: \"\\F0BE1\";\n}\n\n.mdi-access-point-off::before {\n  content: \"\\F1511\";\n}\n\n.mdi-access-point-plus::before {\n  content: \"\\F153A\";\n}\n\n.mdi-access-point-remove::before {\n  content: \"\\F153B\";\n}\n\n.mdi-account::before {\n  content: \"\\F0004\";\n}\n\n.mdi-account-alert::before {\n  content: \"\\F0005\";\n}\n\n.mdi-account-alert-outline::before {\n  content: \"\\F0B50\";\n}\n\n.mdi-account-arrow-left::before {\n  content: \"\\F0B51\";\n}\n\n.mdi-account-arrow-left-outline::before {\n  content: \"\\F0B52\";\n}\n\n.mdi-account-arrow-right::before {\n  content: \"\\F0B53\";\n}\n\n.mdi-account-arrow-right-outline::before {\n  content: \"\\F0B54\";\n}\n\n.mdi-account-box::before {\n  content: \"\\F0006\";\n}\n\n.mdi-account-box-multiple::before {\n  content: \"\\F0934\";\n}\n\n.mdi-account-box-multiple-outline::before {\n  content: \"\\F100A\";\n}\n\n.mdi-account-box-outline::before {\n  content: \"\\F0007\";\n}\n\n.mdi-account-cancel::before {\n  content: \"\\F12DF\";\n}\n\n.mdi-account-cancel-outline::before {\n  content: \"\\F12E0\";\n}\n\n.mdi-account-cash::before {\n  content: \"\\F1097\";\n}\n\n.mdi-account-cash-outline::before {\n  content: \"\\F1098\";\n}\n\n.mdi-account-check::before {\n  content: \"\\F0008\";\n}\n\n.mdi-account-check-outline::before {\n  content: \"\\F0BE2\";\n}\n\n.mdi-account-child::before {\n  content: \"\\F0A89\";\n}\n\n.mdi-account-child-circle::before {\n  content: \"\\F0A8A\";\n}\n\n.mdi-account-child-outline::before {\n  content: \"\\F10C8\";\n}\n\n.mdi-account-circle::before {\n  content: \"\\F0009\";\n}\n\n.mdi-account-circle-outline::before {\n  content: \"\\F0B55\";\n}\n\n.mdi-account-clock::before {\n  content: \"\\F0B56\";\n}\n\n.mdi-account-clock-outline::before {\n  content: \"\\F0B57\";\n}\n\n.mdi-account-cog::before {\n  content: \"\\F1370\";\n}\n\n.mdi-account-cog-outline::before {\n  content: \"\\F1371\";\n}\n\n.mdi-account-convert::before {\n  content: \"\\F000A\";\n}\n\n.mdi-account-convert-outline::before {\n  content: \"\\F1301\";\n}\n\n.mdi-account-cowboy-hat::before {\n  content: \"\\F0E9B\";\n}\n\n.mdi-account-details::before {\n  content: \"\\F0631\";\n}\n\n.mdi-account-details-outline::before {\n  content: \"\\F1372\";\n}\n\n.mdi-account-edit::before {\n  content: \"\\F06BC\";\n}\n\n.mdi-account-edit-outline::before {\n  content: \"\\F0FFB\";\n}\n\n.mdi-account-group::before {\n  content: \"\\F0849\";\n}\n\n.mdi-account-group-outline::before {\n  content: \"\\F0B58\";\n}\n\n.mdi-account-hard-hat::before {\n  content: \"\\F05B5\";\n}\n\n.mdi-account-heart::before {\n  content: \"\\F0899\";\n}\n\n.mdi-account-heart-outline::before {\n  content: \"\\F0BE3\";\n}\n\n.mdi-account-key::before {\n  content: \"\\F000B\";\n}\n\n.mdi-account-key-outline::before {\n  content: \"\\F0BE4\";\n}\n\n.mdi-account-lock::before {\n  content: \"\\F115E\";\n}\n\n.mdi-account-lock-outline::before {\n  content: \"\\F115F\";\n}\n\n.mdi-account-minus::before {\n  content: \"\\F000D\";\n}\n\n.mdi-account-minus-outline::before {\n  content: \"\\F0AEC\";\n}\n\n.mdi-account-multiple::before {\n  content: \"\\F000E\";\n}\n\n.mdi-account-multiple-check::before {\n  content: \"\\F08C5\";\n}\n\n.mdi-account-multiple-check-outline::before {\n  content: \"\\F11FE\";\n}\n\n.mdi-account-multiple-minus::before {\n  content: \"\\F05D3\";\n}\n\n.mdi-account-multiple-minus-outline::before {\n  content: \"\\F0BE5\";\n}\n\n.mdi-account-multiple-outline::before {\n  content: \"\\F000F\";\n}\n\n.mdi-account-multiple-plus::before {\n  content: \"\\F0010\";\n}\n\n.mdi-account-multiple-plus-outline::before {\n  content: \"\\F0800\";\n}\n\n.mdi-account-multiple-remove::before {\n  content: \"\\F120A\";\n}\n\n.mdi-account-multiple-remove-outline::before {\n  content: \"\\F120B\";\n}\n\n.mdi-account-music::before {\n  content: \"\\F0803\";\n}\n\n.mdi-account-music-outline::before {\n  content: \"\\F0CE9\";\n}\n\n.mdi-account-network::before {\n  content: \"\\F0011\";\n}\n\n.mdi-account-network-outline::before {\n  content: \"\\F0BE6\";\n}\n\n.mdi-account-off::before {\n  content: \"\\F0012\";\n}\n\n.mdi-account-off-outline::before {\n  content: \"\\F0BE7\";\n}\n\n.mdi-account-outline::before {\n  content: \"\\F0013\";\n}\n\n.mdi-account-plus::before {\n  content: \"\\F0014\";\n}\n\n.mdi-account-plus-outline::before {\n  content: \"\\F0801\";\n}\n\n.mdi-account-question::before {\n  content: \"\\F0B59\";\n}\n\n.mdi-account-question-outline::before {\n  content: \"\\F0B5A\";\n}\n\n.mdi-account-reactivate::before {\n  content: \"\\F152B\";\n}\n\n.mdi-account-reactivate-outline::before {\n  content: \"\\F152C\";\n}\n\n.mdi-account-remove::before {\n  content: \"\\F0015\";\n}\n\n.mdi-account-remove-outline::before {\n  content: \"\\F0AED\";\n}\n\n.mdi-account-search::before {\n  content: \"\\F0016\";\n}\n\n.mdi-account-search-outline::before {\n  content: \"\\F0935\";\n}\n\n.mdi-account-settings::before {\n  content: \"\\F0630\";\n}\n\n.mdi-account-settings-outline::before {\n  content: \"\\F10C9\";\n}\n\n.mdi-account-star::before {\n  content: \"\\F0017\";\n}\n\n.mdi-account-star-outline::before {\n  content: \"\\F0BE8\";\n}\n\n.mdi-account-supervisor::before {\n  content: \"\\F0A8B\";\n}\n\n.mdi-account-supervisor-circle::before {\n  content: \"\\F0A8C\";\n}\n\n.mdi-account-supervisor-circle-outline::before {\n  content: \"\\F14EC\";\n}\n\n.mdi-account-supervisor-outline::before {\n  content: \"\\F112D\";\n}\n\n.mdi-account-switch::before {\n  content: \"\\F0019\";\n}\n\n.mdi-account-switch-outline::before {\n  content: \"\\F04CB\";\n}\n\n.mdi-account-tie::before {\n  content: \"\\F0CE3\";\n}\n\n.mdi-account-tie-outline::before {\n  content: \"\\F10CA\";\n}\n\n.mdi-account-tie-voice::before {\n  content: \"\\F1308\";\n}\n\n.mdi-account-tie-voice-off::before {\n  content: \"\\F130A\";\n}\n\n.mdi-account-tie-voice-off-outline::before {\n  content: \"\\F130B\";\n}\n\n.mdi-account-tie-voice-outline::before {\n  content: \"\\F1309\";\n}\n\n.mdi-account-voice::before {\n  content: \"\\F05CB\";\n}\n\n.mdi-adjust::before {\n  content: \"\\F001A\";\n}\n\n.mdi-adobe::before {\n  content: \"\\F0936\";\n}\n\n.mdi-adobe-acrobat::before {\n  content: \"\\F0F9D\";\n}\n\n.mdi-air-conditioner::before {\n  content: \"\\F001B\";\n}\n\n.mdi-air-filter::before {\n  content: \"\\F0D43\";\n}\n\n.mdi-air-horn::before {\n  content: \"\\F0DAC\";\n}\n\n.mdi-air-humidifier::before {\n  content: \"\\F1099\";\n}\n\n.mdi-air-humidifier-off::before {\n  content: \"\\F1466\";\n}\n\n.mdi-air-purifier::before {\n  content: \"\\F0D44\";\n}\n\n.mdi-airbag::before {\n  content: \"\\F0BE9\";\n}\n\n.mdi-airballoon::before {\n  content: \"\\F001C\";\n}\n\n.mdi-airballoon-outline::before {\n  content: \"\\F100B\";\n}\n\n.mdi-airplane::before {\n  content: \"\\F001D\";\n}\n\n.mdi-airplane-landing::before {\n  content: \"\\F05D4\";\n}\n\n.mdi-airplane-off::before {\n  content: \"\\F001E\";\n}\n\n.mdi-airplane-takeoff::before {\n  content: \"\\F05D5\";\n}\n\n.mdi-airport::before {\n  content: \"\\F084B\";\n}\n\n.mdi-alarm::before {\n  content: \"\\F0020\";\n}\n\n.mdi-alarm-bell::before {\n  content: \"\\F078E\";\n}\n\n.mdi-alarm-check::before {\n  content: \"\\F0021\";\n}\n\n.mdi-alarm-light::before {\n  content: \"\\F078F\";\n}\n\n.mdi-alarm-light-off::before {\n  content: \"\\F171E\";\n}\n\n.mdi-alarm-light-off-outline::before {\n  content: \"\\F171F\";\n}\n\n.mdi-alarm-light-outline::before {\n  content: \"\\F0BEA\";\n}\n\n.mdi-alarm-multiple::before {\n  content: \"\\F0022\";\n}\n\n.mdi-alarm-note::before {\n  content: \"\\F0E71\";\n}\n\n.mdi-alarm-note-off::before {\n  content: \"\\F0E72\";\n}\n\n.mdi-alarm-off::before {\n  content: \"\\F0023\";\n}\n\n.mdi-alarm-panel::before {\n  content: \"\\F15C4\";\n}\n\n.mdi-alarm-panel-outline::before {\n  content: \"\\F15C5\";\n}\n\n.mdi-alarm-plus::before {\n  content: \"\\F0024\";\n}\n\n.mdi-alarm-snooze::before {\n  content: \"\\F068E\";\n}\n\n.mdi-album::before {\n  content: \"\\F0025\";\n}\n\n.mdi-alert::before {\n  content: \"\\F0026\";\n}\n\n.mdi-alert-box::before {\n  content: \"\\F0027\";\n}\n\n.mdi-alert-box-outline::before {\n  content: \"\\F0CE4\";\n}\n\n.mdi-alert-circle::before {\n  content: \"\\F0028\";\n}\n\n.mdi-alert-circle-check::before {\n  content: \"\\F11ED\";\n}\n\n.mdi-alert-circle-check-outline::before {\n  content: \"\\F11EE\";\n}\n\n.mdi-alert-circle-outline::before {\n  content: \"\\F05D6\";\n}\n\n.mdi-alert-decagram::before {\n  content: \"\\F06BD\";\n}\n\n.mdi-alert-decagram-outline::before {\n  content: \"\\F0CE5\";\n}\n\n.mdi-alert-minus::before {\n  content: \"\\F14BB\";\n}\n\n.mdi-alert-minus-outline::before {\n  content: \"\\F14BE\";\n}\n\n.mdi-alert-octagon::before {\n  content: \"\\F0029\";\n}\n\n.mdi-alert-octagon-outline::before {\n  content: \"\\F0CE6\";\n}\n\n.mdi-alert-octagram::before {\n  content: \"\\F0767\";\n}\n\n.mdi-alert-octagram-outline::before {\n  content: \"\\F0CE7\";\n}\n\n.mdi-alert-outline::before {\n  content: \"\\F002A\";\n}\n\n.mdi-alert-plus::before {\n  content: \"\\F14BA\";\n}\n\n.mdi-alert-plus-outline::before {\n  content: \"\\F14BD\";\n}\n\n.mdi-alert-remove::before {\n  content: \"\\F14BC\";\n}\n\n.mdi-alert-remove-outline::before {\n  content: \"\\F14BF\";\n}\n\n.mdi-alert-rhombus::before {\n  content: \"\\F11CE\";\n}\n\n.mdi-alert-rhombus-outline::before {\n  content: \"\\F11CF\";\n}\n\n.mdi-alien::before {\n  content: \"\\F089A\";\n}\n\n.mdi-alien-outline::before {\n  content: \"\\F10CB\";\n}\n\n.mdi-align-horizontal-center::before {\n  content: \"\\F11C3\";\n}\n\n.mdi-align-horizontal-left::before {\n  content: \"\\F11C2\";\n}\n\n.mdi-align-horizontal-right::before {\n  content: \"\\F11C4\";\n}\n\n.mdi-align-vertical-bottom::before {\n  content: \"\\F11C5\";\n}\n\n.mdi-align-vertical-center::before {\n  content: \"\\F11C6\";\n}\n\n.mdi-align-vertical-top::before {\n  content: \"\\F11C7\";\n}\n\n.mdi-all-inclusive::before {\n  content: \"\\F06BE\";\n}\n\n.mdi-allergy::before {\n  content: \"\\F1258\";\n}\n\n.mdi-alpha::before {\n  content: \"\\F002B\";\n}\n\n.mdi-alpha-a::before {\n  content: \"\\F0AEE\";\n}\n\n.mdi-alpha-a-box::before {\n  content: \"\\F0B08\";\n}\n\n.mdi-alpha-a-box-outline::before {\n  content: \"\\F0BEB\";\n}\n\n.mdi-alpha-a-circle::before {\n  content: \"\\F0BEC\";\n}\n\n.mdi-alpha-a-circle-outline::before {\n  content: \"\\F0BED\";\n}\n\n.mdi-alpha-b::before {\n  content: \"\\F0AEF\";\n}\n\n.mdi-alpha-b-box::before {\n  content: \"\\F0B09\";\n}\n\n.mdi-alpha-b-box-outline::before {\n  content: \"\\F0BEE\";\n}\n\n.mdi-alpha-b-circle::before {\n  content: \"\\F0BEF\";\n}\n\n.mdi-alpha-b-circle-outline::before {\n  content: \"\\F0BF0\";\n}\n\n.mdi-alpha-c::before {\n  content: \"\\F0AF0\";\n}\n\n.mdi-alpha-c-box::before {\n  content: \"\\F0B0A\";\n}\n\n.mdi-alpha-c-box-outline::before {\n  content: \"\\F0BF1\";\n}\n\n.mdi-alpha-c-circle::before {\n  content: \"\\F0BF2\";\n}\n\n.mdi-alpha-c-circle-outline::before {\n  content: \"\\F0BF3\";\n}\n\n.mdi-alpha-d::before {\n  content: \"\\F0AF1\";\n}\n\n.mdi-alpha-d-box::before {\n  content: \"\\F0B0B\";\n}\n\n.mdi-alpha-d-box-outline::before {\n  content: \"\\F0BF4\";\n}\n\n.mdi-alpha-d-circle::before {\n  content: \"\\F0BF5\";\n}\n\n.mdi-alpha-d-circle-outline::before {\n  content: \"\\F0BF6\";\n}\n\n.mdi-alpha-e::before {\n  content: \"\\F0AF2\";\n}\n\n.mdi-alpha-e-box::before {\n  content: \"\\F0B0C\";\n}\n\n.mdi-alpha-e-box-outline::before {\n  content: \"\\F0BF7\";\n}\n\n.mdi-alpha-e-circle::before {\n  content: \"\\F0BF8\";\n}\n\n.mdi-alpha-e-circle-outline::before {\n  content: \"\\F0BF9\";\n}\n\n.mdi-alpha-f::before {\n  content: \"\\F0AF3\";\n}\n\n.mdi-alpha-f-box::before {\n  content: \"\\F0B0D\";\n}\n\n.mdi-alpha-f-box-outline::before {\n  content: \"\\F0BFA\";\n}\n\n.mdi-alpha-f-circle::before {\n  content: \"\\F0BFB\";\n}\n\n.mdi-alpha-f-circle-outline::before {\n  content: \"\\F0BFC\";\n}\n\n.mdi-alpha-g::before {\n  content: \"\\F0AF4\";\n}\n\n.mdi-alpha-g-box::before {\n  content: \"\\F0B0E\";\n}\n\n.mdi-alpha-g-box-outline::before {\n  content: \"\\F0BFD\";\n}\n\n.mdi-alpha-g-circle::before {\n  content: \"\\F0BFE\";\n}\n\n.mdi-alpha-g-circle-outline::before {\n  content: \"\\F0BFF\";\n}\n\n.mdi-alpha-h::before {\n  content: \"\\F0AF5\";\n}\n\n.mdi-alpha-h-box::before {\n  content: \"\\F0B0F\";\n}\n\n.mdi-alpha-h-box-outline::before {\n  content: \"\\F0C00\";\n}\n\n.mdi-alpha-h-circle::before {\n  content: \"\\F0C01\";\n}\n\n.mdi-alpha-h-circle-outline::before {\n  content: \"\\F0C02\";\n}\n\n.mdi-alpha-i::before {\n  content: \"\\F0AF6\";\n}\n\n.mdi-alpha-i-box::before {\n  content: \"\\F0B10\";\n}\n\n.mdi-alpha-i-box-outline::before {\n  content: \"\\F0C03\";\n}\n\n.mdi-alpha-i-circle::before {\n  content: \"\\F0C04\";\n}\n\n.mdi-alpha-i-circle-outline::before {\n  content: \"\\F0C05\";\n}\n\n.mdi-alpha-j::before {\n  content: \"\\F0AF7\";\n}\n\n.mdi-alpha-j-box::before {\n  content: \"\\F0B11\";\n}\n\n.mdi-alpha-j-box-outline::before {\n  content: \"\\F0C06\";\n}\n\n.mdi-alpha-j-circle::before {\n  content: \"\\F0C07\";\n}\n\n.mdi-alpha-j-circle-outline::before {\n  content: \"\\F0C08\";\n}\n\n.mdi-alpha-k::before {\n  content: \"\\F0AF8\";\n}\n\n.mdi-alpha-k-box::before {\n  content: \"\\F0B12\";\n}\n\n.mdi-alpha-k-box-outline::before {\n  content: \"\\F0C09\";\n}\n\n.mdi-alpha-k-circle::before {\n  content: \"\\F0C0A\";\n}\n\n.mdi-alpha-k-circle-outline::before {\n  content: \"\\F0C0B\";\n}\n\n.mdi-alpha-l::before {\n  content: \"\\F0AF9\";\n}\n\n.mdi-alpha-l-box::before {\n  content: \"\\F0B13\";\n}\n\n.mdi-alpha-l-box-outline::before {\n  content: \"\\F0C0C\";\n}\n\n.mdi-alpha-l-circle::before {\n  content: \"\\F0C0D\";\n}\n\n.mdi-alpha-l-circle-outline::before {\n  content: \"\\F0C0E\";\n}\n\n.mdi-alpha-m::before {\n  content: \"\\F0AFA\";\n}\n\n.mdi-alpha-m-box::before {\n  content: \"\\F0B14\";\n}\n\n.mdi-alpha-m-box-outline::before {\n  content: \"\\F0C0F\";\n}\n\n.mdi-alpha-m-circle::before {\n  content: \"\\F0C10\";\n}\n\n.mdi-alpha-m-circle-outline::before {\n  content: \"\\F0C11\";\n}\n\n.mdi-alpha-n::before {\n  content: \"\\F0AFB\";\n}\n\n.mdi-alpha-n-box::before {\n  content: \"\\F0B15\";\n}\n\n.mdi-alpha-n-box-outline::before {\n  content: \"\\F0C12\";\n}\n\n.mdi-alpha-n-circle::before {\n  content: \"\\F0C13\";\n}\n\n.mdi-alpha-n-circle-outline::before {\n  content: \"\\F0C14\";\n}\n\n.mdi-alpha-o::before {\n  content: \"\\F0AFC\";\n}\n\n.mdi-alpha-o-box::before {\n  content: \"\\F0B16\";\n}\n\n.mdi-alpha-o-box-outline::before {\n  content: \"\\F0C15\";\n}\n\n.mdi-alpha-o-circle::before {\n  content: \"\\F0C16\";\n}\n\n.mdi-alpha-o-circle-outline::before {\n  content: \"\\F0C17\";\n}\n\n.mdi-alpha-p::before {\n  content: \"\\F0AFD\";\n}\n\n.mdi-alpha-p-box::before {\n  content: \"\\F0B17\";\n}\n\n.mdi-alpha-p-box-outline::before {\n  content: \"\\F0C18\";\n}\n\n.mdi-alpha-p-circle::before {\n  content: \"\\F0C19\";\n}\n\n.mdi-alpha-p-circle-outline::before {\n  content: \"\\F0C1A\";\n}\n\n.mdi-alpha-q::before {\n  content: \"\\F0AFE\";\n}\n\n.mdi-alpha-q-box::before {\n  content: \"\\F0B18\";\n}\n\n.mdi-alpha-q-box-outline::before {\n  content: \"\\F0C1B\";\n}\n\n.mdi-alpha-q-circle::before {\n  content: \"\\F0C1C\";\n}\n\n.mdi-alpha-q-circle-outline::before {\n  content: \"\\F0C1D\";\n}\n\n.mdi-alpha-r::before {\n  content: \"\\F0AFF\";\n}\n\n.mdi-alpha-r-box::before {\n  content: \"\\F0B19\";\n}\n\n.mdi-alpha-r-box-outline::before {\n  content: \"\\F0C1E\";\n}\n\n.mdi-alpha-r-circle::before {\n  content: \"\\F0C1F\";\n}\n\n.mdi-alpha-r-circle-outline::before {\n  content: \"\\F0C20\";\n}\n\n.mdi-alpha-s::before {\n  content: \"\\F0B00\";\n}\n\n.mdi-alpha-s-box::before {\n  content: \"\\F0B1A\";\n}\n\n.mdi-alpha-s-box-outline::before {\n  content: \"\\F0C21\";\n}\n\n.mdi-alpha-s-circle::before {\n  content: \"\\F0C22\";\n}\n\n.mdi-alpha-s-circle-outline::before {\n  content: \"\\F0C23\";\n}\n\n.mdi-alpha-t::before {\n  content: \"\\F0B01\";\n}\n\n.mdi-alpha-t-box::before {\n  content: \"\\F0B1B\";\n}\n\n.mdi-alpha-t-box-outline::before {\n  content: \"\\F0C24\";\n}\n\n.mdi-alpha-t-circle::before {\n  content: \"\\F0C25\";\n}\n\n.mdi-alpha-t-circle-outline::before {\n  content: \"\\F0C26\";\n}\n\n.mdi-alpha-u::before {\n  content: \"\\F0B02\";\n}\n\n.mdi-alpha-u-box::before {\n  content: \"\\F0B1C\";\n}\n\n.mdi-alpha-u-box-outline::before {\n  content: \"\\F0C27\";\n}\n\n.mdi-alpha-u-circle::before {\n  content: \"\\F0C28\";\n}\n\n.mdi-alpha-u-circle-outline::before {\n  content: \"\\F0C29\";\n}\n\n.mdi-alpha-v::before {\n  content: \"\\F0B03\";\n}\n\n.mdi-alpha-v-box::before {\n  content: \"\\F0B1D\";\n}\n\n.mdi-alpha-v-box-outline::before {\n  content: \"\\F0C2A\";\n}\n\n.mdi-alpha-v-circle::before {\n  content: \"\\F0C2B\";\n}\n\n.mdi-alpha-v-circle-outline::before {\n  content: \"\\F0C2C\";\n}\n\n.mdi-alpha-w::before {\n  content: \"\\F0B04\";\n}\n\n.mdi-alpha-w-box::before {\n  content: \"\\F0B1E\";\n}\n\n.mdi-alpha-w-box-outline::before {\n  content: \"\\F0C2D\";\n}\n\n.mdi-alpha-w-circle::before {\n  content: \"\\F0C2E\";\n}\n\n.mdi-alpha-w-circle-outline::before {\n  content: \"\\F0C2F\";\n}\n\n.mdi-alpha-x::before {\n  content: \"\\F0B05\";\n}\n\n.mdi-alpha-x-box::before {\n  content: \"\\F0B1F\";\n}\n\n.mdi-alpha-x-box-outline::before {\n  content: \"\\F0C30\";\n}\n\n.mdi-alpha-x-circle::before {\n  content: \"\\F0C31\";\n}\n\n.mdi-alpha-x-circle-outline::before {\n  content: \"\\F0C32\";\n}\n\n.mdi-alpha-y::before {\n  content: \"\\F0B06\";\n}\n\n.mdi-alpha-y-box::before {\n  content: \"\\F0B20\";\n}\n\n.mdi-alpha-y-box-outline::before {\n  content: \"\\F0C33\";\n}\n\n.mdi-alpha-y-circle::before {\n  content: \"\\F0C34\";\n}\n\n.mdi-alpha-y-circle-outline::before {\n  content: \"\\F0C35\";\n}\n\n.mdi-alpha-z::before {\n  content: \"\\F0B07\";\n}\n\n.mdi-alpha-z-box::before {\n  content: \"\\F0B21\";\n}\n\n.mdi-alpha-z-box-outline::before {\n  content: \"\\F0C36\";\n}\n\n.mdi-alpha-z-circle::before {\n  content: \"\\F0C37\";\n}\n\n.mdi-alpha-z-circle-outline::before {\n  content: \"\\F0C38\";\n}\n\n.mdi-alphabet-aurebesh::before {\n  content: \"\\F132C\";\n}\n\n.mdi-alphabet-cyrillic::before {\n  content: \"\\F132D\";\n}\n\n.mdi-alphabet-greek::before {\n  content: \"\\F132E\";\n}\n\n.mdi-alphabet-latin::before {\n  content: \"\\F132F\";\n}\n\n.mdi-alphabet-piqad::before {\n  content: \"\\F1330\";\n}\n\n.mdi-alphabet-tengwar::before {\n  content: \"\\F1337\";\n}\n\n.mdi-alphabetical::before {\n  content: \"\\F002C\";\n}\n\n.mdi-alphabetical-off::before {\n  content: \"\\F100C\";\n}\n\n.mdi-alphabetical-variant::before {\n  content: \"\\F100D\";\n}\n\n.mdi-alphabetical-variant-off::before {\n  content: \"\\F100E\";\n}\n\n.mdi-altimeter::before {\n  content: \"\\F05D7\";\n}\n\n.mdi-amazon::before {\n  content: \"\\F002D\";\n}\n\n.mdi-amazon-alexa::before {\n  content: \"\\F08C6\";\n}\n\n.mdi-ambulance::before {\n  content: \"\\F002F\";\n}\n\n.mdi-ammunition::before {\n  content: \"\\F0CE8\";\n}\n\n.mdi-ampersand::before {\n  content: \"\\F0A8D\";\n}\n\n.mdi-amplifier::before {\n  content: \"\\F0030\";\n}\n\n.mdi-amplifier-off::before {\n  content: \"\\F11B5\";\n}\n\n.mdi-anchor::before {\n  content: \"\\F0031\";\n}\n\n.mdi-android::before {\n  content: \"\\F0032\";\n}\n\n.mdi-android-auto::before {\n  content: \"\\F0A8E\";\n}\n\n.mdi-android-debug-bridge::before {\n  content: \"\\F0033\";\n}\n\n.mdi-android-messages::before {\n  content: \"\\F0D45\";\n}\n\n.mdi-android-studio::before {\n  content: \"\\F0034\";\n}\n\n.mdi-angle-acute::before {\n  content: \"\\F0937\";\n}\n\n.mdi-angle-obtuse::before {\n  content: \"\\F0938\";\n}\n\n.mdi-angle-right::before {\n  content: \"\\F0939\";\n}\n\n.mdi-angular::before {\n  content: \"\\F06B2\";\n}\n\n.mdi-angularjs::before {\n  content: \"\\F06BF\";\n}\n\n.mdi-animation::before {\n  content: \"\\F05D8\";\n}\n\n.mdi-animation-outline::before {\n  content: \"\\F0A8F\";\n}\n\n.mdi-animation-play::before {\n  content: \"\\F093A\";\n}\n\n.mdi-animation-play-outline::before {\n  content: \"\\F0A90\";\n}\n\n.mdi-ansible::before {\n  content: \"\\F109A\";\n}\n\n.mdi-antenna::before {\n  content: \"\\F1119\";\n}\n\n.mdi-anvil::before {\n  content: \"\\F089B\";\n}\n\n.mdi-apache-kafka::before {\n  content: \"\\F100F\";\n}\n\n.mdi-api::before {\n  content: \"\\F109B\";\n}\n\n.mdi-api-off::before {\n  content: \"\\F1257\";\n}\n\n.mdi-apple::before {\n  content: \"\\F0035\";\n}\n\n.mdi-apple-airplay::before {\n  content: \"\\F001F\";\n}\n\n.mdi-apple-finder::before {\n  content: \"\\F0036\";\n}\n\n.mdi-apple-icloud::before {\n  content: \"\\F0038\";\n}\n\n.mdi-apple-ios::before {\n  content: \"\\F0037\";\n}\n\n.mdi-apple-keyboard-caps::before {\n  content: \"\\F0632\";\n}\n\n.mdi-apple-keyboard-command::before {\n  content: \"\\F0633\";\n}\n\n.mdi-apple-keyboard-control::before {\n  content: \"\\F0634\";\n}\n\n.mdi-apple-keyboard-option::before {\n  content: \"\\F0635\";\n}\n\n.mdi-apple-keyboard-shift::before {\n  content: \"\\F0636\";\n}\n\n.mdi-apple-safari::before {\n  content: \"\\F0039\";\n}\n\n.mdi-application::before {\n  content: \"\\F0614\";\n}\n\n.mdi-application-cog::before {\n  content: \"\\F1577\";\n}\n\n.mdi-application-export::before {\n  content: \"\\F0DAD\";\n}\n\n.mdi-application-import::before {\n  content: \"\\F0DAE\";\n}\n\n.mdi-application-settings::before {\n  content: \"\\F1555\";\n}\n\n.mdi-approximately-equal::before {\n  content: \"\\F0F9E\";\n}\n\n.mdi-approximately-equal-box::before {\n  content: \"\\F0F9F\";\n}\n\n.mdi-apps::before {\n  content: \"\\F003B\";\n}\n\n.mdi-apps-box::before {\n  content: \"\\F0D46\";\n}\n\n.mdi-arch::before {\n  content: \"\\F08C7\";\n}\n\n.mdi-archive::before {\n  content: \"\\F003C\";\n}\n\n.mdi-archive-alert::before {\n  content: \"\\F14FD\";\n}\n\n.mdi-archive-alert-outline::before {\n  content: \"\\F14FE\";\n}\n\n.mdi-archive-arrow-down::before {\n  content: \"\\F1259\";\n}\n\n.mdi-archive-arrow-down-outline::before {\n  content: \"\\F125A\";\n}\n\n.mdi-archive-arrow-up::before {\n  content: \"\\F125B\";\n}\n\n.mdi-archive-arrow-up-outline::before {\n  content: \"\\F125C\";\n}\n\n.mdi-archive-outline::before {\n  content: \"\\F120E\";\n}\n\n.mdi-arm-flex::before {\n  content: \"\\F0FD7\";\n}\n\n.mdi-arm-flex-outline::before {\n  content: \"\\F0FD6\";\n}\n\n.mdi-arrange-bring-forward::before {\n  content: \"\\F003D\";\n}\n\n.mdi-arrange-bring-to-front::before {\n  content: \"\\F003E\";\n}\n\n.mdi-arrange-send-backward::before {\n  content: \"\\F003F\";\n}\n\n.mdi-arrange-send-to-back::before {\n  content: \"\\F0040\";\n}\n\n.mdi-arrow-all::before {\n  content: \"\\F0041\";\n}\n\n.mdi-arrow-bottom-left::before {\n  content: \"\\F0042\";\n}\n\n.mdi-arrow-bottom-left-bold-outline::before {\n  content: \"\\F09B7\";\n}\n\n.mdi-arrow-bottom-left-thick::before {\n  content: \"\\F09B8\";\n}\n\n.mdi-arrow-bottom-left-thin-circle-outline::before {\n  content: \"\\F1596\";\n}\n\n.mdi-arrow-bottom-right::before {\n  content: \"\\F0043\";\n}\n\n.mdi-arrow-bottom-right-bold-outline::before {\n  content: \"\\F09B9\";\n}\n\n.mdi-arrow-bottom-right-thick::before {\n  content: \"\\F09BA\";\n}\n\n.mdi-arrow-bottom-right-thin-circle-outline::before {\n  content: \"\\F1595\";\n}\n\n.mdi-arrow-collapse::before {\n  content: \"\\F0615\";\n}\n\n.mdi-arrow-collapse-all::before {\n  content: \"\\F0044\";\n}\n\n.mdi-arrow-collapse-down::before {\n  content: \"\\F0792\";\n}\n\n.mdi-arrow-collapse-horizontal::before {\n  content: \"\\F084C\";\n}\n\n.mdi-arrow-collapse-left::before {\n  content: \"\\F0793\";\n}\n\n.mdi-arrow-collapse-right::before {\n  content: \"\\F0794\";\n}\n\n.mdi-arrow-collapse-up::before {\n  content: \"\\F0795\";\n}\n\n.mdi-arrow-collapse-vertical::before {\n  content: \"\\F084D\";\n}\n\n.mdi-arrow-decision::before {\n  content: \"\\F09BB\";\n}\n\n.mdi-arrow-decision-auto::before {\n  content: \"\\F09BC\";\n}\n\n.mdi-arrow-decision-auto-outline::before {\n  content: \"\\F09BD\";\n}\n\n.mdi-arrow-decision-outline::before {\n  content: \"\\F09BE\";\n}\n\n.mdi-arrow-down::before {\n  content: \"\\F0045\";\n}\n\n.mdi-arrow-down-bold::before {\n  content: \"\\F072E\";\n}\n\n.mdi-arrow-down-bold-box::before {\n  content: \"\\F072F\";\n}\n\n.mdi-arrow-down-bold-box-outline::before {\n  content: \"\\F0730\";\n}\n\n.mdi-arrow-down-bold-circle::before {\n  content: \"\\F0047\";\n}\n\n.mdi-arrow-down-bold-circle-outline::before {\n  content: \"\\F0048\";\n}\n\n.mdi-arrow-down-bold-hexagon-outline::before {\n  content: \"\\F0049\";\n}\n\n.mdi-arrow-down-bold-outline::before {\n  content: \"\\F09BF\";\n}\n\n.mdi-arrow-down-box::before {\n  content: \"\\F06C0\";\n}\n\n.mdi-arrow-down-circle::before {\n  content: \"\\F0CDB\";\n}\n\n.mdi-arrow-down-circle-outline::before {\n  content: \"\\F0CDC\";\n}\n\n.mdi-arrow-down-drop-circle::before {\n  content: \"\\F004A\";\n}\n\n.mdi-arrow-down-drop-circle-outline::before {\n  content: \"\\F004B\";\n}\n\n.mdi-arrow-down-thick::before {\n  content: \"\\F0046\";\n}\n\n.mdi-arrow-down-thin-circle-outline::before {\n  content: \"\\F1599\";\n}\n\n.mdi-arrow-expand::before {\n  content: \"\\F0616\";\n}\n\n.mdi-arrow-expand-all::before {\n  content: \"\\F004C\";\n}\n\n.mdi-arrow-expand-down::before {\n  content: \"\\F0796\";\n}\n\n.mdi-arrow-expand-horizontal::before {\n  content: \"\\F084E\";\n}\n\n.mdi-arrow-expand-left::before {\n  content: \"\\F0797\";\n}\n\n.mdi-arrow-expand-right::before {\n  content: \"\\F0798\";\n}\n\n.mdi-arrow-expand-up::before {\n  content: \"\\F0799\";\n}\n\n.mdi-arrow-expand-vertical::before {\n  content: \"\\F084F\";\n}\n\n.mdi-arrow-horizontal-lock::before {\n  content: \"\\F115B\";\n}\n\n.mdi-arrow-left::before {\n  content: \"\\F004D\";\n}\n\n.mdi-arrow-left-bold::before {\n  content: \"\\F0731\";\n}\n\n.mdi-arrow-left-bold-box::before {\n  content: \"\\F0732\";\n}\n\n.mdi-arrow-left-bold-box-outline::before {\n  content: \"\\F0733\";\n}\n\n.mdi-arrow-left-bold-circle::before {\n  content: \"\\F004F\";\n}\n\n.mdi-arrow-left-bold-circle-outline::before {\n  content: \"\\F0050\";\n}\n\n.mdi-arrow-left-bold-hexagon-outline::before {\n  content: \"\\F0051\";\n}\n\n.mdi-arrow-left-bold-outline::before {\n  content: \"\\F09C0\";\n}\n\n.mdi-arrow-left-box::before {\n  content: \"\\F06C1\";\n}\n\n.mdi-arrow-left-circle::before {\n  content: \"\\F0CDD\";\n}\n\n.mdi-arrow-left-circle-outline::before {\n  content: \"\\F0CDE\";\n}\n\n.mdi-arrow-left-drop-circle::before {\n  content: \"\\F0052\";\n}\n\n.mdi-arrow-left-drop-circle-outline::before {\n  content: \"\\F0053\";\n}\n\n.mdi-arrow-left-right::before {\n  content: \"\\F0E73\";\n}\n\n.mdi-arrow-left-right-bold::before {\n  content: \"\\F0E74\";\n}\n\n.mdi-arrow-left-right-bold-outline::before {\n  content: \"\\F09C1\";\n}\n\n.mdi-arrow-left-thick::before {\n  content: \"\\F004E\";\n}\n\n.mdi-arrow-left-thin-circle-outline::before {\n  content: \"\\F159A\";\n}\n\n.mdi-arrow-right::before {\n  content: \"\\F0054\";\n}\n\n.mdi-arrow-right-bold::before {\n  content: \"\\F0734\";\n}\n\n.mdi-arrow-right-bold-box::before {\n  content: \"\\F0735\";\n}\n\n.mdi-arrow-right-bold-box-outline::before {\n  content: \"\\F0736\";\n}\n\n.mdi-arrow-right-bold-circle::before {\n  content: \"\\F0056\";\n}\n\n.mdi-arrow-right-bold-circle-outline::before {\n  content: \"\\F0057\";\n}\n\n.mdi-arrow-right-bold-hexagon-outline::before {\n  content: \"\\F0058\";\n}\n\n.mdi-arrow-right-bold-outline::before {\n  content: \"\\F09C2\";\n}\n\n.mdi-arrow-right-box::before {\n  content: \"\\F06C2\";\n}\n\n.mdi-arrow-right-circle::before {\n  content: \"\\F0CDF\";\n}\n\n.mdi-arrow-right-circle-outline::before {\n  content: \"\\F0CE0\";\n}\n\n.mdi-arrow-right-drop-circle::before {\n  content: \"\\F0059\";\n}\n\n.mdi-arrow-right-drop-circle-outline::before {\n  content: \"\\F005A\";\n}\n\n.mdi-arrow-right-thick::before {\n  content: \"\\F0055\";\n}\n\n.mdi-arrow-right-thin-circle-outline::before {\n  content: \"\\F1598\";\n}\n\n.mdi-arrow-split-horizontal::before {\n  content: \"\\F093B\";\n}\n\n.mdi-arrow-split-vertical::before {\n  content: \"\\F093C\";\n}\n\n.mdi-arrow-top-left::before {\n  content: \"\\F005B\";\n}\n\n.mdi-arrow-top-left-bold-outline::before {\n  content: \"\\F09C3\";\n}\n\n.mdi-arrow-top-left-bottom-right::before {\n  content: \"\\F0E75\";\n}\n\n.mdi-arrow-top-left-bottom-right-bold::before {\n  content: \"\\F0E76\";\n}\n\n.mdi-arrow-top-left-thick::before {\n  content: \"\\F09C4\";\n}\n\n.mdi-arrow-top-left-thin-circle-outline::before {\n  content: \"\\F1593\";\n}\n\n.mdi-arrow-top-right::before {\n  content: \"\\F005C\";\n}\n\n.mdi-arrow-top-right-bold-outline::before {\n  content: \"\\F09C5\";\n}\n\n.mdi-arrow-top-right-bottom-left::before {\n  content: \"\\F0E77\";\n}\n\n.mdi-arrow-top-right-bottom-left-bold::before {\n  content: \"\\F0E78\";\n}\n\n.mdi-arrow-top-right-thick::before {\n  content: \"\\F09C6\";\n}\n\n.mdi-arrow-top-right-thin-circle-outline::before {\n  content: \"\\F1594\";\n}\n\n.mdi-arrow-up::before {\n  content: \"\\F005D\";\n}\n\n.mdi-arrow-up-bold::before {\n  content: \"\\F0737\";\n}\n\n.mdi-arrow-up-bold-box::before {\n  content: \"\\F0738\";\n}\n\n.mdi-arrow-up-bold-box-outline::before {\n  content: \"\\F0739\";\n}\n\n.mdi-arrow-up-bold-circle::before {\n  content: \"\\F005F\";\n}\n\n.mdi-arrow-up-bold-circle-outline::before {\n  content: \"\\F0060\";\n}\n\n.mdi-arrow-up-bold-hexagon-outline::before {\n  content: \"\\F0061\";\n}\n\n.mdi-arrow-up-bold-outline::before {\n  content: \"\\F09C7\";\n}\n\n.mdi-arrow-up-box::before {\n  content: \"\\F06C3\";\n}\n\n.mdi-arrow-up-circle::before {\n  content: \"\\F0CE1\";\n}\n\n.mdi-arrow-up-circle-outline::before {\n  content: \"\\F0CE2\";\n}\n\n.mdi-arrow-up-down::before {\n  content: \"\\F0E79\";\n}\n\n.mdi-arrow-up-down-bold::before {\n  content: \"\\F0E7A\";\n}\n\n.mdi-arrow-up-down-bold-outline::before {\n  content: \"\\F09C8\";\n}\n\n.mdi-arrow-up-drop-circle::before {\n  content: \"\\F0062\";\n}\n\n.mdi-arrow-up-drop-circle-outline::before {\n  content: \"\\F0063\";\n}\n\n.mdi-arrow-up-thick::before {\n  content: \"\\F005E\";\n}\n\n.mdi-arrow-up-thin-circle-outline::before {\n  content: \"\\F1597\";\n}\n\n.mdi-arrow-vertical-lock::before {\n  content: \"\\F115C\";\n}\n\n.mdi-artstation::before {\n  content: \"\\F0B5B\";\n}\n\n.mdi-aspect-ratio::before {\n  content: \"\\F0A24\";\n}\n\n.mdi-assistant::before {\n  content: \"\\F0064\";\n}\n\n.mdi-asterisk::before {\n  content: \"\\F06C4\";\n}\n\n.mdi-at::before {\n  content: \"\\F0065\";\n}\n\n.mdi-atlassian::before {\n  content: \"\\F0804\";\n}\n\n.mdi-atm::before {\n  content: \"\\F0D47\";\n}\n\n.mdi-atom::before {\n  content: \"\\F0768\";\n}\n\n.mdi-atom-variant::before {\n  content: \"\\F0E7B\";\n}\n\n.mdi-attachment::before {\n  content: \"\\F0066\";\n}\n\n.mdi-audio-video::before {\n  content: \"\\F093D\";\n}\n\n.mdi-audio-video-off::before {\n  content: \"\\F11B6\";\n}\n\n.mdi-augmented-reality::before {\n  content: \"\\F0850\";\n}\n\n.mdi-auto-download::before {\n  content: \"\\F137E\";\n}\n\n.mdi-auto-fix::before {\n  content: \"\\F0068\";\n}\n\n.mdi-auto-upload::before {\n  content: \"\\F0069\";\n}\n\n.mdi-autorenew::before {\n  content: \"\\F006A\";\n}\n\n.mdi-av-timer::before {\n  content: \"\\F006B\";\n}\n\n.mdi-aws::before {\n  content: \"\\F0E0F\";\n}\n\n.mdi-axe::before {\n  content: \"\\F08C8\";\n}\n\n.mdi-axis::before {\n  content: \"\\F0D48\";\n}\n\n.mdi-axis-arrow::before {\n  content: \"\\F0D49\";\n}\n\n.mdi-axis-arrow-info::before {\n  content: \"\\F140E\";\n}\n\n.mdi-axis-arrow-lock::before {\n  content: \"\\F0D4A\";\n}\n\n.mdi-axis-lock::before {\n  content: \"\\F0D4B\";\n}\n\n.mdi-axis-x-arrow::before {\n  content: \"\\F0D4C\";\n}\n\n.mdi-axis-x-arrow-lock::before {\n  content: \"\\F0D4D\";\n}\n\n.mdi-axis-x-rotate-clockwise::before {\n  content: \"\\F0D4E\";\n}\n\n.mdi-axis-x-rotate-counterclockwise::before {\n  content: \"\\F0D4F\";\n}\n\n.mdi-axis-x-y-arrow-lock::before {\n  content: \"\\F0D50\";\n}\n\n.mdi-axis-y-arrow::before {\n  content: \"\\F0D51\";\n}\n\n.mdi-axis-y-arrow-lock::before {\n  content: \"\\F0D52\";\n}\n\n.mdi-axis-y-rotate-clockwise::before {\n  content: \"\\F0D53\";\n}\n\n.mdi-axis-y-rotate-counterclockwise::before {\n  content: \"\\F0D54\";\n}\n\n.mdi-axis-z-arrow::before {\n  content: \"\\F0D55\";\n}\n\n.mdi-axis-z-arrow-lock::before {\n  content: \"\\F0D56\";\n}\n\n.mdi-axis-z-rotate-clockwise::before {\n  content: \"\\F0D57\";\n}\n\n.mdi-axis-z-rotate-counterclockwise::before {\n  content: \"\\F0D58\";\n}\n\n.mdi-babel::before {\n  content: \"\\F0A25\";\n}\n\n.mdi-baby::before {\n  content: \"\\F006C\";\n}\n\n.mdi-baby-bottle::before {\n  content: \"\\F0F39\";\n}\n\n.mdi-baby-bottle-outline::before {\n  content: \"\\F0F3A\";\n}\n\n.mdi-baby-buggy::before {\n  content: \"\\F13E0\";\n}\n\n.mdi-baby-carriage::before {\n  content: \"\\F068F\";\n}\n\n.mdi-baby-carriage-off::before {\n  content: \"\\F0FA0\";\n}\n\n.mdi-baby-face::before {\n  content: \"\\F0E7C\";\n}\n\n.mdi-baby-face-outline::before {\n  content: \"\\F0E7D\";\n}\n\n.mdi-backburger::before {\n  content: \"\\F006D\";\n}\n\n.mdi-backspace::before {\n  content: \"\\F006E\";\n}\n\n.mdi-backspace-outline::before {\n  content: \"\\F0B5C\";\n}\n\n.mdi-backspace-reverse::before {\n  content: \"\\F0E7E\";\n}\n\n.mdi-backspace-reverse-outline::before {\n  content: \"\\F0E7F\";\n}\n\n.mdi-backup-restore::before {\n  content: \"\\F006F\";\n}\n\n.mdi-bacteria::before {\n  content: \"\\F0ED5\";\n}\n\n.mdi-bacteria-outline::before {\n  content: \"\\F0ED6\";\n}\n\n.mdi-badge-account::before {\n  content: \"\\F0DA7\";\n}\n\n.mdi-badge-account-alert::before {\n  content: \"\\F0DA8\";\n}\n\n.mdi-badge-account-alert-outline::before {\n  content: \"\\F0DA9\";\n}\n\n.mdi-badge-account-horizontal::before {\n  content: \"\\F0E0D\";\n}\n\n.mdi-badge-account-horizontal-outline::before {\n  content: \"\\F0E0E\";\n}\n\n.mdi-badge-account-outline::before {\n  content: \"\\F0DAA\";\n}\n\n.mdi-badminton::before {\n  content: \"\\F0851\";\n}\n\n.mdi-bag-carry-on::before {\n  content: \"\\F0F3B\";\n}\n\n.mdi-bag-carry-on-check::before {\n  content: \"\\F0D65\";\n}\n\n.mdi-bag-carry-on-off::before {\n  content: \"\\F0F3C\";\n}\n\n.mdi-bag-checked::before {\n  content: \"\\F0F3D\";\n}\n\n.mdi-bag-personal::before {\n  content: \"\\F0E10\";\n}\n\n.mdi-bag-personal-off::before {\n  content: \"\\F0E11\";\n}\n\n.mdi-bag-personal-off-outline::before {\n  content: \"\\F0E12\";\n}\n\n.mdi-bag-personal-outline::before {\n  content: \"\\F0E13\";\n}\n\n.mdi-bag-suitcase::before {\n  content: \"\\F158B\";\n}\n\n.mdi-bag-suitcase-off::before {\n  content: \"\\F158D\";\n}\n\n.mdi-bag-suitcase-off-outline::before {\n  content: \"\\F158E\";\n}\n\n.mdi-bag-suitcase-outline::before {\n  content: \"\\F158C\";\n}\n\n.mdi-baguette::before {\n  content: \"\\F0F3E\";\n}\n\n.mdi-balloon::before {\n  content: \"\\F0A26\";\n}\n\n.mdi-ballot::before {\n  content: \"\\F09C9\";\n}\n\n.mdi-ballot-outline::before {\n  content: \"\\F09CA\";\n}\n\n.mdi-ballot-recount::before {\n  content: \"\\F0C39\";\n}\n\n.mdi-ballot-recount-outline::before {\n  content: \"\\F0C3A\";\n}\n\n.mdi-bandage::before {\n  content: \"\\F0DAF\";\n}\n\n.mdi-bandcamp::before {\n  content: \"\\F0675\";\n}\n\n.mdi-bank::before {\n  content: \"\\F0070\";\n}\n\n.mdi-bank-check::before {\n  content: \"\\F1655\";\n}\n\n.mdi-bank-minus::before {\n  content: \"\\F0DB0\";\n}\n\n.mdi-bank-off::before {\n  content: \"\\F1656\";\n}\n\n.mdi-bank-off-outline::before {\n  content: \"\\F1657\";\n}\n\n.mdi-bank-outline::before {\n  content: \"\\F0E80\";\n}\n\n.mdi-bank-plus::before {\n  content: \"\\F0DB1\";\n}\n\n.mdi-bank-remove::before {\n  content: \"\\F0DB2\";\n}\n\n.mdi-bank-transfer::before {\n  content: \"\\F0A27\";\n}\n\n.mdi-bank-transfer-in::before {\n  content: \"\\F0A28\";\n}\n\n.mdi-bank-transfer-out::before {\n  content: \"\\F0A29\";\n}\n\n.mdi-barcode::before {\n  content: \"\\F0071\";\n}\n\n.mdi-barcode-off::before {\n  content: \"\\F1236\";\n}\n\n.mdi-barcode-scan::before {\n  content: \"\\F0072\";\n}\n\n.mdi-barley::before {\n  content: \"\\F0073\";\n}\n\n.mdi-barley-off::before {\n  content: \"\\F0B5D\";\n}\n\n.mdi-barn::before {\n  content: \"\\F0B5E\";\n}\n\n.mdi-barrel::before {\n  content: \"\\F0074\";\n}\n\n.mdi-baseball::before {\n  content: \"\\F0852\";\n}\n\n.mdi-baseball-bat::before {\n  content: \"\\F0853\";\n}\n\n.mdi-baseball-diamond::before {\n  content: \"\\F15EC\";\n}\n\n.mdi-baseball-diamond-outline::before {\n  content: \"\\F15ED\";\n}\n\n.mdi-bash::before {\n  content: \"\\F1183\";\n}\n\n.mdi-basket::before {\n  content: \"\\F0076\";\n}\n\n.mdi-basket-fill::before {\n  content: \"\\F0077\";\n}\n\n.mdi-basket-minus::before {\n  content: \"\\F1523\";\n}\n\n.mdi-basket-minus-outline::before {\n  content: \"\\F1524\";\n}\n\n.mdi-basket-off::before {\n  content: \"\\F1525\";\n}\n\n.mdi-basket-off-outline::before {\n  content: \"\\F1526\";\n}\n\n.mdi-basket-outline::before {\n  content: \"\\F1181\";\n}\n\n.mdi-basket-plus::before {\n  content: \"\\F1527\";\n}\n\n.mdi-basket-plus-outline::before {\n  content: \"\\F1528\";\n}\n\n.mdi-basket-remove::before {\n  content: \"\\F1529\";\n}\n\n.mdi-basket-remove-outline::before {\n  content: \"\\F152A\";\n}\n\n.mdi-basket-unfill::before {\n  content: \"\\F0078\";\n}\n\n.mdi-basketball::before {\n  content: \"\\F0806\";\n}\n\n.mdi-basketball-hoop::before {\n  content: \"\\F0C3B\";\n}\n\n.mdi-basketball-hoop-outline::before {\n  content: \"\\F0C3C\";\n}\n\n.mdi-bat::before {\n  content: \"\\F0B5F\";\n}\n\n.mdi-battery::before {\n  content: \"\\F0079\";\n}\n\n.mdi-battery-10::before {\n  content: \"\\F007A\";\n}\n\n.mdi-battery-10-bluetooth::before {\n  content: \"\\F093E\";\n}\n\n.mdi-battery-20::before {\n  content: \"\\F007B\";\n}\n\n.mdi-battery-20-bluetooth::before {\n  content: \"\\F093F\";\n}\n\n.mdi-battery-30::before {\n  content: \"\\F007C\";\n}\n\n.mdi-battery-30-bluetooth::before {\n  content: \"\\F0940\";\n}\n\n.mdi-battery-40::before {\n  content: \"\\F007D\";\n}\n\n.mdi-battery-40-bluetooth::before {\n  content: \"\\F0941\";\n}\n\n.mdi-battery-50::before {\n  content: \"\\F007E\";\n}\n\n.mdi-battery-50-bluetooth::before {\n  content: \"\\F0942\";\n}\n\n.mdi-battery-60::before {\n  content: \"\\F007F\";\n}\n\n.mdi-battery-60-bluetooth::before {\n  content: \"\\F0943\";\n}\n\n.mdi-battery-70::before {\n  content: \"\\F0080\";\n}\n\n.mdi-battery-70-bluetooth::before {\n  content: \"\\F0944\";\n}\n\n.mdi-battery-80::before {\n  content: \"\\F0081\";\n}\n\n.mdi-battery-80-bluetooth::before {\n  content: \"\\F0945\";\n}\n\n.mdi-battery-90::before {\n  content: \"\\F0082\";\n}\n\n.mdi-battery-90-bluetooth::before {\n  content: \"\\F0946\";\n}\n\n.mdi-battery-alert::before {\n  content: \"\\F0083\";\n}\n\n.mdi-battery-alert-bluetooth::before {\n  content: \"\\F0947\";\n}\n\n.mdi-battery-alert-variant::before {\n  content: \"\\F10CC\";\n}\n\n.mdi-battery-alert-variant-outline::before {\n  content: \"\\F10CD\";\n}\n\n.mdi-battery-bluetooth::before {\n  content: \"\\F0948\";\n}\n\n.mdi-battery-bluetooth-variant::before {\n  content: \"\\F0949\";\n}\n\n.mdi-battery-charging::before {\n  content: \"\\F0084\";\n}\n\n.mdi-battery-charging-10::before {\n  content: \"\\F089C\";\n}\n\n.mdi-battery-charging-100::before {\n  content: \"\\F0085\";\n}\n\n.mdi-battery-charging-20::before {\n  content: \"\\F0086\";\n}\n\n.mdi-battery-charging-30::before {\n  content: \"\\F0087\";\n}\n\n.mdi-battery-charging-40::before {\n  content: \"\\F0088\";\n}\n\n.mdi-battery-charging-50::before {\n  content: \"\\F089D\";\n}\n\n.mdi-battery-charging-60::before {\n  content: \"\\F0089\";\n}\n\n.mdi-battery-charging-70::before {\n  content: \"\\F089E\";\n}\n\n.mdi-battery-charging-80::before {\n  content: \"\\F008A\";\n}\n\n.mdi-battery-charging-90::before {\n  content: \"\\F008B\";\n}\n\n.mdi-battery-charging-high::before {\n  content: \"\\F12A6\";\n}\n\n.mdi-battery-charging-low::before {\n  content: \"\\F12A4\";\n}\n\n.mdi-battery-charging-medium::before {\n  content: \"\\F12A5\";\n}\n\n.mdi-battery-charging-outline::before {\n  content: \"\\F089F\";\n}\n\n.mdi-battery-charging-wireless::before {\n  content: \"\\F0807\";\n}\n\n.mdi-battery-charging-wireless-10::before {\n  content: \"\\F0808\";\n}\n\n.mdi-battery-charging-wireless-20::before {\n  content: \"\\F0809\";\n}\n\n.mdi-battery-charging-wireless-30::before {\n  content: \"\\F080A\";\n}\n\n.mdi-battery-charging-wireless-40::before {\n  content: \"\\F080B\";\n}\n\n.mdi-battery-charging-wireless-50::before {\n  content: \"\\F080C\";\n}\n\n.mdi-battery-charging-wireless-60::before {\n  content: \"\\F080D\";\n}\n\n.mdi-battery-charging-wireless-70::before {\n  content: \"\\F080E\";\n}\n\n.mdi-battery-charging-wireless-80::before {\n  content: \"\\F080F\";\n}\n\n.mdi-battery-charging-wireless-90::before {\n  content: \"\\F0810\";\n}\n\n.mdi-battery-charging-wireless-alert::before {\n  content: \"\\F0811\";\n}\n\n.mdi-battery-charging-wireless-outline::before {\n  content: \"\\F0812\";\n}\n\n.mdi-battery-heart::before {\n  content: \"\\F120F\";\n}\n\n.mdi-battery-heart-outline::before {\n  content: \"\\F1210\";\n}\n\n.mdi-battery-heart-variant::before {\n  content: \"\\F1211\";\n}\n\n.mdi-battery-high::before {\n  content: \"\\F12A3\";\n}\n\n.mdi-battery-low::before {\n  content: \"\\F12A1\";\n}\n\n.mdi-battery-medium::before {\n  content: \"\\F12A2\";\n}\n\n.mdi-battery-minus::before {\n  content: \"\\F008C\";\n}\n\n.mdi-battery-negative::before {\n  content: \"\\F008D\";\n}\n\n.mdi-battery-off::before {\n  content: \"\\F125D\";\n}\n\n.mdi-battery-off-outline::before {\n  content: \"\\F125E\";\n}\n\n.mdi-battery-outline::before {\n  content: \"\\F008E\";\n}\n\n.mdi-battery-plus::before {\n  content: \"\\F008F\";\n}\n\n.mdi-battery-positive::before {\n  content: \"\\F0090\";\n}\n\n.mdi-battery-unknown::before {\n  content: \"\\F0091\";\n}\n\n.mdi-battery-unknown-bluetooth::before {\n  content: \"\\F094A\";\n}\n\n.mdi-battlenet::before {\n  content: \"\\F0B60\";\n}\n\n.mdi-beach::before {\n  content: \"\\F0092\";\n}\n\n.mdi-beaker::before {\n  content: \"\\F0CEA\";\n}\n\n.mdi-beaker-alert::before {\n  content: \"\\F1229\";\n}\n\n.mdi-beaker-alert-outline::before {\n  content: \"\\F122A\";\n}\n\n.mdi-beaker-check::before {\n  content: \"\\F122B\";\n}\n\n.mdi-beaker-check-outline::before {\n  content: \"\\F122C\";\n}\n\n.mdi-beaker-minus::before {\n  content: \"\\F122D\";\n}\n\n.mdi-beaker-minus-outline::before {\n  content: \"\\F122E\";\n}\n\n.mdi-beaker-outline::before {\n  content: \"\\F0690\";\n}\n\n.mdi-beaker-plus::before {\n  content: \"\\F122F\";\n}\n\n.mdi-beaker-plus-outline::before {\n  content: \"\\F1230\";\n}\n\n.mdi-beaker-question::before {\n  content: \"\\F1231\";\n}\n\n.mdi-beaker-question-outline::before {\n  content: \"\\F1232\";\n}\n\n.mdi-beaker-remove::before {\n  content: \"\\F1233\";\n}\n\n.mdi-beaker-remove-outline::before {\n  content: \"\\F1234\";\n}\n\n.mdi-bed::before {\n  content: \"\\F02E3\";\n}\n\n.mdi-bed-double::before {\n  content: \"\\F0FD4\";\n}\n\n.mdi-bed-double-outline::before {\n  content: \"\\F0FD3\";\n}\n\n.mdi-bed-empty::before {\n  content: \"\\F08A0\";\n}\n\n.mdi-bed-king::before {\n  content: \"\\F0FD2\";\n}\n\n.mdi-bed-king-outline::before {\n  content: \"\\F0FD1\";\n}\n\n.mdi-bed-outline::before {\n  content: \"\\F0099\";\n}\n\n.mdi-bed-queen::before {\n  content: \"\\F0FD0\";\n}\n\n.mdi-bed-queen-outline::before {\n  content: \"\\F0FDB\";\n}\n\n.mdi-bed-single::before {\n  content: \"\\F106D\";\n}\n\n.mdi-bed-single-outline::before {\n  content: \"\\F106E\";\n}\n\n.mdi-bee::before {\n  content: \"\\F0FA1\";\n}\n\n.mdi-bee-flower::before {\n  content: \"\\F0FA2\";\n}\n\n.mdi-beehive-off-outline::before {\n  content: \"\\F13ED\";\n}\n\n.mdi-beehive-outline::before {\n  content: \"\\F10CE\";\n}\n\n.mdi-beekeeper::before {\n  content: \"\\F14E2\";\n}\n\n.mdi-beer::before {\n  content: \"\\F0098\";\n}\n\n.mdi-beer-outline::before {\n  content: \"\\F130C\";\n}\n\n.mdi-bell::before {\n  content: \"\\F009A\";\n}\n\n.mdi-bell-alert::before {\n  content: \"\\F0D59\";\n}\n\n.mdi-bell-alert-outline::before {\n  content: \"\\F0E81\";\n}\n\n.mdi-bell-cancel::before {\n  content: \"\\F13E7\";\n}\n\n.mdi-bell-cancel-outline::before {\n  content: \"\\F13E8\";\n}\n\n.mdi-bell-check::before {\n  content: \"\\F11E5\";\n}\n\n.mdi-bell-check-outline::before {\n  content: \"\\F11E6\";\n}\n\n.mdi-bell-circle::before {\n  content: \"\\F0D5A\";\n}\n\n.mdi-bell-circle-outline::before {\n  content: \"\\F0D5B\";\n}\n\n.mdi-bell-minus::before {\n  content: \"\\F13E9\";\n}\n\n.mdi-bell-minus-outline::before {\n  content: \"\\F13EA\";\n}\n\n.mdi-bell-off::before {\n  content: \"\\F009B\";\n}\n\n.mdi-bell-off-outline::before {\n  content: \"\\F0A91\";\n}\n\n.mdi-bell-outline::before {\n  content: \"\\F009C\";\n}\n\n.mdi-bell-plus::before {\n  content: \"\\F009D\";\n}\n\n.mdi-bell-plus-outline::before {\n  content: \"\\F0A92\";\n}\n\n.mdi-bell-remove::before {\n  content: \"\\F13EB\";\n}\n\n.mdi-bell-remove-outline::before {\n  content: \"\\F13EC\";\n}\n\n.mdi-bell-ring::before {\n  content: \"\\F009E\";\n}\n\n.mdi-bell-ring-outline::before {\n  content: \"\\F009F\";\n}\n\n.mdi-bell-sleep::before {\n  content: \"\\F00A0\";\n}\n\n.mdi-bell-sleep-outline::before {\n  content: \"\\F0A93\";\n}\n\n.mdi-beta::before {\n  content: \"\\F00A1\";\n}\n\n.mdi-betamax::before {\n  content: \"\\F09CB\";\n}\n\n.mdi-biathlon::before {\n  content: \"\\F0E14\";\n}\n\n.mdi-bicycle::before {\n  content: \"\\F109C\";\n}\n\n.mdi-bicycle-basket::before {\n  content: \"\\F1235\";\n}\n\n.mdi-bicycle-electric::before {\n  content: \"\\F15B4\";\n}\n\n.mdi-bicycle-penny-farthing::before {\n  content: \"\\F15E9\";\n}\n\n.mdi-bike::before {\n  content: \"\\F00A3\";\n}\n\n.mdi-bike-fast::before {\n  content: \"\\F111F\";\n}\n\n.mdi-billboard::before {\n  content: \"\\F1010\";\n}\n\n.mdi-billiards::before {\n  content: \"\\F0B61\";\n}\n\n.mdi-billiards-rack::before {\n  content: \"\\F0B62\";\n}\n\n.mdi-binoculars::before {\n  content: \"\\F00A5\";\n}\n\n.mdi-bio::before {\n  content: \"\\F00A6\";\n}\n\n.mdi-biohazard::before {\n  content: \"\\F00A7\";\n}\n\n.mdi-bird::before {\n  content: \"\\F15C6\";\n}\n\n.mdi-bitbucket::before {\n  content: \"\\F00A8\";\n}\n\n.mdi-bitcoin::before {\n  content: \"\\F0813\";\n}\n\n.mdi-black-mesa::before {\n  content: \"\\F00A9\";\n}\n\n.mdi-blender::before {\n  content: \"\\F0CEB\";\n}\n\n.mdi-blender-software::before {\n  content: \"\\F00AB\";\n}\n\n.mdi-blinds::before {\n  content: \"\\F00AC\";\n}\n\n.mdi-blinds-open::before {\n  content: \"\\F1011\";\n}\n\n.mdi-block-helper::before {\n  content: \"\\F00AD\";\n}\n\n.mdi-blogger::before {\n  content: \"\\F00AE\";\n}\n\n.mdi-blood-bag::before {\n  content: \"\\F0CEC\";\n}\n\n.mdi-bluetooth::before {\n  content: \"\\F00AF\";\n}\n\n.mdi-bluetooth-audio::before {\n  content: \"\\F00B0\";\n}\n\n.mdi-bluetooth-connect::before {\n  content: \"\\F00B1\";\n}\n\n.mdi-bluetooth-off::before {\n  content: \"\\F00B2\";\n}\n\n.mdi-bluetooth-settings::before {\n  content: \"\\F00B3\";\n}\n\n.mdi-bluetooth-transfer::before {\n  content: \"\\F00B4\";\n}\n\n.mdi-blur::before {\n  content: \"\\F00B5\";\n}\n\n.mdi-blur-linear::before {\n  content: \"\\F00B6\";\n}\n\n.mdi-blur-off::before {\n  content: \"\\F00B7\";\n}\n\n.mdi-blur-radial::before {\n  content: \"\\F00B8\";\n}\n\n.mdi-bolnisi-cross::before {\n  content: \"\\F0CED\";\n}\n\n.mdi-bolt::before {\n  content: \"\\F0DB3\";\n}\n\n.mdi-bomb::before {\n  content: \"\\F0691\";\n}\n\n.mdi-bomb-off::before {\n  content: \"\\F06C5\";\n}\n\n.mdi-bone::before {\n  content: \"\\F00B9\";\n}\n\n.mdi-book::before {\n  content: \"\\F00BA\";\n}\n\n.mdi-book-account::before {\n  content: \"\\F13AD\";\n}\n\n.mdi-book-account-outline::before {\n  content: \"\\F13AE\";\n}\n\n.mdi-book-alert::before {\n  content: \"\\F167C\";\n}\n\n.mdi-book-alert-outline::before {\n  content: \"\\F167D\";\n}\n\n.mdi-book-alphabet::before {\n  content: \"\\F061D\";\n}\n\n.mdi-book-arrow-down::before {\n  content: \"\\F167E\";\n}\n\n.mdi-book-arrow-down-outline::before {\n  content: \"\\F167F\";\n}\n\n.mdi-book-arrow-left::before {\n  content: \"\\F1680\";\n}\n\n.mdi-book-arrow-left-outline::before {\n  content: \"\\F1681\";\n}\n\n.mdi-book-arrow-right::before {\n  content: \"\\F1682\";\n}\n\n.mdi-book-arrow-right-outline::before {\n  content: \"\\F1683\";\n}\n\n.mdi-book-arrow-up::before {\n  content: \"\\F1684\";\n}\n\n.mdi-book-arrow-up-outline::before {\n  content: \"\\F1685\";\n}\n\n.mdi-book-cancel::before {\n  content: \"\\F1686\";\n}\n\n.mdi-book-cancel-outline::before {\n  content: \"\\F1687\";\n}\n\n.mdi-book-check::before {\n  content: \"\\F14F3\";\n}\n\n.mdi-book-check-outline::before {\n  content: \"\\F14F4\";\n}\n\n.mdi-book-clock::before {\n  content: \"\\F1688\";\n}\n\n.mdi-book-clock-outline::before {\n  content: \"\\F1689\";\n}\n\n.mdi-book-cog::before {\n  content: \"\\F168A\";\n}\n\n.mdi-book-cog-outline::before {\n  content: \"\\F168B\";\n}\n\n.mdi-book-cross::before {\n  content: \"\\F00A2\";\n}\n\n.mdi-book-edit::before {\n  content: \"\\F168C\";\n}\n\n.mdi-book-edit-outline::before {\n  content: \"\\F168D\";\n}\n\n.mdi-book-education::before {\n  content: \"\\F16C9\";\n}\n\n.mdi-book-education-outline::before {\n  content: \"\\F16CA\";\n}\n\n.mdi-book-information-variant::before {\n  content: \"\\F106F\";\n}\n\n.mdi-book-lock::before {\n  content: \"\\F079A\";\n}\n\n.mdi-book-lock-open::before {\n  content: \"\\F079B\";\n}\n\n.mdi-book-lock-open-outline::before {\n  content: \"\\F168E\";\n}\n\n.mdi-book-lock-outline::before {\n  content: \"\\F168F\";\n}\n\n.mdi-book-marker::before {\n  content: \"\\F1690\";\n}\n\n.mdi-book-marker-outline::before {\n  content: \"\\F1691\";\n}\n\n.mdi-book-minus::before {\n  content: \"\\F05D9\";\n}\n\n.mdi-book-minus-multiple::before {\n  content: \"\\F0A94\";\n}\n\n.mdi-book-minus-multiple-outline::before {\n  content: \"\\F090B\";\n}\n\n.mdi-book-minus-outline::before {\n  content: \"\\F1692\";\n}\n\n.mdi-book-multiple::before {\n  content: \"\\F00BB\";\n}\n\n.mdi-book-multiple-outline::before {\n  content: \"\\F0436\";\n}\n\n.mdi-book-music::before {\n  content: \"\\F0067\";\n}\n\n.mdi-book-music-outline::before {\n  content: \"\\F1693\";\n}\n\n.mdi-book-off::before {\n  content: \"\\F1694\";\n}\n\n.mdi-book-off-outline::before {\n  content: \"\\F1695\";\n}\n\n.mdi-book-open::before {\n  content: \"\\F00BD\";\n}\n\n.mdi-book-open-blank-variant::before {\n  content: \"\\F00BE\";\n}\n\n.mdi-book-open-outline::before {\n  content: \"\\F0B63\";\n}\n\n.mdi-book-open-page-variant::before {\n  content: \"\\F05DA\";\n}\n\n.mdi-book-open-page-variant-outline::before {\n  content: \"\\F15D6\";\n}\n\n.mdi-book-open-variant::before {\n  content: \"\\F14F7\";\n}\n\n.mdi-book-outline::before {\n  content: \"\\F0B64\";\n}\n\n.mdi-book-play::before {\n  content: \"\\F0E82\";\n}\n\n.mdi-book-play-outline::before {\n  content: \"\\F0E83\";\n}\n\n.mdi-book-plus::before {\n  content: \"\\F05DB\";\n}\n\n.mdi-book-plus-multiple::before {\n  content: \"\\F0A95\";\n}\n\n.mdi-book-plus-multiple-outline::before {\n  content: \"\\F0ADE\";\n}\n\n.mdi-book-plus-outline::before {\n  content: \"\\F1696\";\n}\n\n.mdi-book-refresh::before {\n  content: \"\\F1697\";\n}\n\n.mdi-book-refresh-outline::before {\n  content: \"\\F1698\";\n}\n\n.mdi-book-remove::before {\n  content: \"\\F0A97\";\n}\n\n.mdi-book-remove-multiple::before {\n  content: \"\\F0A96\";\n}\n\n.mdi-book-remove-multiple-outline::before {\n  content: \"\\F04CA\";\n}\n\n.mdi-book-remove-outline::before {\n  content: \"\\F1699\";\n}\n\n.mdi-book-search::before {\n  content: \"\\F0E84\";\n}\n\n.mdi-book-search-outline::before {\n  content: \"\\F0E85\";\n}\n\n.mdi-book-settings::before {\n  content: \"\\F169A\";\n}\n\n.mdi-book-settings-outline::before {\n  content: \"\\F169B\";\n}\n\n.mdi-book-sync::before {\n  content: \"\\F169C\";\n}\n\n.mdi-book-sync-outline::before {\n  content: \"\\F16C8\";\n}\n\n.mdi-book-variant::before {\n  content: \"\\F00BF\";\n}\n\n.mdi-book-variant-multiple::before {\n  content: \"\\F00BC\";\n}\n\n.mdi-bookmark::before {\n  content: \"\\F00C0\";\n}\n\n.mdi-bookmark-check::before {\n  content: \"\\F00C1\";\n}\n\n.mdi-bookmark-check-outline::before {\n  content: \"\\F137B\";\n}\n\n.mdi-bookmark-minus::before {\n  content: \"\\F09CC\";\n}\n\n.mdi-bookmark-minus-outline::before {\n  content: \"\\F09CD\";\n}\n\n.mdi-bookmark-multiple::before {\n  content: \"\\F0E15\";\n}\n\n.mdi-bookmark-multiple-outline::before {\n  content: \"\\F0E16\";\n}\n\n.mdi-bookmark-music::before {\n  content: \"\\F00C2\";\n}\n\n.mdi-bookmark-music-outline::before {\n  content: \"\\F1379\";\n}\n\n.mdi-bookmark-off::before {\n  content: \"\\F09CE\";\n}\n\n.mdi-bookmark-off-outline::before {\n  content: \"\\F09CF\";\n}\n\n.mdi-bookmark-outline::before {\n  content: \"\\F00C3\";\n}\n\n.mdi-bookmark-plus::before {\n  content: \"\\F00C5\";\n}\n\n.mdi-bookmark-plus-outline::before {\n  content: \"\\F00C4\";\n}\n\n.mdi-bookmark-remove::before {\n  content: \"\\F00C6\";\n}\n\n.mdi-bookmark-remove-outline::before {\n  content: \"\\F137A\";\n}\n\n.mdi-bookshelf::before {\n  content: \"\\F125F\";\n}\n\n.mdi-boom-gate::before {\n  content: \"\\F0E86\";\n}\n\n.mdi-boom-gate-alert::before {\n  content: \"\\F0E87\";\n}\n\n.mdi-boom-gate-alert-outline::before {\n  content: \"\\F0E88\";\n}\n\n.mdi-boom-gate-down::before {\n  content: \"\\F0E89\";\n}\n\n.mdi-boom-gate-down-outline::before {\n  content: \"\\F0E8A\";\n}\n\n.mdi-boom-gate-outline::before {\n  content: \"\\F0E8B\";\n}\n\n.mdi-boom-gate-up::before {\n  content: \"\\F0E8C\";\n}\n\n.mdi-boom-gate-up-outline::before {\n  content: \"\\F0E8D\";\n}\n\n.mdi-boombox::before {\n  content: \"\\F05DC\";\n}\n\n.mdi-boomerang::before {\n  content: \"\\F10CF\";\n}\n\n.mdi-bootstrap::before {\n  content: \"\\F06C6\";\n}\n\n.mdi-border-all::before {\n  content: \"\\F00C7\";\n}\n\n.mdi-border-all-variant::before {\n  content: \"\\F08A1\";\n}\n\n.mdi-border-bottom::before {\n  content: \"\\F00C8\";\n}\n\n.mdi-border-bottom-variant::before {\n  content: \"\\F08A2\";\n}\n\n.mdi-border-color::before {\n  content: \"\\F00C9\";\n}\n\n.mdi-border-horizontal::before {\n  content: \"\\F00CA\";\n}\n\n.mdi-border-inside::before {\n  content: \"\\F00CB\";\n}\n\n.mdi-border-left::before {\n  content: \"\\F00CC\";\n}\n\n.mdi-border-left-variant::before {\n  content: \"\\F08A3\";\n}\n\n.mdi-border-none::before {\n  content: \"\\F00CD\";\n}\n\n.mdi-border-none-variant::before {\n  content: \"\\F08A4\";\n}\n\n.mdi-border-outside::before {\n  content: \"\\F00CE\";\n}\n\n.mdi-border-right::before {\n  content: \"\\F00CF\";\n}\n\n.mdi-border-right-variant::before {\n  content: \"\\F08A5\";\n}\n\n.mdi-border-style::before {\n  content: \"\\F00D0\";\n}\n\n.mdi-border-top::before {\n  content: \"\\F00D1\";\n}\n\n.mdi-border-top-variant::before {\n  content: \"\\F08A6\";\n}\n\n.mdi-border-vertical::before {\n  content: \"\\F00D2\";\n}\n\n.mdi-bottle-soda::before {\n  content: \"\\F1070\";\n}\n\n.mdi-bottle-soda-classic::before {\n  content: \"\\F1071\";\n}\n\n.mdi-bottle-soda-classic-outline::before {\n  content: \"\\F1363\";\n}\n\n.mdi-bottle-soda-outline::before {\n  content: \"\\F1072\";\n}\n\n.mdi-bottle-tonic::before {\n  content: \"\\F112E\";\n}\n\n.mdi-bottle-tonic-outline::before {\n  content: \"\\F112F\";\n}\n\n.mdi-bottle-tonic-plus::before {\n  content: \"\\F1130\";\n}\n\n.mdi-bottle-tonic-plus-outline::before {\n  content: \"\\F1131\";\n}\n\n.mdi-bottle-tonic-skull::before {\n  content: \"\\F1132\";\n}\n\n.mdi-bottle-tonic-skull-outline::before {\n  content: \"\\F1133\";\n}\n\n.mdi-bottle-wine::before {\n  content: \"\\F0854\";\n}\n\n.mdi-bottle-wine-outline::before {\n  content: \"\\F1310\";\n}\n\n.mdi-bow-tie::before {\n  content: \"\\F0678\";\n}\n\n.mdi-bowl::before {\n  content: \"\\F028E\";\n}\n\n.mdi-bowl-mix::before {\n  content: \"\\F0617\";\n}\n\n.mdi-bowl-mix-outline::before {\n  content: \"\\F02E4\";\n}\n\n.mdi-bowl-outline::before {\n  content: \"\\F02A9\";\n}\n\n.mdi-bowling::before {\n  content: \"\\F00D3\";\n}\n\n.mdi-box::before {\n  content: \"\\F00D4\";\n}\n\n.mdi-box-cutter::before {\n  content: \"\\F00D5\";\n}\n\n.mdi-box-cutter-off::before {\n  content: \"\\F0B4A\";\n}\n\n.mdi-box-shadow::before {\n  content: \"\\F0637\";\n}\n\n.mdi-boxing-glove::before {\n  content: \"\\F0B65\";\n}\n\n.mdi-braille::before {\n  content: \"\\F09D0\";\n}\n\n.mdi-brain::before {\n  content: \"\\F09D1\";\n}\n\n.mdi-bread-slice::before {\n  content: \"\\F0CEE\";\n}\n\n.mdi-bread-slice-outline::before {\n  content: \"\\F0CEF\";\n}\n\n.mdi-bridge::before {\n  content: \"\\F0618\";\n}\n\n.mdi-briefcase::before {\n  content: \"\\F00D6\";\n}\n\n.mdi-briefcase-account::before {\n  content: \"\\F0CF0\";\n}\n\n.mdi-briefcase-account-outline::before {\n  content: \"\\F0CF1\";\n}\n\n.mdi-briefcase-check::before {\n  content: \"\\F00D7\";\n}\n\n.mdi-briefcase-check-outline::before {\n  content: \"\\F131E\";\n}\n\n.mdi-briefcase-clock::before {\n  content: \"\\F10D0\";\n}\n\n.mdi-briefcase-clock-outline::before {\n  content: \"\\F10D1\";\n}\n\n.mdi-briefcase-download::before {\n  content: \"\\F00D8\";\n}\n\n.mdi-briefcase-download-outline::before {\n  content: \"\\F0C3D\";\n}\n\n.mdi-briefcase-edit::before {\n  content: \"\\F0A98\";\n}\n\n.mdi-briefcase-edit-outline::before {\n  content: \"\\F0C3E\";\n}\n\n.mdi-briefcase-minus::before {\n  content: \"\\F0A2A\";\n}\n\n.mdi-briefcase-minus-outline::before {\n  content: \"\\F0C3F\";\n}\n\n.mdi-briefcase-off::before {\n  content: \"\\F1658\";\n}\n\n.mdi-briefcase-off-outline::before {\n  content: \"\\F1659\";\n}\n\n.mdi-briefcase-outline::before {\n  content: \"\\F0814\";\n}\n\n.mdi-briefcase-plus::before {\n  content: \"\\F0A2B\";\n}\n\n.mdi-briefcase-plus-outline::before {\n  content: \"\\F0C40\";\n}\n\n.mdi-briefcase-remove::before {\n  content: \"\\F0A2C\";\n}\n\n.mdi-briefcase-remove-outline::before {\n  content: \"\\F0C41\";\n}\n\n.mdi-briefcase-search::before {\n  content: \"\\F0A2D\";\n}\n\n.mdi-briefcase-search-outline::before {\n  content: \"\\F0C42\";\n}\n\n.mdi-briefcase-upload::before {\n  content: \"\\F00D9\";\n}\n\n.mdi-briefcase-upload-outline::before {\n  content: \"\\F0C43\";\n}\n\n.mdi-briefcase-variant::before {\n  content: \"\\F1494\";\n}\n\n.mdi-briefcase-variant-off::before {\n  content: \"\\F165A\";\n}\n\n.mdi-briefcase-variant-off-outline::before {\n  content: \"\\F165B\";\n}\n\n.mdi-briefcase-variant-outline::before {\n  content: \"\\F1495\";\n}\n\n.mdi-brightness-1::before {\n  content: \"\\F00DA\";\n}\n\n.mdi-brightness-2::before {\n  content: \"\\F00DB\";\n}\n\n.mdi-brightness-3::before {\n  content: \"\\F00DC\";\n}\n\n.mdi-brightness-4::before {\n  content: \"\\F00DD\";\n}\n\n.mdi-brightness-5::before {\n  content: \"\\F00DE\";\n}\n\n.mdi-brightness-6::before {\n  content: \"\\F00DF\";\n}\n\n.mdi-brightness-7::before {\n  content: \"\\F00E0\";\n}\n\n.mdi-brightness-auto::before {\n  content: \"\\F00E1\";\n}\n\n.mdi-brightness-percent::before {\n  content: \"\\F0CF2\";\n}\n\n.mdi-broadcast::before {\n  content: \"\\F1720\";\n}\n\n.mdi-broadcast-off::before {\n  content: \"\\F1721\";\n}\n\n.mdi-broom::before {\n  content: \"\\F00E2\";\n}\n\n.mdi-brush::before {\n  content: \"\\F00E3\";\n}\n\n.mdi-bucket::before {\n  content: \"\\F1415\";\n}\n\n.mdi-bucket-outline::before {\n  content: \"\\F1416\";\n}\n\n.mdi-buddhism::before {\n  content: \"\\F094B\";\n}\n\n.mdi-buffer::before {\n  content: \"\\F0619\";\n}\n\n.mdi-buffet::before {\n  content: \"\\F0578\";\n}\n\n.mdi-bug::before {\n  content: \"\\F00E4\";\n}\n\n.mdi-bug-check::before {\n  content: \"\\F0A2E\";\n}\n\n.mdi-bug-check-outline::before {\n  content: \"\\F0A2F\";\n}\n\n.mdi-bug-outline::before {\n  content: \"\\F0A30\";\n}\n\n.mdi-bugle::before {\n  content: \"\\F0DB4\";\n}\n\n.mdi-bulldozer::before {\n  content: \"\\F0B22\";\n}\n\n.mdi-bullet::before {\n  content: \"\\F0CF3\";\n}\n\n.mdi-bulletin-board::before {\n  content: \"\\F00E5\";\n}\n\n.mdi-bullhorn::before {\n  content: \"\\F00E6\";\n}\n\n.mdi-bullhorn-outline::before {\n  content: \"\\F0B23\";\n}\n\n.mdi-bullseye::before {\n  content: \"\\F05DD\";\n}\n\n.mdi-bullseye-arrow::before {\n  content: \"\\F08C9\";\n}\n\n.mdi-bulma::before {\n  content: \"\\F12E7\";\n}\n\n.mdi-bunk-bed::before {\n  content: \"\\F1302\";\n}\n\n.mdi-bunk-bed-outline::before {\n  content: \"\\F0097\";\n}\n\n.mdi-bus::before {\n  content: \"\\F00E7\";\n}\n\n.mdi-bus-alert::before {\n  content: \"\\F0A99\";\n}\n\n.mdi-bus-articulated-end::before {\n  content: \"\\F079C\";\n}\n\n.mdi-bus-articulated-front::before {\n  content: \"\\F079D\";\n}\n\n.mdi-bus-clock::before {\n  content: \"\\F08CA\";\n}\n\n.mdi-bus-double-decker::before {\n  content: \"\\F079E\";\n}\n\n.mdi-bus-marker::before {\n  content: \"\\F1212\";\n}\n\n.mdi-bus-multiple::before {\n  content: \"\\F0F3F\";\n}\n\n.mdi-bus-school::before {\n  content: \"\\F079F\";\n}\n\n.mdi-bus-side::before {\n  content: \"\\F07A0\";\n}\n\n.mdi-bus-stop::before {\n  content: \"\\F1012\";\n}\n\n.mdi-bus-stop-covered::before {\n  content: \"\\F1013\";\n}\n\n.mdi-bus-stop-uncovered::before {\n  content: \"\\F1014\";\n}\n\n.mdi-butterfly::before {\n  content: \"\\F1589\";\n}\n\n.mdi-butterfly-outline::before {\n  content: \"\\F158A\";\n}\n\n.mdi-cable-data::before {\n  content: \"\\F1394\";\n}\n\n.mdi-cached::before {\n  content: \"\\F00E8\";\n}\n\n.mdi-cactus::before {\n  content: \"\\F0DB5\";\n}\n\n.mdi-cake::before {\n  content: \"\\F00E9\";\n}\n\n.mdi-cake-layered::before {\n  content: \"\\F00EA\";\n}\n\n.mdi-cake-variant::before {\n  content: \"\\F00EB\";\n}\n\n.mdi-calculator::before {\n  content: \"\\F00EC\";\n}\n\n.mdi-calculator-variant::before {\n  content: \"\\F0A9A\";\n}\n\n.mdi-calculator-variant-outline::before {\n  content: \"\\F15A6\";\n}\n\n.mdi-calendar::before {\n  content: \"\\F00ED\";\n}\n\n.mdi-calendar-account::before {\n  content: \"\\F0ED7\";\n}\n\n.mdi-calendar-account-outline::before {\n  content: \"\\F0ED8\";\n}\n\n.mdi-calendar-alert::before {\n  content: \"\\F0A31\";\n}\n\n.mdi-calendar-arrow-left::before {\n  content: \"\\F1134\";\n}\n\n.mdi-calendar-arrow-right::before {\n  content: \"\\F1135\";\n}\n\n.mdi-calendar-blank::before {\n  content: \"\\F00EE\";\n}\n\n.mdi-calendar-blank-multiple::before {\n  content: \"\\F1073\";\n}\n\n.mdi-calendar-blank-outline::before {\n  content: \"\\F0B66\";\n}\n\n.mdi-calendar-check::before {\n  content: \"\\F00EF\";\n}\n\n.mdi-calendar-check-outline::before {\n  content: \"\\F0C44\";\n}\n\n.mdi-calendar-clock::before {\n  content: \"\\F00F0\";\n}\n\n.mdi-calendar-clock-outline::before {\n  content: \"\\F16E1\";\n}\n\n.mdi-calendar-cursor::before {\n  content: \"\\F157B\";\n}\n\n.mdi-calendar-edit::before {\n  content: \"\\F08A7\";\n}\n\n.mdi-calendar-end::before {\n  content: \"\\F166C\";\n}\n\n.mdi-calendar-export::before {\n  content: \"\\F0B24\";\n}\n\n.mdi-calendar-heart::before {\n  content: \"\\F09D2\";\n}\n\n.mdi-calendar-import::before {\n  content: \"\\F0B25\";\n}\n\n.mdi-calendar-lock::before {\n  content: \"\\F1641\";\n}\n\n.mdi-calendar-lock-outline::before {\n  content: \"\\F1642\";\n}\n\n.mdi-calendar-minus::before {\n  content: \"\\F0D5C\";\n}\n\n.mdi-calendar-month::before {\n  content: \"\\F0E17\";\n}\n\n.mdi-calendar-month-outline::before {\n  content: \"\\F0E18\";\n}\n\n.mdi-calendar-multiple::before {\n  content: \"\\F00F1\";\n}\n\n.mdi-calendar-multiple-check::before {\n  content: \"\\F00F2\";\n}\n\n.mdi-calendar-multiselect::before {\n  content: \"\\F0A32\";\n}\n\n.mdi-calendar-outline::before {\n  content: \"\\F0B67\";\n}\n\n.mdi-calendar-plus::before {\n  content: \"\\F00F3\";\n}\n\n.mdi-calendar-question::before {\n  content: \"\\F0692\";\n}\n\n.mdi-calendar-range::before {\n  content: \"\\F0679\";\n}\n\n.mdi-calendar-range-outline::before {\n  content: \"\\F0B68\";\n}\n\n.mdi-calendar-refresh::before {\n  content: \"\\F01E1\";\n}\n\n.mdi-calendar-refresh-outline::before {\n  content: \"\\F0203\";\n}\n\n.mdi-calendar-remove::before {\n  content: \"\\F00F4\";\n}\n\n.mdi-calendar-remove-outline::before {\n  content: \"\\F0C45\";\n}\n\n.mdi-calendar-search::before {\n  content: \"\\F094C\";\n}\n\n.mdi-calendar-star::before {\n  content: \"\\F09D3\";\n}\n\n.mdi-calendar-start::before {\n  content: \"\\F166D\";\n}\n\n.mdi-calendar-sync::before {\n  content: \"\\F0E8E\";\n}\n\n.mdi-calendar-sync-outline::before {\n  content: \"\\F0E8F\";\n}\n\n.mdi-calendar-text::before {\n  content: \"\\F00F5\";\n}\n\n.mdi-calendar-text-outline::before {\n  content: \"\\F0C46\";\n}\n\n.mdi-calendar-today::before {\n  content: \"\\F00F6\";\n}\n\n.mdi-calendar-week::before {\n  content: \"\\F0A33\";\n}\n\n.mdi-calendar-week-begin::before {\n  content: \"\\F0A34\";\n}\n\n.mdi-calendar-weekend::before {\n  content: \"\\F0ED9\";\n}\n\n.mdi-calendar-weekend-outline::before {\n  content: \"\\F0EDA\";\n}\n\n.mdi-call-made::before {\n  content: \"\\F00F7\";\n}\n\n.mdi-call-merge::before {\n  content: \"\\F00F8\";\n}\n\n.mdi-call-missed::before {\n  content: \"\\F00F9\";\n}\n\n.mdi-call-received::before {\n  content: \"\\F00FA\";\n}\n\n.mdi-call-split::before {\n  content: \"\\F00FB\";\n}\n\n.mdi-camcorder::before {\n  content: \"\\F00FC\";\n}\n\n.mdi-camcorder-off::before {\n  content: \"\\F00FF\";\n}\n\n.mdi-camera::before {\n  content: \"\\F0100\";\n}\n\n.mdi-camera-account::before {\n  content: \"\\F08CB\";\n}\n\n.mdi-camera-burst::before {\n  content: \"\\F0693\";\n}\n\n.mdi-camera-control::before {\n  content: \"\\F0B69\";\n}\n\n.mdi-camera-enhance::before {\n  content: \"\\F0101\";\n}\n\n.mdi-camera-enhance-outline::before {\n  content: \"\\F0B6A\";\n}\n\n.mdi-camera-flip::before {\n  content: \"\\F15D9\";\n}\n\n.mdi-camera-flip-outline::before {\n  content: \"\\F15DA\";\n}\n\n.mdi-camera-front::before {\n  content: \"\\F0102\";\n}\n\n.mdi-camera-front-variant::before {\n  content: \"\\F0103\";\n}\n\n.mdi-camera-gopro::before {\n  content: \"\\F07A1\";\n}\n\n.mdi-camera-image::before {\n  content: \"\\F08CC\";\n}\n\n.mdi-camera-iris::before {\n  content: \"\\F0104\";\n}\n\n.mdi-camera-metering-center::before {\n  content: \"\\F07A2\";\n}\n\n.mdi-camera-metering-matrix::before {\n  content: \"\\F07A3\";\n}\n\n.mdi-camera-metering-partial::before {\n  content: \"\\F07A4\";\n}\n\n.mdi-camera-metering-spot::before {\n  content: \"\\F07A5\";\n}\n\n.mdi-camera-off::before {\n  content: \"\\F05DF\";\n}\n\n.mdi-camera-outline::before {\n  content: \"\\F0D5D\";\n}\n\n.mdi-camera-party-mode::before {\n  content: \"\\F0105\";\n}\n\n.mdi-camera-plus::before {\n  content: \"\\F0EDB\";\n}\n\n.mdi-camera-plus-outline::before {\n  content: \"\\F0EDC\";\n}\n\n.mdi-camera-rear::before {\n  content: \"\\F0106\";\n}\n\n.mdi-camera-rear-variant::before {\n  content: \"\\F0107\";\n}\n\n.mdi-camera-retake::before {\n  content: \"\\F0E19\";\n}\n\n.mdi-camera-retake-outline::before {\n  content: \"\\F0E1A\";\n}\n\n.mdi-camera-switch::before {\n  content: \"\\F0108\";\n}\n\n.mdi-camera-switch-outline::before {\n  content: \"\\F084A\";\n}\n\n.mdi-camera-timer::before {\n  content: \"\\F0109\";\n}\n\n.mdi-camera-wireless::before {\n  content: \"\\F0DB6\";\n}\n\n.mdi-camera-wireless-outline::before {\n  content: \"\\F0DB7\";\n}\n\n.mdi-campfire::before {\n  content: \"\\F0EDD\";\n}\n\n.mdi-cancel::before {\n  content: \"\\F073A\";\n}\n\n.mdi-candle::before {\n  content: \"\\F05E2\";\n}\n\n.mdi-candycane::before {\n  content: \"\\F010A\";\n}\n\n.mdi-cannabis::before {\n  content: \"\\F07A6\";\n}\n\n.mdi-cannabis-off::before {\n  content: \"\\F166E\";\n}\n\n.mdi-caps-lock::before {\n  content: \"\\F0A9B\";\n}\n\n.mdi-car::before {\n  content: \"\\F010B\";\n}\n\n.mdi-car-2-plus::before {\n  content: \"\\F1015\";\n}\n\n.mdi-car-3-plus::before {\n  content: \"\\F1016\";\n}\n\n.mdi-car-arrow-left::before {\n  content: \"\\F13B2\";\n}\n\n.mdi-car-arrow-right::before {\n  content: \"\\F13B3\";\n}\n\n.mdi-car-back::before {\n  content: \"\\F0E1B\";\n}\n\n.mdi-car-battery::before {\n  content: \"\\F010C\";\n}\n\n.mdi-car-brake-abs::before {\n  content: \"\\F0C47\";\n}\n\n.mdi-car-brake-alert::before {\n  content: \"\\F0C48\";\n}\n\n.mdi-car-brake-hold::before {\n  content: \"\\F0D5E\";\n}\n\n.mdi-car-brake-parking::before {\n  content: \"\\F0D5F\";\n}\n\n.mdi-car-brake-retarder::before {\n  content: \"\\F1017\";\n}\n\n.mdi-car-child-seat::before {\n  content: \"\\F0FA3\";\n}\n\n.mdi-car-clutch::before {\n  content: \"\\F1018\";\n}\n\n.mdi-car-cog::before {\n  content: \"\\F13CC\";\n}\n\n.mdi-car-connected::before {\n  content: \"\\F010D\";\n}\n\n.mdi-car-convertible::before {\n  content: \"\\F07A7\";\n}\n\n.mdi-car-coolant-level::before {\n  content: \"\\F1019\";\n}\n\n.mdi-car-cruise-control::before {\n  content: \"\\F0D60\";\n}\n\n.mdi-car-defrost-front::before {\n  content: \"\\F0D61\";\n}\n\n.mdi-car-defrost-rear::before {\n  content: \"\\F0D62\";\n}\n\n.mdi-car-door::before {\n  content: \"\\F0B6B\";\n}\n\n.mdi-car-door-lock::before {\n  content: \"\\F109D\";\n}\n\n.mdi-car-electric::before {\n  content: \"\\F0B6C\";\n}\n\n.mdi-car-electric-outline::before {\n  content: \"\\F15B5\";\n}\n\n.mdi-car-emergency::before {\n  content: \"\\F160F\";\n}\n\n.mdi-car-esp::before {\n  content: \"\\F0C49\";\n}\n\n.mdi-car-estate::before {\n  content: \"\\F07A8\";\n}\n\n.mdi-car-hatchback::before {\n  content: \"\\F07A9\";\n}\n\n.mdi-car-info::before {\n  content: \"\\F11BE\";\n}\n\n.mdi-car-key::before {\n  content: \"\\F0B6D\";\n}\n\n.mdi-car-lifted-pickup::before {\n  content: \"\\F152D\";\n}\n\n.mdi-car-light-dimmed::before {\n  content: \"\\F0C4A\";\n}\n\n.mdi-car-light-fog::before {\n  content: \"\\F0C4B\";\n}\n\n.mdi-car-light-high::before {\n  content: \"\\F0C4C\";\n}\n\n.mdi-car-limousine::before {\n  content: \"\\F08CD\";\n}\n\n.mdi-car-multiple::before {\n  content: \"\\F0B6E\";\n}\n\n.mdi-car-off::before {\n  content: \"\\F0E1C\";\n}\n\n.mdi-car-outline::before {\n  content: \"\\F14ED\";\n}\n\n.mdi-car-parking-lights::before {\n  content: \"\\F0D63\";\n}\n\n.mdi-car-pickup::before {\n  content: \"\\F07AA\";\n}\n\n.mdi-car-seat::before {\n  content: \"\\F0FA4\";\n}\n\n.mdi-car-seat-cooler::before {\n  content: \"\\F0FA5\";\n}\n\n.mdi-car-seat-heater::before {\n  content: \"\\F0FA6\";\n}\n\n.mdi-car-settings::before {\n  content: \"\\F13CD\";\n}\n\n.mdi-car-shift-pattern::before {\n  content: \"\\F0F40\";\n}\n\n.mdi-car-side::before {\n  content: \"\\F07AB\";\n}\n\n.mdi-car-sports::before {\n  content: \"\\F07AC\";\n}\n\n.mdi-car-tire-alert::before {\n  content: \"\\F0C4D\";\n}\n\n.mdi-car-traction-control::before {\n  content: \"\\F0D64\";\n}\n\n.mdi-car-turbocharger::before {\n  content: \"\\F101A\";\n}\n\n.mdi-car-wash::before {\n  content: \"\\F010E\";\n}\n\n.mdi-car-windshield::before {\n  content: \"\\F101B\";\n}\n\n.mdi-car-windshield-outline::before {\n  content: \"\\F101C\";\n}\n\n.mdi-carabiner::before {\n  content: \"\\F14C0\";\n}\n\n.mdi-caravan::before {\n  content: \"\\F07AD\";\n}\n\n.mdi-card::before {\n  content: \"\\F0B6F\";\n}\n\n.mdi-card-account-details::before {\n  content: \"\\F05D2\";\n}\n\n.mdi-card-account-details-outline::before {\n  content: \"\\F0DAB\";\n}\n\n.mdi-card-account-details-star::before {\n  content: \"\\F02A3\";\n}\n\n.mdi-card-account-details-star-outline::before {\n  content: \"\\F06DB\";\n}\n\n.mdi-card-account-mail::before {\n  content: \"\\F018E\";\n}\n\n.mdi-card-account-mail-outline::before {\n  content: \"\\F0E98\";\n}\n\n.mdi-card-account-phone::before {\n  content: \"\\F0E99\";\n}\n\n.mdi-card-account-phone-outline::before {\n  content: \"\\F0E9A\";\n}\n\n.mdi-card-bulleted::before {\n  content: \"\\F0B70\";\n}\n\n.mdi-card-bulleted-off::before {\n  content: \"\\F0B71\";\n}\n\n.mdi-card-bulleted-off-outline::before {\n  content: \"\\F0B72\";\n}\n\n.mdi-card-bulleted-outline::before {\n  content: \"\\F0B73\";\n}\n\n.mdi-card-bulleted-settings::before {\n  content: \"\\F0B74\";\n}\n\n.mdi-card-bulleted-settings-outline::before {\n  content: \"\\F0B75\";\n}\n\n.mdi-card-minus::before {\n  content: \"\\F1600\";\n}\n\n.mdi-card-minus-outline::before {\n  content: \"\\F1601\";\n}\n\n.mdi-card-off::before {\n  content: \"\\F1602\";\n}\n\n.mdi-card-off-outline::before {\n  content: \"\\F1603\";\n}\n\n.mdi-card-outline::before {\n  content: \"\\F0B76\";\n}\n\n.mdi-card-plus::before {\n  content: \"\\F11FF\";\n}\n\n.mdi-card-plus-outline::before {\n  content: \"\\F1200\";\n}\n\n.mdi-card-remove::before {\n  content: \"\\F1604\";\n}\n\n.mdi-card-remove-outline::before {\n  content: \"\\F1605\";\n}\n\n.mdi-card-search::before {\n  content: \"\\F1074\";\n}\n\n.mdi-card-search-outline::before {\n  content: \"\\F1075\";\n}\n\n.mdi-card-text::before {\n  content: \"\\F0B77\";\n}\n\n.mdi-card-text-outline::before {\n  content: \"\\F0B78\";\n}\n\n.mdi-cards::before {\n  content: \"\\F0638\";\n}\n\n.mdi-cards-club::before {\n  content: \"\\F08CE\";\n}\n\n.mdi-cards-diamond::before {\n  content: \"\\F08CF\";\n}\n\n.mdi-cards-diamond-outline::before {\n  content: \"\\F101D\";\n}\n\n.mdi-cards-heart::before {\n  content: \"\\F08D0\";\n}\n\n.mdi-cards-outline::before {\n  content: \"\\F0639\";\n}\n\n.mdi-cards-playing-outline::before {\n  content: \"\\F063A\";\n}\n\n.mdi-cards-spade::before {\n  content: \"\\F08D1\";\n}\n\n.mdi-cards-variant::before {\n  content: \"\\F06C7\";\n}\n\n.mdi-carrot::before {\n  content: \"\\F010F\";\n}\n\n.mdi-cart::before {\n  content: \"\\F0110\";\n}\n\n.mdi-cart-arrow-down::before {\n  content: \"\\F0D66\";\n}\n\n.mdi-cart-arrow-right::before {\n  content: \"\\F0C4E\";\n}\n\n.mdi-cart-arrow-up::before {\n  content: \"\\F0D67\";\n}\n\n.mdi-cart-check::before {\n  content: \"\\F15EA\";\n}\n\n.mdi-cart-minus::before {\n  content: \"\\F0D68\";\n}\n\n.mdi-cart-off::before {\n  content: \"\\F066B\";\n}\n\n.mdi-cart-outline::before {\n  content: \"\\F0111\";\n}\n\n.mdi-cart-plus::before {\n  content: \"\\F0112\";\n}\n\n.mdi-cart-remove::before {\n  content: \"\\F0D69\";\n}\n\n.mdi-cart-variant::before {\n  content: \"\\F15EB\";\n}\n\n.mdi-case-sensitive-alt::before {\n  content: \"\\F0113\";\n}\n\n.mdi-cash::before {\n  content: \"\\F0114\";\n}\n\n.mdi-cash-100::before {\n  content: \"\\F0115\";\n}\n\n.mdi-cash-check::before {\n  content: \"\\F14EE\";\n}\n\n.mdi-cash-lock::before {\n  content: \"\\F14EA\";\n}\n\n.mdi-cash-lock-open::before {\n  content: \"\\F14EB\";\n}\n\n.mdi-cash-marker::before {\n  content: \"\\F0DB8\";\n}\n\n.mdi-cash-minus::before {\n  content: \"\\F1260\";\n}\n\n.mdi-cash-multiple::before {\n  content: \"\\F0116\";\n}\n\n.mdi-cash-plus::before {\n  content: \"\\F1261\";\n}\n\n.mdi-cash-refund::before {\n  content: \"\\F0A9C\";\n}\n\n.mdi-cash-register::before {\n  content: \"\\F0CF4\";\n}\n\n.mdi-cash-remove::before {\n  content: \"\\F1262\";\n}\n\n.mdi-cash-usd::before {\n  content: \"\\F1176\";\n}\n\n.mdi-cash-usd-outline::before {\n  content: \"\\F0117\";\n}\n\n.mdi-cassette::before {\n  content: \"\\F09D4\";\n}\n\n.mdi-cast::before {\n  content: \"\\F0118\";\n}\n\n.mdi-cast-audio::before {\n  content: \"\\F101E\";\n}\n\n.mdi-cast-connected::before {\n  content: \"\\F0119\";\n}\n\n.mdi-cast-education::before {\n  content: \"\\F0E1D\";\n}\n\n.mdi-cast-off::before {\n  content: \"\\F078A\";\n}\n\n.mdi-castle::before {\n  content: \"\\F011A\";\n}\n\n.mdi-cat::before {\n  content: \"\\F011B\";\n}\n\n.mdi-cctv::before {\n  content: \"\\F07AE\";\n}\n\n.mdi-ceiling-light::before {\n  content: \"\\F0769\";\n}\n\n.mdi-cellphone::before {\n  content: \"\\F011C\";\n}\n\n.mdi-cellphone-android::before {\n  content: \"\\F011D\";\n}\n\n.mdi-cellphone-arrow-down::before {\n  content: \"\\F09D5\";\n}\n\n.mdi-cellphone-basic::before {\n  content: \"\\F011E\";\n}\n\n.mdi-cellphone-charging::before {\n  content: \"\\F1397\";\n}\n\n.mdi-cellphone-cog::before {\n  content: \"\\F0951\";\n}\n\n.mdi-cellphone-dock::before {\n  content: \"\\F011F\";\n}\n\n.mdi-cellphone-erase::before {\n  content: \"\\F094D\";\n}\n\n.mdi-cellphone-information::before {\n  content: \"\\F0F41\";\n}\n\n.mdi-cellphone-iphone::before {\n  content: \"\\F0120\";\n}\n\n.mdi-cellphone-key::before {\n  content: \"\\F094E\";\n}\n\n.mdi-cellphone-link::before {\n  content: \"\\F0121\";\n}\n\n.mdi-cellphone-link-off::before {\n  content: \"\\F0122\";\n}\n\n.mdi-cellphone-lock::before {\n  content: \"\\F094F\";\n}\n\n.mdi-cellphone-message::before {\n  content: \"\\F08D3\";\n}\n\n.mdi-cellphone-message-off::before {\n  content: \"\\F10D2\";\n}\n\n.mdi-cellphone-nfc::before {\n  content: \"\\F0E90\";\n}\n\n.mdi-cellphone-nfc-off::before {\n  content: \"\\F12D8\";\n}\n\n.mdi-cellphone-off::before {\n  content: \"\\F0950\";\n}\n\n.mdi-cellphone-play::before {\n  content: \"\\F101F\";\n}\n\n.mdi-cellphone-screenshot::before {\n  content: \"\\F0A35\";\n}\n\n.mdi-cellphone-settings::before {\n  content: \"\\F0123\";\n}\n\n.mdi-cellphone-sound::before {\n  content: \"\\F0952\";\n}\n\n.mdi-cellphone-text::before {\n  content: \"\\F08D2\";\n}\n\n.mdi-cellphone-wireless::before {\n  content: \"\\F0815\";\n}\n\n.mdi-celtic-cross::before {\n  content: \"\\F0CF5\";\n}\n\n.mdi-centos::before {\n  content: \"\\F111A\";\n}\n\n.mdi-certificate::before {\n  content: \"\\F0124\";\n}\n\n.mdi-certificate-outline::before {\n  content: \"\\F1188\";\n}\n\n.mdi-chair-rolling::before {\n  content: \"\\F0F48\";\n}\n\n.mdi-chair-school::before {\n  content: \"\\F0125\";\n}\n\n.mdi-charity::before {\n  content: \"\\F0C4F\";\n}\n\n.mdi-chart-arc::before {\n  content: \"\\F0126\";\n}\n\n.mdi-chart-areaspline::before {\n  content: \"\\F0127\";\n}\n\n.mdi-chart-areaspline-variant::before {\n  content: \"\\F0E91\";\n}\n\n.mdi-chart-bar::before {\n  content: \"\\F0128\";\n}\n\n.mdi-chart-bar-stacked::before {\n  content: \"\\F076A\";\n}\n\n.mdi-chart-bell-curve::before {\n  content: \"\\F0C50\";\n}\n\n.mdi-chart-bell-curve-cumulative::before {\n  content: \"\\F0FA7\";\n}\n\n.mdi-chart-box::before {\n  content: \"\\F154D\";\n}\n\n.mdi-chart-box-outline::before {\n  content: \"\\F154E\";\n}\n\n.mdi-chart-box-plus-outline::before {\n  content: \"\\F154F\";\n}\n\n.mdi-chart-bubble::before {\n  content: \"\\F05E3\";\n}\n\n.mdi-chart-donut::before {\n  content: \"\\F07AF\";\n}\n\n.mdi-chart-donut-variant::before {\n  content: \"\\F07B0\";\n}\n\n.mdi-chart-gantt::before {\n  content: \"\\F066C\";\n}\n\n.mdi-chart-histogram::before {\n  content: \"\\F0129\";\n}\n\n.mdi-chart-line::before {\n  content: \"\\F012A\";\n}\n\n.mdi-chart-line-stacked::before {\n  content: \"\\F076B\";\n}\n\n.mdi-chart-line-variant::before {\n  content: \"\\F07B1\";\n}\n\n.mdi-chart-multiline::before {\n  content: \"\\F08D4\";\n}\n\n.mdi-chart-multiple::before {\n  content: \"\\F1213\";\n}\n\n.mdi-chart-pie::before {\n  content: \"\\F012B\";\n}\n\n.mdi-chart-ppf::before {\n  content: \"\\F1380\";\n}\n\n.mdi-chart-sankey::before {\n  content: \"\\F11DF\";\n}\n\n.mdi-chart-sankey-variant::before {\n  content: \"\\F11E0\";\n}\n\n.mdi-chart-scatter-plot::before {\n  content: \"\\F0E92\";\n}\n\n.mdi-chart-scatter-plot-hexbin::before {\n  content: \"\\F066D\";\n}\n\n.mdi-chart-timeline::before {\n  content: \"\\F066E\";\n}\n\n.mdi-chart-timeline-variant::before {\n  content: \"\\F0E93\";\n}\n\n.mdi-chart-timeline-variant-shimmer::before {\n  content: \"\\F15B6\";\n}\n\n.mdi-chart-tree::before {\n  content: \"\\F0E94\";\n}\n\n.mdi-chat::before {\n  content: \"\\F0B79\";\n}\n\n.mdi-chat-alert::before {\n  content: \"\\F0B7A\";\n}\n\n.mdi-chat-alert-outline::before {\n  content: \"\\F12C9\";\n}\n\n.mdi-chat-minus::before {\n  content: \"\\F1410\";\n}\n\n.mdi-chat-minus-outline::before {\n  content: \"\\F1413\";\n}\n\n.mdi-chat-outline::before {\n  content: \"\\F0EDE\";\n}\n\n.mdi-chat-plus::before {\n  content: \"\\F140F\";\n}\n\n.mdi-chat-plus-outline::before {\n  content: \"\\F1412\";\n}\n\n.mdi-chat-processing::before {\n  content: \"\\F0B7B\";\n}\n\n.mdi-chat-processing-outline::before {\n  content: \"\\F12CA\";\n}\n\n.mdi-chat-question::before {\n  content: \"\\F1738\";\n}\n\n.mdi-chat-question-outline::before {\n  content: \"\\F1739\";\n}\n\n.mdi-chat-remove::before {\n  content: \"\\F1411\";\n}\n\n.mdi-chat-remove-outline::before {\n  content: \"\\F1414\";\n}\n\n.mdi-chat-sleep::before {\n  content: \"\\F12D1\";\n}\n\n.mdi-chat-sleep-outline::before {\n  content: \"\\F12D2\";\n}\n\n.mdi-check::before {\n  content: \"\\F012C\";\n}\n\n.mdi-check-all::before {\n  content: \"\\F012D\";\n}\n\n.mdi-check-bold::before {\n  content: \"\\F0E1E\";\n}\n\n.mdi-check-box-multiple-outline::before {\n  content: \"\\F0C51\";\n}\n\n.mdi-check-box-outline::before {\n  content: \"\\F0C52\";\n}\n\n.mdi-check-circle::before {\n  content: \"\\F05E0\";\n}\n\n.mdi-check-circle-outline::before {\n  content: \"\\F05E1\";\n}\n\n.mdi-check-decagram::before {\n  content: \"\\F0791\";\n}\n\n.mdi-check-decagram-outline::before {\n  content: \"\\F1740\";\n}\n\n.mdi-check-network::before {\n  content: \"\\F0C53\";\n}\n\n.mdi-check-network-outline::before {\n  content: \"\\F0C54\";\n}\n\n.mdi-check-outline::before {\n  content: \"\\F0855\";\n}\n\n.mdi-check-underline::before {\n  content: \"\\F0E1F\";\n}\n\n.mdi-check-underline-circle::before {\n  content: \"\\F0E20\";\n}\n\n.mdi-check-underline-circle-outline::before {\n  content: \"\\F0E21\";\n}\n\n.mdi-checkbook::before {\n  content: \"\\F0A9D\";\n}\n\n.mdi-checkbox-blank::before {\n  content: \"\\F012E\";\n}\n\n.mdi-checkbox-blank-circle::before {\n  content: \"\\F012F\";\n}\n\n.mdi-checkbox-blank-circle-outline::before {\n  content: \"\\F0130\";\n}\n\n.mdi-checkbox-blank-off::before {\n  content: \"\\F12EC\";\n}\n\n.mdi-checkbox-blank-off-outline::before {\n  content: \"\\F12ED\";\n}\n\n.mdi-checkbox-blank-outline::before {\n  content: \"\\F0131\";\n}\n\n.mdi-checkbox-intermediate::before {\n  content: \"\\F0856\";\n}\n\n.mdi-checkbox-marked::before {\n  content: \"\\F0132\";\n}\n\n.mdi-checkbox-marked-circle::before {\n  content: \"\\F0133\";\n}\n\n.mdi-checkbox-marked-circle-outline::before {\n  content: \"\\F0134\";\n}\n\n.mdi-checkbox-marked-outline::before {\n  content: \"\\F0135\";\n}\n\n.mdi-checkbox-multiple-blank::before {\n  content: \"\\F0136\";\n}\n\n.mdi-checkbox-multiple-blank-circle::before {\n  content: \"\\F063B\";\n}\n\n.mdi-checkbox-multiple-blank-circle-outline::before {\n  content: \"\\F063C\";\n}\n\n.mdi-checkbox-multiple-blank-outline::before {\n  content: \"\\F0137\";\n}\n\n.mdi-checkbox-multiple-marked::before {\n  content: \"\\F0138\";\n}\n\n.mdi-checkbox-multiple-marked-circle::before {\n  content: \"\\F063D\";\n}\n\n.mdi-checkbox-multiple-marked-circle-outline::before {\n  content: \"\\F063E\";\n}\n\n.mdi-checkbox-multiple-marked-outline::before {\n  content: \"\\F0139\";\n}\n\n.mdi-checkerboard::before {\n  content: \"\\F013A\";\n}\n\n.mdi-checkerboard-minus::before {\n  content: \"\\F1202\";\n}\n\n.mdi-checkerboard-plus::before {\n  content: \"\\F1201\";\n}\n\n.mdi-checkerboard-remove::before {\n  content: \"\\F1203\";\n}\n\n.mdi-cheese::before {\n  content: \"\\F12B9\";\n}\n\n.mdi-cheese-off::before {\n  content: \"\\F13EE\";\n}\n\n.mdi-chef-hat::before {\n  content: \"\\F0B7C\";\n}\n\n.mdi-chemical-weapon::before {\n  content: \"\\F013B\";\n}\n\n.mdi-chess-bishop::before {\n  content: \"\\F085C\";\n}\n\n.mdi-chess-king::before {\n  content: \"\\F0857\";\n}\n\n.mdi-chess-knight::before {\n  content: \"\\F0858\";\n}\n\n.mdi-chess-pawn::before {\n  content: \"\\F0859\";\n}\n\n.mdi-chess-queen::before {\n  content: \"\\F085A\";\n}\n\n.mdi-chess-rook::before {\n  content: \"\\F085B\";\n}\n\n.mdi-chevron-double-down::before {\n  content: \"\\F013C\";\n}\n\n.mdi-chevron-double-left::before {\n  content: \"\\F013D\";\n}\n\n.mdi-chevron-double-right::before {\n  content: \"\\F013E\";\n}\n\n.mdi-chevron-double-up::before {\n  content: \"\\F013F\";\n}\n\n.mdi-chevron-down::before {\n  content: \"\\F0140\";\n}\n\n.mdi-chevron-down-box::before {\n  content: \"\\F09D6\";\n}\n\n.mdi-chevron-down-box-outline::before {\n  content: \"\\F09D7\";\n}\n\n.mdi-chevron-down-circle::before {\n  content: \"\\F0B26\";\n}\n\n.mdi-chevron-down-circle-outline::before {\n  content: \"\\F0B27\";\n}\n\n.mdi-chevron-left::before {\n  content: \"\\F0141\";\n}\n\n.mdi-chevron-left-box::before {\n  content: \"\\F09D8\";\n}\n\n.mdi-chevron-left-box-outline::before {\n  content: \"\\F09D9\";\n}\n\n.mdi-chevron-left-circle::before {\n  content: \"\\F0B28\";\n}\n\n.mdi-chevron-left-circle-outline::before {\n  content: \"\\F0B29\";\n}\n\n.mdi-chevron-right::before {\n  content: \"\\F0142\";\n}\n\n.mdi-chevron-right-box::before {\n  content: \"\\F09DA\";\n}\n\n.mdi-chevron-right-box-outline::before {\n  content: \"\\F09DB\";\n}\n\n.mdi-chevron-right-circle::before {\n  content: \"\\F0B2A\";\n}\n\n.mdi-chevron-right-circle-outline::before {\n  content: \"\\F0B2B\";\n}\n\n.mdi-chevron-triple-down::before {\n  content: \"\\F0DB9\";\n}\n\n.mdi-chevron-triple-left::before {\n  content: \"\\F0DBA\";\n}\n\n.mdi-chevron-triple-right::before {\n  content: \"\\F0DBB\";\n}\n\n.mdi-chevron-triple-up::before {\n  content: \"\\F0DBC\";\n}\n\n.mdi-chevron-up::before {\n  content: \"\\F0143\";\n}\n\n.mdi-chevron-up-box::before {\n  content: \"\\F09DC\";\n}\n\n.mdi-chevron-up-box-outline::before {\n  content: \"\\F09DD\";\n}\n\n.mdi-chevron-up-circle::before {\n  content: \"\\F0B2C\";\n}\n\n.mdi-chevron-up-circle-outline::before {\n  content: \"\\F0B2D\";\n}\n\n.mdi-chili-hot::before {\n  content: \"\\F07B2\";\n}\n\n.mdi-chili-medium::before {\n  content: \"\\F07B3\";\n}\n\n.mdi-chili-mild::before {\n  content: \"\\F07B4\";\n}\n\n.mdi-chili-off::before {\n  content: \"\\F1467\";\n}\n\n.mdi-chip::before {\n  content: \"\\F061A\";\n}\n\n.mdi-christianity::before {\n  content: \"\\F0953\";\n}\n\n.mdi-christianity-outline::before {\n  content: \"\\F0CF6\";\n}\n\n.mdi-church::before {\n  content: \"\\F0144\";\n}\n\n.mdi-cigar::before {\n  content: \"\\F1189\";\n}\n\n.mdi-cigar-off::before {\n  content: \"\\F141B\";\n}\n\n.mdi-circle::before {\n  content: \"\\F0765\";\n}\n\n.mdi-circle-box::before {\n  content: \"\\F15DC\";\n}\n\n.mdi-circle-box-outline::before {\n  content: \"\\F15DD\";\n}\n\n.mdi-circle-double::before {\n  content: \"\\F0E95\";\n}\n\n.mdi-circle-edit-outline::before {\n  content: \"\\F08D5\";\n}\n\n.mdi-circle-expand::before {\n  content: \"\\F0E96\";\n}\n\n.mdi-circle-half::before {\n  content: \"\\F1395\";\n}\n\n.mdi-circle-half-full::before {\n  content: \"\\F1396\";\n}\n\n.mdi-circle-medium::before {\n  content: \"\\F09DE\";\n}\n\n.mdi-circle-multiple::before {\n  content: \"\\F0B38\";\n}\n\n.mdi-circle-multiple-outline::before {\n  content: \"\\F0695\";\n}\n\n.mdi-circle-off-outline::before {\n  content: \"\\F10D3\";\n}\n\n.mdi-circle-outline::before {\n  content: \"\\F0766\";\n}\n\n.mdi-circle-slice-1::before {\n  content: \"\\F0A9E\";\n}\n\n.mdi-circle-slice-2::before {\n  content: \"\\F0A9F\";\n}\n\n.mdi-circle-slice-3::before {\n  content: \"\\F0AA0\";\n}\n\n.mdi-circle-slice-4::before {\n  content: \"\\F0AA1\";\n}\n\n.mdi-circle-slice-5::before {\n  content: \"\\F0AA2\";\n}\n\n.mdi-circle-slice-6::before {\n  content: \"\\F0AA3\";\n}\n\n.mdi-circle-slice-7::before {\n  content: \"\\F0AA4\";\n}\n\n.mdi-circle-slice-8::before {\n  content: \"\\F0AA5\";\n}\n\n.mdi-circle-small::before {\n  content: \"\\F09DF\";\n}\n\n.mdi-circular-saw::before {\n  content: \"\\F0E22\";\n}\n\n.mdi-city::before {\n  content: \"\\F0146\";\n}\n\n.mdi-city-variant::before {\n  content: \"\\F0A36\";\n}\n\n.mdi-city-variant-outline::before {\n  content: \"\\F0A37\";\n}\n\n.mdi-clipboard::before {\n  content: \"\\F0147\";\n}\n\n.mdi-clipboard-account::before {\n  content: \"\\F0148\";\n}\n\n.mdi-clipboard-account-outline::before {\n  content: \"\\F0C55\";\n}\n\n.mdi-clipboard-alert::before {\n  content: \"\\F0149\";\n}\n\n.mdi-clipboard-alert-outline::before {\n  content: \"\\F0CF7\";\n}\n\n.mdi-clipboard-arrow-down::before {\n  content: \"\\F014A\";\n}\n\n.mdi-clipboard-arrow-down-outline::before {\n  content: \"\\F0C56\";\n}\n\n.mdi-clipboard-arrow-left::before {\n  content: \"\\F014B\";\n}\n\n.mdi-clipboard-arrow-left-outline::before {\n  content: \"\\F0CF8\";\n}\n\n.mdi-clipboard-arrow-right::before {\n  content: \"\\F0CF9\";\n}\n\n.mdi-clipboard-arrow-right-outline::before {\n  content: \"\\F0CFA\";\n}\n\n.mdi-clipboard-arrow-up::before {\n  content: \"\\F0C57\";\n}\n\n.mdi-clipboard-arrow-up-outline::before {\n  content: \"\\F0C58\";\n}\n\n.mdi-clipboard-check::before {\n  content: \"\\F014E\";\n}\n\n.mdi-clipboard-check-multiple::before {\n  content: \"\\F1263\";\n}\n\n.mdi-clipboard-check-multiple-outline::before {\n  content: \"\\F1264\";\n}\n\n.mdi-clipboard-check-outline::before {\n  content: \"\\F08A8\";\n}\n\n.mdi-clipboard-clock::before {\n  content: \"\\F16E2\";\n}\n\n.mdi-clipboard-clock-outline::before {\n  content: \"\\F16E3\";\n}\n\n.mdi-clipboard-edit::before {\n  content: \"\\F14E5\";\n}\n\n.mdi-clipboard-edit-outline::before {\n  content: \"\\F14E6\";\n}\n\n.mdi-clipboard-file::before {\n  content: \"\\F1265\";\n}\n\n.mdi-clipboard-file-outline::before {\n  content: \"\\F1266\";\n}\n\n.mdi-clipboard-flow::before {\n  content: \"\\F06C8\";\n}\n\n.mdi-clipboard-flow-outline::before {\n  content: \"\\F1117\";\n}\n\n.mdi-clipboard-list::before {\n  content: \"\\F10D4\";\n}\n\n.mdi-clipboard-list-outline::before {\n  content: \"\\F10D5\";\n}\n\n.mdi-clipboard-minus::before {\n  content: \"\\F1618\";\n}\n\n.mdi-clipboard-minus-outline::before {\n  content: \"\\F1619\";\n}\n\n.mdi-clipboard-multiple::before {\n  content: \"\\F1267\";\n}\n\n.mdi-clipboard-multiple-outline::before {\n  content: \"\\F1268\";\n}\n\n.mdi-clipboard-off::before {\n  content: \"\\F161A\";\n}\n\n.mdi-clipboard-off-outline::before {\n  content: \"\\F161B\";\n}\n\n.mdi-clipboard-outline::before {\n  content: \"\\F014C\";\n}\n\n.mdi-clipboard-play::before {\n  content: \"\\F0C59\";\n}\n\n.mdi-clipboard-play-multiple::before {\n  content: \"\\F1269\";\n}\n\n.mdi-clipboard-play-multiple-outline::before {\n  content: \"\\F126A\";\n}\n\n.mdi-clipboard-play-outline::before {\n  content: \"\\F0C5A\";\n}\n\n.mdi-clipboard-plus::before {\n  content: \"\\F0751\";\n}\n\n.mdi-clipboard-plus-outline::before {\n  content: \"\\F131F\";\n}\n\n.mdi-clipboard-pulse::before {\n  content: \"\\F085D\";\n}\n\n.mdi-clipboard-pulse-outline::before {\n  content: \"\\F085E\";\n}\n\n.mdi-clipboard-remove::before {\n  content: \"\\F161C\";\n}\n\n.mdi-clipboard-remove-outline::before {\n  content: \"\\F161D\";\n}\n\n.mdi-clipboard-search::before {\n  content: \"\\F161E\";\n}\n\n.mdi-clipboard-search-outline::before {\n  content: \"\\F161F\";\n}\n\n.mdi-clipboard-text::before {\n  content: \"\\F014D\";\n}\n\n.mdi-clipboard-text-multiple::before {\n  content: \"\\F126B\";\n}\n\n.mdi-clipboard-text-multiple-outline::before {\n  content: \"\\F126C\";\n}\n\n.mdi-clipboard-text-off::before {\n  content: \"\\F1620\";\n}\n\n.mdi-clipboard-text-off-outline::before {\n  content: \"\\F1621\";\n}\n\n.mdi-clipboard-text-outline::before {\n  content: \"\\F0A38\";\n}\n\n.mdi-clipboard-text-play::before {\n  content: \"\\F0C5B\";\n}\n\n.mdi-clipboard-text-play-outline::before {\n  content: \"\\F0C5C\";\n}\n\n.mdi-clipboard-text-search::before {\n  content: \"\\F1622\";\n}\n\n.mdi-clipboard-text-search-outline::before {\n  content: \"\\F1623\";\n}\n\n.mdi-clippy::before {\n  content: \"\\F014F\";\n}\n\n.mdi-clock::before {\n  content: \"\\F0954\";\n}\n\n.mdi-clock-alert::before {\n  content: \"\\F0955\";\n}\n\n.mdi-clock-alert-outline::before {\n  content: \"\\F05CE\";\n}\n\n.mdi-clock-check::before {\n  content: \"\\F0FA8\";\n}\n\n.mdi-clock-check-outline::before {\n  content: \"\\F0FA9\";\n}\n\n.mdi-clock-digital::before {\n  content: \"\\F0E97\";\n}\n\n.mdi-clock-end::before {\n  content: \"\\F0151\";\n}\n\n.mdi-clock-fast::before {\n  content: \"\\F0152\";\n}\n\n.mdi-clock-in::before {\n  content: \"\\F0153\";\n}\n\n.mdi-clock-out::before {\n  content: \"\\F0154\";\n}\n\n.mdi-clock-outline::before {\n  content: \"\\F0150\";\n}\n\n.mdi-clock-start::before {\n  content: \"\\F0155\";\n}\n\n.mdi-clock-time-eight::before {\n  content: \"\\F1446\";\n}\n\n.mdi-clock-time-eight-outline::before {\n  content: \"\\F1452\";\n}\n\n.mdi-clock-time-eleven::before {\n  content: \"\\F1449\";\n}\n\n.mdi-clock-time-eleven-outline::before {\n  content: \"\\F1455\";\n}\n\n.mdi-clock-time-five::before {\n  content: \"\\F1443\";\n}\n\n.mdi-clock-time-five-outline::before {\n  content: \"\\F144F\";\n}\n\n.mdi-clock-time-four::before {\n  content: \"\\F1442\";\n}\n\n.mdi-clock-time-four-outline::before {\n  content: \"\\F144E\";\n}\n\n.mdi-clock-time-nine::before {\n  content: \"\\F1447\";\n}\n\n.mdi-clock-time-nine-outline::before {\n  content: \"\\F1453\";\n}\n\n.mdi-clock-time-one::before {\n  content: \"\\F143F\";\n}\n\n.mdi-clock-time-one-outline::before {\n  content: \"\\F144B\";\n}\n\n.mdi-clock-time-seven::before {\n  content: \"\\F1445\";\n}\n\n.mdi-clock-time-seven-outline::before {\n  content: \"\\F1451\";\n}\n\n.mdi-clock-time-six::before {\n  content: \"\\F1444\";\n}\n\n.mdi-clock-time-six-outline::before {\n  content: \"\\F1450\";\n}\n\n.mdi-clock-time-ten::before {\n  content: \"\\F1448\";\n}\n\n.mdi-clock-time-ten-outline::before {\n  content: \"\\F1454\";\n}\n\n.mdi-clock-time-three::before {\n  content: \"\\F1441\";\n}\n\n.mdi-clock-time-three-outline::before {\n  content: \"\\F144D\";\n}\n\n.mdi-clock-time-twelve::before {\n  content: \"\\F144A\";\n}\n\n.mdi-clock-time-twelve-outline::before {\n  content: \"\\F1456\";\n}\n\n.mdi-clock-time-two::before {\n  content: \"\\F1440\";\n}\n\n.mdi-clock-time-two-outline::before {\n  content: \"\\F144C\";\n}\n\n.mdi-close::before {\n  content: \"\\F0156\";\n}\n\n.mdi-close-box::before {\n  content: \"\\F0157\";\n}\n\n.mdi-close-box-multiple::before {\n  content: \"\\F0C5D\";\n}\n\n.mdi-close-box-multiple-outline::before {\n  content: \"\\F0C5E\";\n}\n\n.mdi-close-box-outline::before {\n  content: \"\\F0158\";\n}\n\n.mdi-close-circle::before {\n  content: \"\\F0159\";\n}\n\n.mdi-close-circle-multiple::before {\n  content: \"\\F062A\";\n}\n\n.mdi-close-circle-multiple-outline::before {\n  content: \"\\F0883\";\n}\n\n.mdi-close-circle-outline::before {\n  content: \"\\F015A\";\n}\n\n.mdi-close-network::before {\n  content: \"\\F015B\";\n}\n\n.mdi-close-network-outline::before {\n  content: \"\\F0C5F\";\n}\n\n.mdi-close-octagon::before {\n  content: \"\\F015C\";\n}\n\n.mdi-close-octagon-outline::before {\n  content: \"\\F015D\";\n}\n\n.mdi-close-outline::before {\n  content: \"\\F06C9\";\n}\n\n.mdi-close-thick::before {\n  content: \"\\F1398\";\n}\n\n.mdi-closed-caption::before {\n  content: \"\\F015E\";\n}\n\n.mdi-closed-caption-outline::before {\n  content: \"\\F0DBD\";\n}\n\n.mdi-cloud::before {\n  content: \"\\F015F\";\n}\n\n.mdi-cloud-alert::before {\n  content: \"\\F09E0\";\n}\n\n.mdi-cloud-braces::before {\n  content: \"\\F07B5\";\n}\n\n.mdi-cloud-check::before {\n  content: \"\\F0160\";\n}\n\n.mdi-cloud-check-outline::before {\n  content: \"\\F12CC\";\n}\n\n.mdi-cloud-circle::before {\n  content: \"\\F0161\";\n}\n\n.mdi-cloud-download::before {\n  content: \"\\F0162\";\n}\n\n.mdi-cloud-download-outline::before {\n  content: \"\\F0B7D\";\n}\n\n.mdi-cloud-lock::before {\n  content: \"\\F11F1\";\n}\n\n.mdi-cloud-lock-outline::before {\n  content: \"\\F11F2\";\n}\n\n.mdi-cloud-off-outline::before {\n  content: \"\\F0164\";\n}\n\n.mdi-cloud-outline::before {\n  content: \"\\F0163\";\n}\n\n.mdi-cloud-print::before {\n  content: \"\\F0165\";\n}\n\n.mdi-cloud-print-outline::before {\n  content: \"\\F0166\";\n}\n\n.mdi-cloud-question::before {\n  content: \"\\F0A39\";\n}\n\n.mdi-cloud-refresh::before {\n  content: \"\\F052A\";\n}\n\n.mdi-cloud-search::before {\n  content: \"\\F0956\";\n}\n\n.mdi-cloud-search-outline::before {\n  content: \"\\F0957\";\n}\n\n.mdi-cloud-sync::before {\n  content: \"\\F063F\";\n}\n\n.mdi-cloud-sync-outline::before {\n  content: \"\\F12D6\";\n}\n\n.mdi-cloud-tags::before {\n  content: \"\\F07B6\";\n}\n\n.mdi-cloud-upload::before {\n  content: \"\\F0167\";\n}\n\n.mdi-cloud-upload-outline::before {\n  content: \"\\F0B7E\";\n}\n\n.mdi-clover::before {\n  content: \"\\F0816\";\n}\n\n.mdi-coach-lamp::before {\n  content: \"\\F1020\";\n}\n\n.mdi-coat-rack::before {\n  content: \"\\F109E\";\n}\n\n.mdi-code-array::before {\n  content: \"\\F0168\";\n}\n\n.mdi-code-braces::before {\n  content: \"\\F0169\";\n}\n\n.mdi-code-braces-box::before {\n  content: \"\\F10D6\";\n}\n\n.mdi-code-brackets::before {\n  content: \"\\F016A\";\n}\n\n.mdi-code-equal::before {\n  content: \"\\F016B\";\n}\n\n.mdi-code-greater-than::before {\n  content: \"\\F016C\";\n}\n\n.mdi-code-greater-than-or-equal::before {\n  content: \"\\F016D\";\n}\n\n.mdi-code-json::before {\n  content: \"\\F0626\";\n}\n\n.mdi-code-less-than::before {\n  content: \"\\F016E\";\n}\n\n.mdi-code-less-than-or-equal::before {\n  content: \"\\F016F\";\n}\n\n.mdi-code-not-equal::before {\n  content: \"\\F0170\";\n}\n\n.mdi-code-not-equal-variant::before {\n  content: \"\\F0171\";\n}\n\n.mdi-code-parentheses::before {\n  content: \"\\F0172\";\n}\n\n.mdi-code-parentheses-box::before {\n  content: \"\\F10D7\";\n}\n\n.mdi-code-string::before {\n  content: \"\\F0173\";\n}\n\n.mdi-code-tags::before {\n  content: \"\\F0174\";\n}\n\n.mdi-code-tags-check::before {\n  content: \"\\F0694\";\n}\n\n.mdi-codepen::before {\n  content: \"\\F0175\";\n}\n\n.mdi-coffee::before {\n  content: \"\\F0176\";\n}\n\n.mdi-coffee-maker::before {\n  content: \"\\F109F\";\n}\n\n.mdi-coffee-off::before {\n  content: \"\\F0FAA\";\n}\n\n.mdi-coffee-off-outline::before {\n  content: \"\\F0FAB\";\n}\n\n.mdi-coffee-outline::before {\n  content: \"\\F06CA\";\n}\n\n.mdi-coffee-to-go::before {\n  content: \"\\F0177\";\n}\n\n.mdi-coffee-to-go-outline::before {\n  content: \"\\F130E\";\n}\n\n.mdi-coffin::before {\n  content: \"\\F0B7F\";\n}\n\n.mdi-cog::before {\n  content: \"\\F0493\";\n}\n\n.mdi-cog-box::before {\n  content: \"\\F0494\";\n}\n\n.mdi-cog-clockwise::before {\n  content: \"\\F11DD\";\n}\n\n.mdi-cog-counterclockwise::before {\n  content: \"\\F11DE\";\n}\n\n.mdi-cog-off::before {\n  content: \"\\F13CE\";\n}\n\n.mdi-cog-off-outline::before {\n  content: \"\\F13CF\";\n}\n\n.mdi-cog-outline::before {\n  content: \"\\F08BB\";\n}\n\n.mdi-cog-refresh::before {\n  content: \"\\F145E\";\n}\n\n.mdi-cog-refresh-outline::before {\n  content: \"\\F145F\";\n}\n\n.mdi-cog-sync::before {\n  content: \"\\F1460\";\n}\n\n.mdi-cog-sync-outline::before {\n  content: \"\\F1461\";\n}\n\n.mdi-cog-transfer::before {\n  content: \"\\F105B\";\n}\n\n.mdi-cog-transfer-outline::before {\n  content: \"\\F105C\";\n}\n\n.mdi-cogs::before {\n  content: \"\\F08D6\";\n}\n\n.mdi-collage::before {\n  content: \"\\F0640\";\n}\n\n.mdi-collapse-all::before {\n  content: \"\\F0AA6\";\n}\n\n.mdi-collapse-all-outline::before {\n  content: \"\\F0AA7\";\n}\n\n.mdi-color-helper::before {\n  content: \"\\F0179\";\n}\n\n.mdi-comma::before {\n  content: \"\\F0E23\";\n}\n\n.mdi-comma-box::before {\n  content: \"\\F0E2B\";\n}\n\n.mdi-comma-box-outline::before {\n  content: \"\\F0E24\";\n}\n\n.mdi-comma-circle::before {\n  content: \"\\F0E25\";\n}\n\n.mdi-comma-circle-outline::before {\n  content: \"\\F0E26\";\n}\n\n.mdi-comment::before {\n  content: \"\\F017A\";\n}\n\n.mdi-comment-account::before {\n  content: \"\\F017B\";\n}\n\n.mdi-comment-account-outline::before {\n  content: \"\\F017C\";\n}\n\n.mdi-comment-alert::before {\n  content: \"\\F017D\";\n}\n\n.mdi-comment-alert-outline::before {\n  content: \"\\F017E\";\n}\n\n.mdi-comment-arrow-left::before {\n  content: \"\\F09E1\";\n}\n\n.mdi-comment-arrow-left-outline::before {\n  content: \"\\F09E2\";\n}\n\n.mdi-comment-arrow-right::before {\n  content: \"\\F09E3\";\n}\n\n.mdi-comment-arrow-right-outline::before {\n  content: \"\\F09E4\";\n}\n\n.mdi-comment-bookmark::before {\n  content: \"\\F15AE\";\n}\n\n.mdi-comment-bookmark-outline::before {\n  content: \"\\F15AF\";\n}\n\n.mdi-comment-check::before {\n  content: \"\\F017F\";\n}\n\n.mdi-comment-check-outline::before {\n  content: \"\\F0180\";\n}\n\n.mdi-comment-edit::before {\n  content: \"\\F11BF\";\n}\n\n.mdi-comment-edit-outline::before {\n  content: \"\\F12C4\";\n}\n\n.mdi-comment-eye::before {\n  content: \"\\F0A3A\";\n}\n\n.mdi-comment-eye-outline::before {\n  content: \"\\F0A3B\";\n}\n\n.mdi-comment-flash::before {\n  content: \"\\F15B0\";\n}\n\n.mdi-comment-flash-outline::before {\n  content: \"\\F15B1\";\n}\n\n.mdi-comment-minus::before {\n  content: \"\\F15DF\";\n}\n\n.mdi-comment-minus-outline::before {\n  content: \"\\F15E0\";\n}\n\n.mdi-comment-multiple::before {\n  content: \"\\F085F\";\n}\n\n.mdi-comment-multiple-outline::before {\n  content: \"\\F0181\";\n}\n\n.mdi-comment-off::before {\n  content: \"\\F15E1\";\n}\n\n.mdi-comment-off-outline::before {\n  content: \"\\F15E2\";\n}\n\n.mdi-comment-outline::before {\n  content: \"\\F0182\";\n}\n\n.mdi-comment-plus::before {\n  content: \"\\F09E5\";\n}\n\n.mdi-comment-plus-outline::before {\n  content: \"\\F0183\";\n}\n\n.mdi-comment-processing::before {\n  content: \"\\F0184\";\n}\n\n.mdi-comment-processing-outline::before {\n  content: \"\\F0185\";\n}\n\n.mdi-comment-question::before {\n  content: \"\\F0817\";\n}\n\n.mdi-comment-question-outline::before {\n  content: \"\\F0186\";\n}\n\n.mdi-comment-quote::before {\n  content: \"\\F1021\";\n}\n\n.mdi-comment-quote-outline::before {\n  content: \"\\F1022\";\n}\n\n.mdi-comment-remove::before {\n  content: \"\\F05DE\";\n}\n\n.mdi-comment-remove-outline::before {\n  content: \"\\F0187\";\n}\n\n.mdi-comment-search::before {\n  content: \"\\F0A3C\";\n}\n\n.mdi-comment-search-outline::before {\n  content: \"\\F0A3D\";\n}\n\n.mdi-comment-text::before {\n  content: \"\\F0188\";\n}\n\n.mdi-comment-text-multiple::before {\n  content: \"\\F0860\";\n}\n\n.mdi-comment-text-multiple-outline::before {\n  content: \"\\F0861\";\n}\n\n.mdi-comment-text-outline::before {\n  content: \"\\F0189\";\n}\n\n.mdi-compare::before {\n  content: \"\\F018A\";\n}\n\n.mdi-compare-horizontal::before {\n  content: \"\\F1492\";\n}\n\n.mdi-compare-vertical::before {\n  content: \"\\F1493\";\n}\n\n.mdi-compass::before {\n  content: \"\\F018B\";\n}\n\n.mdi-compass-off::before {\n  content: \"\\F0B80\";\n}\n\n.mdi-compass-off-outline::before {\n  content: \"\\F0B81\";\n}\n\n.mdi-compass-outline::before {\n  content: \"\\F018C\";\n}\n\n.mdi-compass-rose::before {\n  content: \"\\F1382\";\n}\n\n.mdi-concourse-ci::before {\n  content: \"\\F10A0\";\n}\n\n.mdi-connection::before {\n  content: \"\\F1616\";\n}\n\n.mdi-console::before {\n  content: \"\\F018D\";\n}\n\n.mdi-console-line::before {\n  content: \"\\F07B7\";\n}\n\n.mdi-console-network::before {\n  content: \"\\F08A9\";\n}\n\n.mdi-console-network-outline::before {\n  content: \"\\F0C60\";\n}\n\n.mdi-consolidate::before {\n  content: \"\\F10D8\";\n}\n\n.mdi-contactless-payment::before {\n  content: \"\\F0D6A\";\n}\n\n.mdi-contactless-payment-circle::before {\n  content: \"\\F0321\";\n}\n\n.mdi-contactless-payment-circle-outline::before {\n  content: \"\\F0408\";\n}\n\n.mdi-contacts::before {\n  content: \"\\F06CB\";\n}\n\n.mdi-contacts-outline::before {\n  content: \"\\F05B8\";\n}\n\n.mdi-contain::before {\n  content: \"\\F0A3E\";\n}\n\n.mdi-contain-end::before {\n  content: \"\\F0A3F\";\n}\n\n.mdi-contain-start::before {\n  content: \"\\F0A40\";\n}\n\n.mdi-content-copy::before {\n  content: \"\\F018F\";\n}\n\n.mdi-content-cut::before {\n  content: \"\\F0190\";\n}\n\n.mdi-content-duplicate::before {\n  content: \"\\F0191\";\n}\n\n.mdi-content-paste::before {\n  content: \"\\F0192\";\n}\n\n.mdi-content-save::before {\n  content: \"\\F0193\";\n}\n\n.mdi-content-save-alert::before {\n  content: \"\\F0F42\";\n}\n\n.mdi-content-save-alert-outline::before {\n  content: \"\\F0F43\";\n}\n\n.mdi-content-save-all::before {\n  content: \"\\F0194\";\n}\n\n.mdi-content-save-all-outline::before {\n  content: \"\\F0F44\";\n}\n\n.mdi-content-save-cog::before {\n  content: \"\\F145B\";\n}\n\n.mdi-content-save-cog-outline::before {\n  content: \"\\F145C\";\n}\n\n.mdi-content-save-edit::before {\n  content: \"\\F0CFB\";\n}\n\n.mdi-content-save-edit-outline::before {\n  content: \"\\F0CFC\";\n}\n\n.mdi-content-save-move::before {\n  content: \"\\F0E27\";\n}\n\n.mdi-content-save-move-outline::before {\n  content: \"\\F0E28\";\n}\n\n.mdi-content-save-off::before {\n  content: \"\\F1643\";\n}\n\n.mdi-content-save-off-outline::before {\n  content: \"\\F1644\";\n}\n\n.mdi-content-save-outline::before {\n  content: \"\\F0818\";\n}\n\n.mdi-content-save-settings::before {\n  content: \"\\F061B\";\n}\n\n.mdi-content-save-settings-outline::before {\n  content: \"\\F0B2E\";\n}\n\n.mdi-contrast::before {\n  content: \"\\F0195\";\n}\n\n.mdi-contrast-box::before {\n  content: \"\\F0196\";\n}\n\n.mdi-contrast-circle::before {\n  content: \"\\F0197\";\n}\n\n.mdi-controller-classic::before {\n  content: \"\\F0B82\";\n}\n\n.mdi-controller-classic-outline::before {\n  content: \"\\F0B83\";\n}\n\n.mdi-cookie::before {\n  content: \"\\F0198\";\n}\n\n.mdi-cookie-alert::before {\n  content: \"\\F16D0\";\n}\n\n.mdi-cookie-alert-outline::before {\n  content: \"\\F16D1\";\n}\n\n.mdi-cookie-check::before {\n  content: \"\\F16D2\";\n}\n\n.mdi-cookie-check-outline::before {\n  content: \"\\F16D3\";\n}\n\n.mdi-cookie-clock::before {\n  content: \"\\F16E4\";\n}\n\n.mdi-cookie-clock-outline::before {\n  content: \"\\F16E5\";\n}\n\n.mdi-cookie-cog::before {\n  content: \"\\F16D4\";\n}\n\n.mdi-cookie-cog-outline::before {\n  content: \"\\F16D5\";\n}\n\n.mdi-cookie-edit::before {\n  content: \"\\F16E6\";\n}\n\n.mdi-cookie-edit-outline::before {\n  content: \"\\F16E7\";\n}\n\n.mdi-cookie-lock::before {\n  content: \"\\F16E8\";\n}\n\n.mdi-cookie-lock-outline::before {\n  content: \"\\F16E9\";\n}\n\n.mdi-cookie-minus::before {\n  content: \"\\F16DA\";\n}\n\n.mdi-cookie-minus-outline::before {\n  content: \"\\F16DB\";\n}\n\n.mdi-cookie-off::before {\n  content: \"\\F16EA\";\n}\n\n.mdi-cookie-off-outline::before {\n  content: \"\\F16EB\";\n}\n\n.mdi-cookie-outline::before {\n  content: \"\\F16DE\";\n}\n\n.mdi-cookie-plus::before {\n  content: \"\\F16D6\";\n}\n\n.mdi-cookie-plus-outline::before {\n  content: \"\\F16D7\";\n}\n\n.mdi-cookie-refresh::before {\n  content: \"\\F16EC\";\n}\n\n.mdi-cookie-refresh-outline::before {\n  content: \"\\F16ED\";\n}\n\n.mdi-cookie-remove::before {\n  content: \"\\F16D8\";\n}\n\n.mdi-cookie-remove-outline::before {\n  content: \"\\F16D9\";\n}\n\n.mdi-cookie-settings::before {\n  content: \"\\F16DC\";\n}\n\n.mdi-cookie-settings-outline::before {\n  content: \"\\F16DD\";\n}\n\n.mdi-coolant-temperature::before {\n  content: \"\\F03C8\";\n}\n\n.mdi-copyright::before {\n  content: \"\\F05E6\";\n}\n\n.mdi-cordova::before {\n  content: \"\\F0958\";\n}\n\n.mdi-corn::before {\n  content: \"\\F07B8\";\n}\n\n.mdi-corn-off::before {\n  content: \"\\F13EF\";\n}\n\n.mdi-cosine-wave::before {\n  content: \"\\F1479\";\n}\n\n.mdi-counter::before {\n  content: \"\\F0199\";\n}\n\n.mdi-cow::before {\n  content: \"\\F019A\";\n}\n\n.mdi-cpu-32-bit::before {\n  content: \"\\F0EDF\";\n}\n\n.mdi-cpu-64-bit::before {\n  content: \"\\F0EE0\";\n}\n\n.mdi-crane::before {\n  content: \"\\F0862\";\n}\n\n.mdi-creation::before {\n  content: \"\\F0674\";\n}\n\n.mdi-creative-commons::before {\n  content: \"\\F0D6B\";\n}\n\n.mdi-credit-card::before {\n  content: \"\\F0FEF\";\n}\n\n.mdi-credit-card-check::before {\n  content: \"\\F13D0\";\n}\n\n.mdi-credit-card-check-outline::before {\n  content: \"\\F13D1\";\n}\n\n.mdi-credit-card-clock::before {\n  content: \"\\F0EE1\";\n}\n\n.mdi-credit-card-clock-outline::before {\n  content: \"\\F0EE2\";\n}\n\n.mdi-credit-card-marker::before {\n  content: \"\\F06A8\";\n}\n\n.mdi-credit-card-marker-outline::before {\n  content: \"\\F0DBE\";\n}\n\n.mdi-credit-card-minus::before {\n  content: \"\\F0FAC\";\n}\n\n.mdi-credit-card-minus-outline::before {\n  content: \"\\F0FAD\";\n}\n\n.mdi-credit-card-multiple::before {\n  content: \"\\F0FF0\";\n}\n\n.mdi-credit-card-multiple-outline::before {\n  content: \"\\F019C\";\n}\n\n.mdi-credit-card-off::before {\n  content: \"\\F0FF1\";\n}\n\n.mdi-credit-card-off-outline::before {\n  content: \"\\F05E4\";\n}\n\n.mdi-credit-card-outline::before {\n  content: \"\\F019B\";\n}\n\n.mdi-credit-card-plus::before {\n  content: \"\\F0FF2\";\n}\n\n.mdi-credit-card-plus-outline::before {\n  content: \"\\F0676\";\n}\n\n.mdi-credit-card-refresh::before {\n  content: \"\\F1645\";\n}\n\n.mdi-credit-card-refresh-outline::before {\n  content: \"\\F1646\";\n}\n\n.mdi-credit-card-refund::before {\n  content: \"\\F0FF3\";\n}\n\n.mdi-credit-card-refund-outline::before {\n  content: \"\\F0AA8\";\n}\n\n.mdi-credit-card-remove::before {\n  content: \"\\F0FAE\";\n}\n\n.mdi-credit-card-remove-outline::before {\n  content: \"\\F0FAF\";\n}\n\n.mdi-credit-card-scan::before {\n  content: \"\\F0FF4\";\n}\n\n.mdi-credit-card-scan-outline::before {\n  content: \"\\F019D\";\n}\n\n.mdi-credit-card-search::before {\n  content: \"\\F1647\";\n}\n\n.mdi-credit-card-search-outline::before {\n  content: \"\\F1648\";\n}\n\n.mdi-credit-card-settings::before {\n  content: \"\\F0FF5\";\n}\n\n.mdi-credit-card-settings-outline::before {\n  content: \"\\F08D7\";\n}\n\n.mdi-credit-card-sync::before {\n  content: \"\\F1649\";\n}\n\n.mdi-credit-card-sync-outline::before {\n  content: \"\\F164A\";\n}\n\n.mdi-credit-card-wireless::before {\n  content: \"\\F0802\";\n}\n\n.mdi-credit-card-wireless-off::before {\n  content: \"\\F057A\";\n}\n\n.mdi-credit-card-wireless-off-outline::before {\n  content: \"\\F057B\";\n}\n\n.mdi-credit-card-wireless-outline::before {\n  content: \"\\F0D6C\";\n}\n\n.mdi-cricket::before {\n  content: \"\\F0D6D\";\n}\n\n.mdi-crop::before {\n  content: \"\\F019E\";\n}\n\n.mdi-crop-free::before {\n  content: \"\\F019F\";\n}\n\n.mdi-crop-landscape::before {\n  content: \"\\F01A0\";\n}\n\n.mdi-crop-portrait::before {\n  content: \"\\F01A1\";\n}\n\n.mdi-crop-rotate::before {\n  content: \"\\F0696\";\n}\n\n.mdi-crop-square::before {\n  content: \"\\F01A2\";\n}\n\n.mdi-crosshairs::before {\n  content: \"\\F01A3\";\n}\n\n.mdi-crosshairs-gps::before {\n  content: \"\\F01A4\";\n}\n\n.mdi-crosshairs-off::before {\n  content: \"\\F0F45\";\n}\n\n.mdi-crosshairs-question::before {\n  content: \"\\F1136\";\n}\n\n.mdi-crown::before {\n  content: \"\\F01A5\";\n}\n\n.mdi-crown-outline::before {\n  content: \"\\F11D0\";\n}\n\n.mdi-cryengine::before {\n  content: \"\\F0959\";\n}\n\n.mdi-crystal-ball::before {\n  content: \"\\F0B2F\";\n}\n\n.mdi-cube::before {\n  content: \"\\F01A6\";\n}\n\n.mdi-cube-off::before {\n  content: \"\\F141C\";\n}\n\n.mdi-cube-off-outline::before {\n  content: \"\\F141D\";\n}\n\n.mdi-cube-outline::before {\n  content: \"\\F01A7\";\n}\n\n.mdi-cube-scan::before {\n  content: \"\\F0B84\";\n}\n\n.mdi-cube-send::before {\n  content: \"\\F01A8\";\n}\n\n.mdi-cube-unfolded::before {\n  content: \"\\F01A9\";\n}\n\n.mdi-cup::before {\n  content: \"\\F01AA\";\n}\n\n.mdi-cup-off::before {\n  content: \"\\F05E5\";\n}\n\n.mdi-cup-off-outline::before {\n  content: \"\\F137D\";\n}\n\n.mdi-cup-outline::before {\n  content: \"\\F130F\";\n}\n\n.mdi-cup-water::before {\n  content: \"\\F01AB\";\n}\n\n.mdi-cupboard::before {\n  content: \"\\F0F46\";\n}\n\n.mdi-cupboard-outline::before {\n  content: \"\\F0F47\";\n}\n\n.mdi-cupcake::before {\n  content: \"\\F095A\";\n}\n\n.mdi-curling::before {\n  content: \"\\F0863\";\n}\n\n.mdi-currency-bdt::before {\n  content: \"\\F0864\";\n}\n\n.mdi-currency-brl::before {\n  content: \"\\F0B85\";\n}\n\n.mdi-currency-btc::before {\n  content: \"\\F01AC\";\n}\n\n.mdi-currency-cny::before {\n  content: \"\\F07BA\";\n}\n\n.mdi-currency-eth::before {\n  content: \"\\F07BB\";\n}\n\n.mdi-currency-eur::before {\n  content: \"\\F01AD\";\n}\n\n.mdi-currency-eur-off::before {\n  content: \"\\F1315\";\n}\n\n.mdi-currency-gbp::before {\n  content: \"\\F01AE\";\n}\n\n.mdi-currency-ils::before {\n  content: \"\\F0C61\";\n}\n\n.mdi-currency-inr::before {\n  content: \"\\F01AF\";\n}\n\n.mdi-currency-jpy::before {\n  content: \"\\F07BC\";\n}\n\n.mdi-currency-krw::before {\n  content: \"\\F07BD\";\n}\n\n.mdi-currency-kzt::before {\n  content: \"\\F0865\";\n}\n\n.mdi-currency-mnt::before {\n  content: \"\\F1512\";\n}\n\n.mdi-currency-ngn::before {\n  content: \"\\F01B0\";\n}\n\n.mdi-currency-php::before {\n  content: \"\\F09E6\";\n}\n\n.mdi-currency-rial::before {\n  content: \"\\F0E9C\";\n}\n\n.mdi-currency-rub::before {\n  content: \"\\F01B1\";\n}\n\n.mdi-currency-sign::before {\n  content: \"\\F07BE\";\n}\n\n.mdi-currency-try::before {\n  content: \"\\F01B2\";\n}\n\n.mdi-currency-twd::before {\n  content: \"\\F07BF\";\n}\n\n.mdi-currency-usd::before {\n  content: \"\\F01C1\";\n}\n\n.mdi-currency-usd-circle::before {\n  content: \"\\F116B\";\n}\n\n.mdi-currency-usd-circle-outline::before {\n  content: \"\\F0178\";\n}\n\n.mdi-currency-usd-off::before {\n  content: \"\\F067A\";\n}\n\n.mdi-current-ac::before {\n  content: \"\\F1480\";\n}\n\n.mdi-current-dc::before {\n  content: \"\\F095C\";\n}\n\n.mdi-cursor-default::before {\n  content: \"\\F01C0\";\n}\n\n.mdi-cursor-default-click::before {\n  content: \"\\F0CFD\";\n}\n\n.mdi-cursor-default-click-outline::before {\n  content: \"\\F0CFE\";\n}\n\n.mdi-cursor-default-gesture::before {\n  content: \"\\F1127\";\n}\n\n.mdi-cursor-default-gesture-outline::before {\n  content: \"\\F1128\";\n}\n\n.mdi-cursor-default-outline::before {\n  content: \"\\F01BF\";\n}\n\n.mdi-cursor-move::before {\n  content: \"\\F01BE\";\n}\n\n.mdi-cursor-pointer::before {\n  content: \"\\F01BD\";\n}\n\n.mdi-cursor-text::before {\n  content: \"\\F05E7\";\n}\n\n.mdi-dance-ballroom::before {\n  content: \"\\F15FB\";\n}\n\n.mdi-dance-pole::before {\n  content: \"\\F1578\";\n}\n\n.mdi-data-matrix::before {\n  content: \"\\F153C\";\n}\n\n.mdi-data-matrix-edit::before {\n  content: \"\\F153D\";\n}\n\n.mdi-data-matrix-minus::before {\n  content: \"\\F153E\";\n}\n\n.mdi-data-matrix-plus::before {\n  content: \"\\F153F\";\n}\n\n.mdi-data-matrix-remove::before {\n  content: \"\\F1540\";\n}\n\n.mdi-data-matrix-scan::before {\n  content: \"\\F1541\";\n}\n\n.mdi-database::before {\n  content: \"\\F01BC\";\n}\n\n.mdi-database-alert::before {\n  content: \"\\F163A\";\n}\n\n.mdi-database-alert-outline::before {\n  content: \"\\F1624\";\n}\n\n.mdi-database-arrow-down::before {\n  content: \"\\F163B\";\n}\n\n.mdi-database-arrow-down-outline::before {\n  content: \"\\F1625\";\n}\n\n.mdi-database-arrow-left::before {\n  content: \"\\F163C\";\n}\n\n.mdi-database-arrow-left-outline::before {\n  content: \"\\F1626\";\n}\n\n.mdi-database-arrow-right::before {\n  content: \"\\F163D\";\n}\n\n.mdi-database-arrow-right-outline::before {\n  content: \"\\F1627\";\n}\n\n.mdi-database-arrow-up::before {\n  content: \"\\F163E\";\n}\n\n.mdi-database-arrow-up-outline::before {\n  content: \"\\F1628\";\n}\n\n.mdi-database-check::before {\n  content: \"\\F0AA9\";\n}\n\n.mdi-database-check-outline::before {\n  content: \"\\F1629\";\n}\n\n.mdi-database-clock::before {\n  content: \"\\F163F\";\n}\n\n.mdi-database-clock-outline::before {\n  content: \"\\F162A\";\n}\n\n.mdi-database-cog::before {\n  content: \"\\F164B\";\n}\n\n.mdi-database-cog-outline::before {\n  content: \"\\F164C\";\n}\n\n.mdi-database-edit::before {\n  content: \"\\F0B86\";\n}\n\n.mdi-database-edit-outline::before {\n  content: \"\\F162B\";\n}\n\n.mdi-database-export::before {\n  content: \"\\F095E\";\n}\n\n.mdi-database-export-outline::before {\n  content: \"\\F162C\";\n}\n\n.mdi-database-import::before {\n  content: \"\\F095D\";\n}\n\n.mdi-database-import-outline::before {\n  content: \"\\F162D\";\n}\n\n.mdi-database-lock::before {\n  content: \"\\F0AAA\";\n}\n\n.mdi-database-lock-outline::before {\n  content: \"\\F162E\";\n}\n\n.mdi-database-marker::before {\n  content: \"\\F12F6\";\n}\n\n.mdi-database-marker-outline::before {\n  content: \"\\F162F\";\n}\n\n.mdi-database-minus::before {\n  content: \"\\F01BB\";\n}\n\n.mdi-database-minus-outline::before {\n  content: \"\\F1630\";\n}\n\n.mdi-database-off::before {\n  content: \"\\F1640\";\n}\n\n.mdi-database-off-outline::before {\n  content: \"\\F1631\";\n}\n\n.mdi-database-outline::before {\n  content: \"\\F1632\";\n}\n\n.mdi-database-plus::before {\n  content: \"\\F01BA\";\n}\n\n.mdi-database-plus-outline::before {\n  content: \"\\F1633\";\n}\n\n.mdi-database-refresh::before {\n  content: \"\\F05C2\";\n}\n\n.mdi-database-refresh-outline::before {\n  content: \"\\F1634\";\n}\n\n.mdi-database-remove::before {\n  content: \"\\F0D00\";\n}\n\n.mdi-database-remove-outline::before {\n  content: \"\\F1635\";\n}\n\n.mdi-database-search::before {\n  content: \"\\F0866\";\n}\n\n.mdi-database-search-outline::before {\n  content: \"\\F1636\";\n}\n\n.mdi-database-settings::before {\n  content: \"\\F0D01\";\n}\n\n.mdi-database-settings-outline::before {\n  content: \"\\F1637\";\n}\n\n.mdi-database-sync::before {\n  content: \"\\F0CFF\";\n}\n\n.mdi-database-sync-outline::before {\n  content: \"\\F1638\";\n}\n\n.mdi-death-star::before {\n  content: \"\\F08D8\";\n}\n\n.mdi-death-star-variant::before {\n  content: \"\\F08D9\";\n}\n\n.mdi-deathly-hallows::before {\n  content: \"\\F0B87\";\n}\n\n.mdi-debian::before {\n  content: \"\\F08DA\";\n}\n\n.mdi-debug-step-into::before {\n  content: \"\\F01B9\";\n}\n\n.mdi-debug-step-out::before {\n  content: \"\\F01B8\";\n}\n\n.mdi-debug-step-over::before {\n  content: \"\\F01B7\";\n}\n\n.mdi-decagram::before {\n  content: \"\\F076C\";\n}\n\n.mdi-decagram-outline::before {\n  content: \"\\F076D\";\n}\n\n.mdi-decimal::before {\n  content: \"\\F10A1\";\n}\n\n.mdi-decimal-comma::before {\n  content: \"\\F10A2\";\n}\n\n.mdi-decimal-comma-decrease::before {\n  content: \"\\F10A3\";\n}\n\n.mdi-decimal-comma-increase::before {\n  content: \"\\F10A4\";\n}\n\n.mdi-decimal-decrease::before {\n  content: \"\\F01B6\";\n}\n\n.mdi-decimal-increase::before {\n  content: \"\\F01B5\";\n}\n\n.mdi-delete::before {\n  content: \"\\F01B4\";\n}\n\n.mdi-delete-alert::before {\n  content: \"\\F10A5\";\n}\n\n.mdi-delete-alert-outline::before {\n  content: \"\\F10A6\";\n}\n\n.mdi-delete-circle::before {\n  content: \"\\F0683\";\n}\n\n.mdi-delete-circle-outline::before {\n  content: \"\\F0B88\";\n}\n\n.mdi-delete-clock::before {\n  content: \"\\F1556\";\n}\n\n.mdi-delete-clock-outline::before {\n  content: \"\\F1557\";\n}\n\n.mdi-delete-empty::before {\n  content: \"\\F06CC\";\n}\n\n.mdi-delete-empty-outline::before {\n  content: \"\\F0E9D\";\n}\n\n.mdi-delete-forever::before {\n  content: \"\\F05E8\";\n}\n\n.mdi-delete-forever-outline::before {\n  content: \"\\F0B89\";\n}\n\n.mdi-delete-off::before {\n  content: \"\\F10A7\";\n}\n\n.mdi-delete-off-outline::before {\n  content: \"\\F10A8\";\n}\n\n.mdi-delete-outline::before {\n  content: \"\\F09E7\";\n}\n\n.mdi-delete-restore::before {\n  content: \"\\F0819\";\n}\n\n.mdi-delete-sweep::before {\n  content: \"\\F05E9\";\n}\n\n.mdi-delete-sweep-outline::before {\n  content: \"\\F0C62\";\n}\n\n.mdi-delete-variant::before {\n  content: \"\\F01B3\";\n}\n\n.mdi-delta::before {\n  content: \"\\F01C2\";\n}\n\n.mdi-desk::before {\n  content: \"\\F1239\";\n}\n\n.mdi-desk-lamp::before {\n  content: \"\\F095F\";\n}\n\n.mdi-deskphone::before {\n  content: \"\\F01C3\";\n}\n\n.mdi-desktop-classic::before {\n  content: \"\\F07C0\";\n}\n\n.mdi-desktop-mac::before {\n  content: \"\\F01C4\";\n}\n\n.mdi-desktop-mac-dashboard::before {\n  content: \"\\F09E8\";\n}\n\n.mdi-desktop-tower::before {\n  content: \"\\F01C5\";\n}\n\n.mdi-desktop-tower-monitor::before {\n  content: \"\\F0AAB\";\n}\n\n.mdi-details::before {\n  content: \"\\F01C6\";\n}\n\n.mdi-dev-to::before {\n  content: \"\\F0D6E\";\n}\n\n.mdi-developer-board::before {\n  content: \"\\F0697\";\n}\n\n.mdi-deviantart::before {\n  content: \"\\F01C7\";\n}\n\n.mdi-devices::before {\n  content: \"\\F0FB0\";\n}\n\n.mdi-diabetes::before {\n  content: \"\\F1126\";\n}\n\n.mdi-dialpad::before {\n  content: \"\\F061C\";\n}\n\n.mdi-diameter::before {\n  content: \"\\F0C63\";\n}\n\n.mdi-diameter-outline::before {\n  content: \"\\F0C64\";\n}\n\n.mdi-diameter-variant::before {\n  content: \"\\F0C65\";\n}\n\n.mdi-diamond::before {\n  content: \"\\F0B8A\";\n}\n\n.mdi-diamond-outline::before {\n  content: \"\\F0B8B\";\n}\n\n.mdi-diamond-stone::before {\n  content: \"\\F01C8\";\n}\n\n.mdi-dice-1::before {\n  content: \"\\F01CA\";\n}\n\n.mdi-dice-1-outline::before {\n  content: \"\\F114A\";\n}\n\n.mdi-dice-2::before {\n  content: \"\\F01CB\";\n}\n\n.mdi-dice-2-outline::before {\n  content: \"\\F114B\";\n}\n\n.mdi-dice-3::before {\n  content: \"\\F01CC\";\n}\n\n.mdi-dice-3-outline::before {\n  content: \"\\F114C\";\n}\n\n.mdi-dice-4::before {\n  content: \"\\F01CD\";\n}\n\n.mdi-dice-4-outline::before {\n  content: \"\\F114D\";\n}\n\n.mdi-dice-5::before {\n  content: \"\\F01CE\";\n}\n\n.mdi-dice-5-outline::before {\n  content: \"\\F114E\";\n}\n\n.mdi-dice-6::before {\n  content: \"\\F01CF\";\n}\n\n.mdi-dice-6-outline::before {\n  content: \"\\F114F\";\n}\n\n.mdi-dice-d10::before {\n  content: \"\\F1153\";\n}\n\n.mdi-dice-d10-outline::before {\n  content: \"\\F076F\";\n}\n\n.mdi-dice-d12::before {\n  content: \"\\F1154\";\n}\n\n.mdi-dice-d12-outline::before {\n  content: \"\\F0867\";\n}\n\n.mdi-dice-d20::before {\n  content: \"\\F1155\";\n}\n\n.mdi-dice-d20-outline::before {\n  content: \"\\F05EA\";\n}\n\n.mdi-dice-d4::before {\n  content: \"\\F1150\";\n}\n\n.mdi-dice-d4-outline::before {\n  content: \"\\F05EB\";\n}\n\n.mdi-dice-d6::before {\n  content: \"\\F1151\";\n}\n\n.mdi-dice-d6-outline::before {\n  content: \"\\F05ED\";\n}\n\n.mdi-dice-d8::before {\n  content: \"\\F1152\";\n}\n\n.mdi-dice-d8-outline::before {\n  content: \"\\F05EC\";\n}\n\n.mdi-dice-multiple::before {\n  content: \"\\F076E\";\n}\n\n.mdi-dice-multiple-outline::before {\n  content: \"\\F1156\";\n}\n\n.mdi-digital-ocean::before {\n  content: \"\\F1237\";\n}\n\n.mdi-dip-switch::before {\n  content: \"\\F07C1\";\n}\n\n.mdi-directions::before {\n  content: \"\\F01D0\";\n}\n\n.mdi-directions-fork::before {\n  content: \"\\F0641\";\n}\n\n.mdi-disc::before {\n  content: \"\\F05EE\";\n}\n\n.mdi-disc-alert::before {\n  content: \"\\F01D1\";\n}\n\n.mdi-disc-player::before {\n  content: \"\\F0960\";\n}\n\n.mdi-discord::before {\n  content: \"\\F066F\";\n}\n\n.mdi-dishwasher::before {\n  content: \"\\F0AAC\";\n}\n\n.mdi-dishwasher-alert::before {\n  content: \"\\F11B8\";\n}\n\n.mdi-dishwasher-off::before {\n  content: \"\\F11B9\";\n}\n\n.mdi-disqus::before {\n  content: \"\\F01D2\";\n}\n\n.mdi-distribute-horizontal-center::before {\n  content: \"\\F11C9\";\n}\n\n.mdi-distribute-horizontal-left::before {\n  content: \"\\F11C8\";\n}\n\n.mdi-distribute-horizontal-right::before {\n  content: \"\\F11CA\";\n}\n\n.mdi-distribute-vertical-bottom::before {\n  content: \"\\F11CB\";\n}\n\n.mdi-distribute-vertical-center::before {\n  content: \"\\F11CC\";\n}\n\n.mdi-distribute-vertical-top::before {\n  content: \"\\F11CD\";\n}\n\n.mdi-diving-flippers::before {\n  content: \"\\F0DBF\";\n}\n\n.mdi-diving-helmet::before {\n  content: \"\\F0DC0\";\n}\n\n.mdi-diving-scuba::before {\n  content: \"\\F0DC1\";\n}\n\n.mdi-diving-scuba-flag::before {\n  content: \"\\F0DC2\";\n}\n\n.mdi-diving-scuba-tank::before {\n  content: \"\\F0DC3\";\n}\n\n.mdi-diving-scuba-tank-multiple::before {\n  content: \"\\F0DC4\";\n}\n\n.mdi-diving-snorkel::before {\n  content: \"\\F0DC5\";\n}\n\n.mdi-division::before {\n  content: \"\\F01D4\";\n}\n\n.mdi-division-box::before {\n  content: \"\\F01D5\";\n}\n\n.mdi-dlna::before {\n  content: \"\\F0A41\";\n}\n\n.mdi-dna::before {\n  content: \"\\F0684\";\n}\n\n.mdi-dns::before {\n  content: \"\\F01D6\";\n}\n\n.mdi-dns-outline::before {\n  content: \"\\F0B8C\";\n}\n\n.mdi-do-not-disturb::before {\n  content: \"\\F0698\";\n}\n\n.mdi-do-not-disturb-off::before {\n  content: \"\\F0699\";\n}\n\n.mdi-dock-bottom::before {\n  content: \"\\F10A9\";\n}\n\n.mdi-dock-left::before {\n  content: \"\\F10AA\";\n}\n\n.mdi-dock-right::before {\n  content: \"\\F10AB\";\n}\n\n.mdi-dock-top::before {\n  content: \"\\F1513\";\n}\n\n.mdi-dock-window::before {\n  content: \"\\F10AC\";\n}\n\n.mdi-docker::before {\n  content: \"\\F0868\";\n}\n\n.mdi-doctor::before {\n  content: \"\\F0A42\";\n}\n\n.mdi-dog::before {\n  content: \"\\F0A43\";\n}\n\n.mdi-dog-service::before {\n  content: \"\\F0AAD\";\n}\n\n.mdi-dog-side::before {\n  content: \"\\F0A44\";\n}\n\n.mdi-dog-side-off::before {\n  content: \"\\F16EE\";\n}\n\n.mdi-dolby::before {\n  content: \"\\F06B3\";\n}\n\n.mdi-dolly::before {\n  content: \"\\F0E9E\";\n}\n\n.mdi-domain::before {\n  content: \"\\F01D7\";\n}\n\n.mdi-domain-off::before {\n  content: \"\\F0D6F\";\n}\n\n.mdi-domain-plus::before {\n  content: \"\\F10AD\";\n}\n\n.mdi-domain-remove::before {\n  content: \"\\F10AE\";\n}\n\n.mdi-dome-light::before {\n  content: \"\\F141E\";\n}\n\n.mdi-domino-mask::before {\n  content: \"\\F1023\";\n}\n\n.mdi-donkey::before {\n  content: \"\\F07C2\";\n}\n\n.mdi-door::before {\n  content: \"\\F081A\";\n}\n\n.mdi-door-closed::before {\n  content: \"\\F081B\";\n}\n\n.mdi-door-closed-lock::before {\n  content: \"\\F10AF\";\n}\n\n.mdi-door-open::before {\n  content: \"\\F081C\";\n}\n\n.mdi-doorbell::before {\n  content: \"\\F12E6\";\n}\n\n.mdi-doorbell-video::before {\n  content: \"\\F0869\";\n}\n\n.mdi-dot-net::before {\n  content: \"\\F0AAE\";\n}\n\n.mdi-dots-grid::before {\n  content: \"\\F15FC\";\n}\n\n.mdi-dots-hexagon::before {\n  content: \"\\F15FF\";\n}\n\n.mdi-dots-horizontal::before {\n  content: \"\\F01D8\";\n}\n\n.mdi-dots-horizontal-circle::before {\n  content: \"\\F07C3\";\n}\n\n.mdi-dots-horizontal-circle-outline::before {\n  content: \"\\F0B8D\";\n}\n\n.mdi-dots-square::before {\n  content: \"\\F15FD\";\n}\n\n.mdi-dots-triangle::before {\n  content: \"\\F15FE\";\n}\n\n.mdi-dots-vertical::before {\n  content: \"\\F01D9\";\n}\n\n.mdi-dots-vertical-circle::before {\n  content: \"\\F07C4\";\n}\n\n.mdi-dots-vertical-circle-outline::before {\n  content: \"\\F0B8E\";\n}\n\n.mdi-douban::before {\n  content: \"\\F069A\";\n}\n\n.mdi-download::before {\n  content: \"\\F01DA\";\n}\n\n.mdi-download-box::before {\n  content: \"\\F1462\";\n}\n\n.mdi-download-box-outline::before {\n  content: \"\\F1463\";\n}\n\n.mdi-download-circle::before {\n  content: \"\\F1464\";\n}\n\n.mdi-download-circle-outline::before {\n  content: \"\\F1465\";\n}\n\n.mdi-download-lock::before {\n  content: \"\\F1320\";\n}\n\n.mdi-download-lock-outline::before {\n  content: \"\\F1321\";\n}\n\n.mdi-download-multiple::before {\n  content: \"\\F09E9\";\n}\n\n.mdi-download-network::before {\n  content: \"\\F06F4\";\n}\n\n.mdi-download-network-outline::before {\n  content: \"\\F0C66\";\n}\n\n.mdi-download-off::before {\n  content: \"\\F10B0\";\n}\n\n.mdi-download-off-outline::before {\n  content: \"\\F10B1\";\n}\n\n.mdi-download-outline::before {\n  content: \"\\F0B8F\";\n}\n\n.mdi-drag::before {\n  content: \"\\F01DB\";\n}\n\n.mdi-drag-horizontal::before {\n  content: \"\\F01DC\";\n}\n\n.mdi-drag-horizontal-variant::before {\n  content: \"\\F12F0\";\n}\n\n.mdi-drag-variant::before {\n  content: \"\\F0B90\";\n}\n\n.mdi-drag-vertical::before {\n  content: \"\\F01DD\";\n}\n\n.mdi-drag-vertical-variant::before {\n  content: \"\\F12F1\";\n}\n\n.mdi-drama-masks::before {\n  content: \"\\F0D02\";\n}\n\n.mdi-draw::before {\n  content: \"\\F0F49\";\n}\n\n.mdi-drawing::before {\n  content: \"\\F01DE\";\n}\n\n.mdi-drawing-box::before {\n  content: \"\\F01DF\";\n}\n\n.mdi-dresser::before {\n  content: \"\\F0F4A\";\n}\n\n.mdi-dresser-outline::before {\n  content: \"\\F0F4B\";\n}\n\n.mdi-drone::before {\n  content: \"\\F01E2\";\n}\n\n.mdi-dropbox::before {\n  content: \"\\F01E3\";\n}\n\n.mdi-drupal::before {\n  content: \"\\F01E4\";\n}\n\n.mdi-duck::before {\n  content: \"\\F01E5\";\n}\n\n.mdi-dumbbell::before {\n  content: \"\\F01E6\";\n}\n\n.mdi-dump-truck::before {\n  content: \"\\F0C67\";\n}\n\n.mdi-ear-hearing::before {\n  content: \"\\F07C5\";\n}\n\n.mdi-ear-hearing-off::before {\n  content: \"\\F0A45\";\n}\n\n.mdi-earth::before {\n  content: \"\\F01E7\";\n}\n\n.mdi-earth-arrow-right::before {\n  content: \"\\F1311\";\n}\n\n.mdi-earth-box::before {\n  content: \"\\F06CD\";\n}\n\n.mdi-earth-box-minus::before {\n  content: \"\\F1407\";\n}\n\n.mdi-earth-box-off::before {\n  content: \"\\F06CE\";\n}\n\n.mdi-earth-box-plus::before {\n  content: \"\\F1406\";\n}\n\n.mdi-earth-box-remove::before {\n  content: \"\\F1408\";\n}\n\n.mdi-earth-minus::before {\n  content: \"\\F1404\";\n}\n\n.mdi-earth-off::before {\n  content: \"\\F01E8\";\n}\n\n.mdi-earth-plus::before {\n  content: \"\\F1403\";\n}\n\n.mdi-earth-remove::before {\n  content: \"\\F1405\";\n}\n\n.mdi-egg::before {\n  content: \"\\F0AAF\";\n}\n\n.mdi-egg-easter::before {\n  content: \"\\F0AB0\";\n}\n\n.mdi-egg-off::before {\n  content: \"\\F13F0\";\n}\n\n.mdi-egg-off-outline::before {\n  content: \"\\F13F1\";\n}\n\n.mdi-egg-outline::before {\n  content: \"\\F13F2\";\n}\n\n.mdi-eiffel-tower::before {\n  content: \"\\F156B\";\n}\n\n.mdi-eight-track::before {\n  content: \"\\F09EA\";\n}\n\n.mdi-eject::before {\n  content: \"\\F01EA\";\n}\n\n.mdi-eject-outline::before {\n  content: \"\\F0B91\";\n}\n\n.mdi-electric-switch::before {\n  content: \"\\F0E9F\";\n}\n\n.mdi-electric-switch-closed::before {\n  content: \"\\F10D9\";\n}\n\n.mdi-electron-framework::before {\n  content: \"\\F1024\";\n}\n\n.mdi-elephant::before {\n  content: \"\\F07C6\";\n}\n\n.mdi-elevation-decline::before {\n  content: \"\\F01EB\";\n}\n\n.mdi-elevation-rise::before {\n  content: \"\\F01EC\";\n}\n\n.mdi-elevator::before {\n  content: \"\\F01ED\";\n}\n\n.mdi-elevator-down::before {\n  content: \"\\F12C2\";\n}\n\n.mdi-elevator-passenger::before {\n  content: \"\\F1381\";\n}\n\n.mdi-elevator-up::before {\n  content: \"\\F12C1\";\n}\n\n.mdi-ellipse::before {\n  content: \"\\F0EA0\";\n}\n\n.mdi-ellipse-outline::before {\n  content: \"\\F0EA1\";\n}\n\n.mdi-email::before {\n  content: \"\\F01EE\";\n}\n\n.mdi-email-alert::before {\n  content: \"\\F06CF\";\n}\n\n.mdi-email-alert-outline::before {\n  content: \"\\F0D42\";\n}\n\n.mdi-email-box::before {\n  content: \"\\F0D03\";\n}\n\n.mdi-email-check::before {\n  content: \"\\F0AB1\";\n}\n\n.mdi-email-check-outline::before {\n  content: \"\\F0AB2\";\n}\n\n.mdi-email-edit::before {\n  content: \"\\F0EE3\";\n}\n\n.mdi-email-edit-outline::before {\n  content: \"\\F0EE4\";\n}\n\n.mdi-email-lock::before {\n  content: \"\\F01F1\";\n}\n\n.mdi-email-mark-as-unread::before {\n  content: \"\\F0B92\";\n}\n\n.mdi-email-minus::before {\n  content: \"\\F0EE5\";\n}\n\n.mdi-email-minus-outline::before {\n  content: \"\\F0EE6\";\n}\n\n.mdi-email-multiple::before {\n  content: \"\\F0EE7\";\n}\n\n.mdi-email-multiple-outline::before {\n  content: \"\\F0EE8\";\n}\n\n.mdi-email-newsletter::before {\n  content: \"\\F0FB1\";\n}\n\n.mdi-email-off::before {\n  content: \"\\F13E3\";\n}\n\n.mdi-email-off-outline::before {\n  content: \"\\F13E4\";\n}\n\n.mdi-email-open::before {\n  content: \"\\F01EF\";\n}\n\n.mdi-email-open-multiple::before {\n  content: \"\\F0EE9\";\n}\n\n.mdi-email-open-multiple-outline::before {\n  content: \"\\F0EEA\";\n}\n\n.mdi-email-open-outline::before {\n  content: \"\\F05EF\";\n}\n\n.mdi-email-outline::before {\n  content: \"\\F01F0\";\n}\n\n.mdi-email-plus::before {\n  content: \"\\F09EB\";\n}\n\n.mdi-email-plus-outline::before {\n  content: \"\\F09EC\";\n}\n\n.mdi-email-receive::before {\n  content: \"\\F10DA\";\n}\n\n.mdi-email-receive-outline::before {\n  content: \"\\F10DB\";\n}\n\n.mdi-email-remove::before {\n  content: \"\\F1661\";\n}\n\n.mdi-email-remove-outline::before {\n  content: \"\\F1662\";\n}\n\n.mdi-email-search::before {\n  content: \"\\F0961\";\n}\n\n.mdi-email-search-outline::before {\n  content: \"\\F0962\";\n}\n\n.mdi-email-send::before {\n  content: \"\\F10DC\";\n}\n\n.mdi-email-send-outline::before {\n  content: \"\\F10DD\";\n}\n\n.mdi-email-sync::before {\n  content: \"\\F12C7\";\n}\n\n.mdi-email-sync-outline::before {\n  content: \"\\F12C8\";\n}\n\n.mdi-email-variant::before {\n  content: \"\\F05F0\";\n}\n\n.mdi-ember::before {\n  content: \"\\F0B30\";\n}\n\n.mdi-emby::before {\n  content: \"\\F06B4\";\n}\n\n.mdi-emoticon::before {\n  content: \"\\F0C68\";\n}\n\n.mdi-emoticon-angry::before {\n  content: \"\\F0C69\";\n}\n\n.mdi-emoticon-angry-outline::before {\n  content: \"\\F0C6A\";\n}\n\n.mdi-emoticon-confused::before {\n  content: \"\\F10DE\";\n}\n\n.mdi-emoticon-confused-outline::before {\n  content: \"\\F10DF\";\n}\n\n.mdi-emoticon-cool::before {\n  content: \"\\F0C6B\";\n}\n\n.mdi-emoticon-cool-outline::before {\n  content: \"\\F01F3\";\n}\n\n.mdi-emoticon-cry::before {\n  content: \"\\F0C6C\";\n}\n\n.mdi-emoticon-cry-outline::before {\n  content: \"\\F0C6D\";\n}\n\n.mdi-emoticon-dead::before {\n  content: \"\\F0C6E\";\n}\n\n.mdi-emoticon-dead-outline::before {\n  content: \"\\F069B\";\n}\n\n.mdi-emoticon-devil::before {\n  content: \"\\F0C6F\";\n}\n\n.mdi-emoticon-devil-outline::before {\n  content: \"\\F01F4\";\n}\n\n.mdi-emoticon-excited::before {\n  content: \"\\F0C70\";\n}\n\n.mdi-emoticon-excited-outline::before {\n  content: \"\\F069C\";\n}\n\n.mdi-emoticon-frown::before {\n  content: \"\\F0F4C\";\n}\n\n.mdi-emoticon-frown-outline::before {\n  content: \"\\F0F4D\";\n}\n\n.mdi-emoticon-happy::before {\n  content: \"\\F0C71\";\n}\n\n.mdi-emoticon-happy-outline::before {\n  content: \"\\F01F5\";\n}\n\n.mdi-emoticon-kiss::before {\n  content: \"\\F0C72\";\n}\n\n.mdi-emoticon-kiss-outline::before {\n  content: \"\\F0C73\";\n}\n\n.mdi-emoticon-lol::before {\n  content: \"\\F1214\";\n}\n\n.mdi-emoticon-lol-outline::before {\n  content: \"\\F1215\";\n}\n\n.mdi-emoticon-neutral::before {\n  content: \"\\F0C74\";\n}\n\n.mdi-emoticon-neutral-outline::before {\n  content: \"\\F01F6\";\n}\n\n.mdi-emoticon-outline::before {\n  content: \"\\F01F2\";\n}\n\n.mdi-emoticon-poop::before {\n  content: \"\\F01F7\";\n}\n\n.mdi-emoticon-poop-outline::before {\n  content: \"\\F0C75\";\n}\n\n.mdi-emoticon-sad::before {\n  content: \"\\F0C76\";\n}\n\n.mdi-emoticon-sad-outline::before {\n  content: \"\\F01F8\";\n}\n\n.mdi-emoticon-sick::before {\n  content: \"\\F157C\";\n}\n\n.mdi-emoticon-sick-outline::before {\n  content: \"\\F157D\";\n}\n\n.mdi-emoticon-tongue::before {\n  content: \"\\F01F9\";\n}\n\n.mdi-emoticon-tongue-outline::before {\n  content: \"\\F0C77\";\n}\n\n.mdi-emoticon-wink::before {\n  content: \"\\F0C78\";\n}\n\n.mdi-emoticon-wink-outline::before {\n  content: \"\\F0C79\";\n}\n\n.mdi-engine::before {\n  content: \"\\F01FA\";\n}\n\n.mdi-engine-off::before {\n  content: \"\\F0A46\";\n}\n\n.mdi-engine-off-outline::before {\n  content: \"\\F0A47\";\n}\n\n.mdi-engine-outline::before {\n  content: \"\\F01FB\";\n}\n\n.mdi-epsilon::before {\n  content: \"\\F10E0\";\n}\n\n.mdi-equal::before {\n  content: \"\\F01FC\";\n}\n\n.mdi-equal-box::before {\n  content: \"\\F01FD\";\n}\n\n.mdi-equalizer::before {\n  content: \"\\F0EA2\";\n}\n\n.mdi-equalizer-outline::before {\n  content: \"\\F0EA3\";\n}\n\n.mdi-eraser::before {\n  content: \"\\F01FE\";\n}\n\n.mdi-eraser-variant::before {\n  content: \"\\F0642\";\n}\n\n.mdi-escalator::before {\n  content: \"\\F01FF\";\n}\n\n.mdi-escalator-box::before {\n  content: \"\\F1399\";\n}\n\n.mdi-escalator-down::before {\n  content: \"\\F12C0\";\n}\n\n.mdi-escalator-up::before {\n  content: \"\\F12BF\";\n}\n\n.mdi-eslint::before {\n  content: \"\\F0C7A\";\n}\n\n.mdi-et::before {\n  content: \"\\F0AB3\";\n}\n\n.mdi-ethereum::before {\n  content: \"\\F086A\";\n}\n\n.mdi-ethernet::before {\n  content: \"\\F0200\";\n}\n\n.mdi-ethernet-cable::before {\n  content: \"\\F0201\";\n}\n\n.mdi-ethernet-cable-off::before {\n  content: \"\\F0202\";\n}\n\n.mdi-ev-plug-ccs1::before {\n  content: \"\\F1519\";\n}\n\n.mdi-ev-plug-ccs2::before {\n  content: \"\\F151A\";\n}\n\n.mdi-ev-plug-chademo::before {\n  content: \"\\F151B\";\n}\n\n.mdi-ev-plug-tesla::before {\n  content: \"\\F151C\";\n}\n\n.mdi-ev-plug-type1::before {\n  content: \"\\F151D\";\n}\n\n.mdi-ev-plug-type2::before {\n  content: \"\\F151E\";\n}\n\n.mdi-ev-station::before {\n  content: \"\\F05F1\";\n}\n\n.mdi-evernote::before {\n  content: \"\\F0204\";\n}\n\n.mdi-excavator::before {\n  content: \"\\F1025\";\n}\n\n.mdi-exclamation::before {\n  content: \"\\F0205\";\n}\n\n.mdi-exclamation-thick::before {\n  content: \"\\F1238\";\n}\n\n.mdi-exit-run::before {\n  content: \"\\F0A48\";\n}\n\n.mdi-exit-to-app::before {\n  content: \"\\F0206\";\n}\n\n.mdi-expand-all::before {\n  content: \"\\F0AB4\";\n}\n\n.mdi-expand-all-outline::before {\n  content: \"\\F0AB5\";\n}\n\n.mdi-expansion-card::before {\n  content: \"\\F08AE\";\n}\n\n.mdi-expansion-card-variant::before {\n  content: \"\\F0FB2\";\n}\n\n.mdi-exponent::before {\n  content: \"\\F0963\";\n}\n\n.mdi-exponent-box::before {\n  content: \"\\F0964\";\n}\n\n.mdi-export::before {\n  content: \"\\F0207\";\n}\n\n.mdi-export-variant::before {\n  content: \"\\F0B93\";\n}\n\n.mdi-eye::before {\n  content: \"\\F0208\";\n}\n\n.mdi-eye-check::before {\n  content: \"\\F0D04\";\n}\n\n.mdi-eye-check-outline::before {\n  content: \"\\F0D05\";\n}\n\n.mdi-eye-circle::before {\n  content: \"\\F0B94\";\n}\n\n.mdi-eye-circle-outline::before {\n  content: \"\\F0B95\";\n}\n\n.mdi-eye-minus::before {\n  content: \"\\F1026\";\n}\n\n.mdi-eye-minus-outline::before {\n  content: \"\\F1027\";\n}\n\n.mdi-eye-off::before {\n  content: \"\\F0209\";\n}\n\n.mdi-eye-off-outline::before {\n  content: \"\\F06D1\";\n}\n\n.mdi-eye-outline::before {\n  content: \"\\F06D0\";\n}\n\n.mdi-eye-plus::before {\n  content: \"\\F086B\";\n}\n\n.mdi-eye-plus-outline::before {\n  content: \"\\F086C\";\n}\n\n.mdi-eye-remove::before {\n  content: \"\\F15E3\";\n}\n\n.mdi-eye-remove-outline::before {\n  content: \"\\F15E4\";\n}\n\n.mdi-eye-settings::before {\n  content: \"\\F086D\";\n}\n\n.mdi-eye-settings-outline::before {\n  content: \"\\F086E\";\n}\n\n.mdi-eyedropper::before {\n  content: \"\\F020A\";\n}\n\n.mdi-eyedropper-minus::before {\n  content: \"\\F13DD\";\n}\n\n.mdi-eyedropper-off::before {\n  content: \"\\F13DF\";\n}\n\n.mdi-eyedropper-plus::before {\n  content: \"\\F13DC\";\n}\n\n.mdi-eyedropper-remove::before {\n  content: \"\\F13DE\";\n}\n\n.mdi-eyedropper-variant::before {\n  content: \"\\F020B\";\n}\n\n.mdi-face::before {\n  content: \"\\F0643\";\n}\n\n.mdi-face-agent::before {\n  content: \"\\F0D70\";\n}\n\n.mdi-face-mask::before {\n  content: \"\\F1586\";\n}\n\n.mdi-face-mask-outline::before {\n  content: \"\\F1587\";\n}\n\n.mdi-face-outline::before {\n  content: \"\\F0B96\";\n}\n\n.mdi-face-profile::before {\n  content: \"\\F0644\";\n}\n\n.mdi-face-profile-woman::before {\n  content: \"\\F1076\";\n}\n\n.mdi-face-recognition::before {\n  content: \"\\F0C7B\";\n}\n\n.mdi-face-shimmer::before {\n  content: \"\\F15CC\";\n}\n\n.mdi-face-shimmer-outline::before {\n  content: \"\\F15CD\";\n}\n\n.mdi-face-woman::before {\n  content: \"\\F1077\";\n}\n\n.mdi-face-woman-outline::before {\n  content: \"\\F1078\";\n}\n\n.mdi-face-woman-shimmer::before {\n  content: \"\\F15CE\";\n}\n\n.mdi-face-woman-shimmer-outline::before {\n  content: \"\\F15CF\";\n}\n\n.mdi-facebook::before {\n  content: \"\\F020C\";\n}\n\n.mdi-facebook-gaming::before {\n  content: \"\\F07DD\";\n}\n\n.mdi-facebook-messenger::before {\n  content: \"\\F020E\";\n}\n\n.mdi-facebook-workplace::before {\n  content: \"\\F0B31\";\n}\n\n.mdi-factory::before {\n  content: \"\\F020F\";\n}\n\n.mdi-family-tree::before {\n  content: \"\\F160E\";\n}\n\n.mdi-fan::before {\n  content: \"\\F0210\";\n}\n\n.mdi-fan-alert::before {\n  content: \"\\F146C\";\n}\n\n.mdi-fan-auto::before {\n  content: \"\\F171D\";\n}\n\n.mdi-fan-chevron-down::before {\n  content: \"\\F146D\";\n}\n\n.mdi-fan-chevron-up::before {\n  content: \"\\F146E\";\n}\n\n.mdi-fan-minus::before {\n  content: \"\\F1470\";\n}\n\n.mdi-fan-off::before {\n  content: \"\\F081D\";\n}\n\n.mdi-fan-plus::before {\n  content: \"\\F146F\";\n}\n\n.mdi-fan-remove::before {\n  content: \"\\F1471\";\n}\n\n.mdi-fan-speed-1::before {\n  content: \"\\F1472\";\n}\n\n.mdi-fan-speed-2::before {\n  content: \"\\F1473\";\n}\n\n.mdi-fan-speed-3::before {\n  content: \"\\F1474\";\n}\n\n.mdi-fast-forward::before {\n  content: \"\\F0211\";\n}\n\n.mdi-fast-forward-10::before {\n  content: \"\\F0D71\";\n}\n\n.mdi-fast-forward-30::before {\n  content: \"\\F0D06\";\n}\n\n.mdi-fast-forward-5::before {\n  content: \"\\F11F8\";\n}\n\n.mdi-fast-forward-60::before {\n  content: \"\\F160B\";\n}\n\n.mdi-fast-forward-outline::before {\n  content: \"\\F06D2\";\n}\n\n.mdi-fax::before {\n  content: \"\\F0212\";\n}\n\n.mdi-feather::before {\n  content: \"\\F06D3\";\n}\n\n.mdi-feature-search::before {\n  content: \"\\F0A49\";\n}\n\n.mdi-feature-search-outline::before {\n  content: \"\\F0A4A\";\n}\n\n.mdi-fedora::before {\n  content: \"\\F08DB\";\n}\n\n.mdi-fencing::before {\n  content: \"\\F14C1\";\n}\n\n.mdi-ferris-wheel::before {\n  content: \"\\F0EA4\";\n}\n\n.mdi-ferry::before {\n  content: \"\\F0213\";\n}\n\n.mdi-file::before {\n  content: \"\\F0214\";\n}\n\n.mdi-file-account::before {\n  content: \"\\F073B\";\n}\n\n.mdi-file-account-outline::before {\n  content: \"\\F1028\";\n}\n\n.mdi-file-alert::before {\n  content: \"\\F0A4B\";\n}\n\n.mdi-file-alert-outline::before {\n  content: \"\\F0A4C\";\n}\n\n.mdi-file-cabinet::before {\n  content: \"\\F0AB6\";\n}\n\n.mdi-file-cad::before {\n  content: \"\\F0EEB\";\n}\n\n.mdi-file-cad-box::before {\n  content: \"\\F0EEC\";\n}\n\n.mdi-file-cancel::before {\n  content: \"\\F0DC6\";\n}\n\n.mdi-file-cancel-outline::before {\n  content: \"\\F0DC7\";\n}\n\n.mdi-file-certificate::before {\n  content: \"\\F1186\";\n}\n\n.mdi-file-certificate-outline::before {\n  content: \"\\F1187\";\n}\n\n.mdi-file-chart::before {\n  content: \"\\F0215\";\n}\n\n.mdi-file-chart-outline::before {\n  content: \"\\F1029\";\n}\n\n.mdi-file-check::before {\n  content: \"\\F0216\";\n}\n\n.mdi-file-check-outline::before {\n  content: \"\\F0E29\";\n}\n\n.mdi-file-clock::before {\n  content: \"\\F12E1\";\n}\n\n.mdi-file-clock-outline::before {\n  content: \"\\F12E2\";\n}\n\n.mdi-file-cloud::before {\n  content: \"\\F0217\";\n}\n\n.mdi-file-cloud-outline::before {\n  content: \"\\F102A\";\n}\n\n.mdi-file-code::before {\n  content: \"\\F022E\";\n}\n\n.mdi-file-code-outline::before {\n  content: \"\\F102B\";\n}\n\n.mdi-file-cog::before {\n  content: \"\\F107B\";\n}\n\n.mdi-file-cog-outline::before {\n  content: \"\\F107C\";\n}\n\n.mdi-file-compare::before {\n  content: \"\\F08AA\";\n}\n\n.mdi-file-delimited::before {\n  content: \"\\F0218\";\n}\n\n.mdi-file-delimited-outline::before {\n  content: \"\\F0EA5\";\n}\n\n.mdi-file-document::before {\n  content: \"\\F0219\";\n}\n\n.mdi-file-document-edit::before {\n  content: \"\\F0DC8\";\n}\n\n.mdi-file-document-edit-outline::before {\n  content: \"\\F0DC9\";\n}\n\n.mdi-file-document-multiple::before {\n  content: \"\\F1517\";\n}\n\n.mdi-file-document-multiple-outline::before {\n  content: \"\\F1518\";\n}\n\n.mdi-file-document-outline::before {\n  content: \"\\F09EE\";\n}\n\n.mdi-file-download::before {\n  content: \"\\F0965\";\n}\n\n.mdi-file-download-outline::before {\n  content: \"\\F0966\";\n}\n\n.mdi-file-edit::before {\n  content: \"\\F11E7\";\n}\n\n.mdi-file-edit-outline::before {\n  content: \"\\F11E8\";\n}\n\n.mdi-file-excel::before {\n  content: \"\\F021B\";\n}\n\n.mdi-file-excel-box::before {\n  content: \"\\F021C\";\n}\n\n.mdi-file-excel-box-outline::before {\n  content: \"\\F102C\";\n}\n\n.mdi-file-excel-outline::before {\n  content: \"\\F102D\";\n}\n\n.mdi-file-export::before {\n  content: \"\\F021D\";\n}\n\n.mdi-file-export-outline::before {\n  content: \"\\F102E\";\n}\n\n.mdi-file-eye::before {\n  content: \"\\F0DCA\";\n}\n\n.mdi-file-eye-outline::before {\n  content: \"\\F0DCB\";\n}\n\n.mdi-file-find::before {\n  content: \"\\F021E\";\n}\n\n.mdi-file-find-outline::before {\n  content: \"\\F0B97\";\n}\n\n.mdi-file-hidden::before {\n  content: \"\\F0613\";\n}\n\n.mdi-file-image::before {\n  content: \"\\F021F\";\n}\n\n.mdi-file-image-outline::before {\n  content: \"\\F0EB0\";\n}\n\n.mdi-file-import::before {\n  content: \"\\F0220\";\n}\n\n.mdi-file-import-outline::before {\n  content: \"\\F102F\";\n}\n\n.mdi-file-key::before {\n  content: \"\\F1184\";\n}\n\n.mdi-file-key-outline::before {\n  content: \"\\F1185\";\n}\n\n.mdi-file-link::before {\n  content: \"\\F1177\";\n}\n\n.mdi-file-link-outline::before {\n  content: \"\\F1178\";\n}\n\n.mdi-file-lock::before {\n  content: \"\\F0221\";\n}\n\n.mdi-file-lock-outline::before {\n  content: \"\\F1030\";\n}\n\n.mdi-file-move::before {\n  content: \"\\F0AB9\";\n}\n\n.mdi-file-move-outline::before {\n  content: \"\\F1031\";\n}\n\n.mdi-file-multiple::before {\n  content: \"\\F0222\";\n}\n\n.mdi-file-multiple-outline::before {\n  content: \"\\F1032\";\n}\n\n.mdi-file-music::before {\n  content: \"\\F0223\";\n}\n\n.mdi-file-music-outline::before {\n  content: \"\\F0E2A\";\n}\n\n.mdi-file-outline::before {\n  content: \"\\F0224\";\n}\n\n.mdi-file-pdf::before {\n  content: \"\\F0225\";\n}\n\n.mdi-file-pdf-box::before {\n  content: \"\\F0226\";\n}\n\n.mdi-file-pdf-box-outline::before {\n  content: \"\\F0FB3\";\n}\n\n.mdi-file-pdf-outline::before {\n  content: \"\\F0E2D\";\n}\n\n.mdi-file-percent::before {\n  content: \"\\F081E\";\n}\n\n.mdi-file-percent-outline::before {\n  content: \"\\F1033\";\n}\n\n.mdi-file-phone::before {\n  content: \"\\F1179\";\n}\n\n.mdi-file-phone-outline::before {\n  content: \"\\F117A\";\n}\n\n.mdi-file-plus::before {\n  content: \"\\F0752\";\n}\n\n.mdi-file-plus-outline::before {\n  content: \"\\F0EED\";\n}\n\n.mdi-file-powerpoint::before {\n  content: \"\\F0227\";\n}\n\n.mdi-file-powerpoint-box::before {\n  content: \"\\F0228\";\n}\n\n.mdi-file-powerpoint-box-outline::before {\n  content: \"\\F1034\";\n}\n\n.mdi-file-powerpoint-outline::before {\n  content: \"\\F1035\";\n}\n\n.mdi-file-presentation-box::before {\n  content: \"\\F0229\";\n}\n\n.mdi-file-question::before {\n  content: \"\\F086F\";\n}\n\n.mdi-file-question-outline::before {\n  content: \"\\F1036\";\n}\n\n.mdi-file-refresh::before {\n  content: \"\\F0918\";\n}\n\n.mdi-file-refresh-outline::before {\n  content: \"\\F0541\";\n}\n\n.mdi-file-remove::before {\n  content: \"\\F0B98\";\n}\n\n.mdi-file-remove-outline::before {\n  content: \"\\F1037\";\n}\n\n.mdi-file-replace::before {\n  content: \"\\F0B32\";\n}\n\n.mdi-file-replace-outline::before {\n  content: \"\\F0B33\";\n}\n\n.mdi-file-restore::before {\n  content: \"\\F0670\";\n}\n\n.mdi-file-restore-outline::before {\n  content: \"\\F1038\";\n}\n\n.mdi-file-search::before {\n  content: \"\\F0C7C\";\n}\n\n.mdi-file-search-outline::before {\n  content: \"\\F0C7D\";\n}\n\n.mdi-file-send::before {\n  content: \"\\F022A\";\n}\n\n.mdi-file-send-outline::before {\n  content: \"\\F1039\";\n}\n\n.mdi-file-settings::before {\n  content: \"\\F1079\";\n}\n\n.mdi-file-settings-outline::before {\n  content: \"\\F107A\";\n}\n\n.mdi-file-star::before {\n  content: \"\\F103A\";\n}\n\n.mdi-file-star-outline::before {\n  content: \"\\F103B\";\n}\n\n.mdi-file-swap::before {\n  content: \"\\F0FB4\";\n}\n\n.mdi-file-swap-outline::before {\n  content: \"\\F0FB5\";\n}\n\n.mdi-file-sync::before {\n  content: \"\\F1216\";\n}\n\n.mdi-file-sync-outline::before {\n  content: \"\\F1217\";\n}\n\n.mdi-file-table::before {\n  content: \"\\F0C7E\";\n}\n\n.mdi-file-table-box::before {\n  content: \"\\F10E1\";\n}\n\n.mdi-file-table-box-multiple::before {\n  content: \"\\F10E2\";\n}\n\n.mdi-file-table-box-multiple-outline::before {\n  content: \"\\F10E3\";\n}\n\n.mdi-file-table-box-outline::before {\n  content: \"\\F10E4\";\n}\n\n.mdi-file-table-outline::before {\n  content: \"\\F0C7F\";\n}\n\n.mdi-file-tree::before {\n  content: \"\\F0645\";\n}\n\n.mdi-file-tree-outline::before {\n  content: \"\\F13D2\";\n}\n\n.mdi-file-undo::before {\n  content: \"\\F08DC\";\n}\n\n.mdi-file-undo-outline::before {\n  content: \"\\F103C\";\n}\n\n.mdi-file-upload::before {\n  content: \"\\F0A4D\";\n}\n\n.mdi-file-upload-outline::before {\n  content: \"\\F0A4E\";\n}\n\n.mdi-file-video::before {\n  content: \"\\F022B\";\n}\n\n.mdi-file-video-outline::before {\n  content: \"\\F0E2C\";\n}\n\n.mdi-file-word::before {\n  content: \"\\F022C\";\n}\n\n.mdi-file-word-box::before {\n  content: \"\\F022D\";\n}\n\n.mdi-file-word-box-outline::before {\n  content: \"\\F103D\";\n}\n\n.mdi-file-word-outline::before {\n  content: \"\\F103E\";\n}\n\n.mdi-film::before {\n  content: \"\\F022F\";\n}\n\n.mdi-filmstrip::before {\n  content: \"\\F0230\";\n}\n\n.mdi-filmstrip-box::before {\n  content: \"\\F0332\";\n}\n\n.mdi-filmstrip-box-multiple::before {\n  content: \"\\F0D18\";\n}\n\n.mdi-filmstrip-off::before {\n  content: \"\\F0231\";\n}\n\n.mdi-filter::before {\n  content: \"\\F0232\";\n}\n\n.mdi-filter-menu::before {\n  content: \"\\F10E5\";\n}\n\n.mdi-filter-menu-outline::before {\n  content: \"\\F10E6\";\n}\n\n.mdi-filter-minus::before {\n  content: \"\\F0EEE\";\n}\n\n.mdi-filter-minus-outline::before {\n  content: \"\\F0EEF\";\n}\n\n.mdi-filter-off::before {\n  content: \"\\F14EF\";\n}\n\n.mdi-filter-off-outline::before {\n  content: \"\\F14F0\";\n}\n\n.mdi-filter-outline::before {\n  content: \"\\F0233\";\n}\n\n.mdi-filter-plus::before {\n  content: \"\\F0EF0\";\n}\n\n.mdi-filter-plus-outline::before {\n  content: \"\\F0EF1\";\n}\n\n.mdi-filter-remove::before {\n  content: \"\\F0234\";\n}\n\n.mdi-filter-remove-outline::before {\n  content: \"\\F0235\";\n}\n\n.mdi-filter-variant::before {\n  content: \"\\F0236\";\n}\n\n.mdi-filter-variant-minus::before {\n  content: \"\\F1112\";\n}\n\n.mdi-filter-variant-plus::before {\n  content: \"\\F1113\";\n}\n\n.mdi-filter-variant-remove::before {\n  content: \"\\F103F\";\n}\n\n.mdi-finance::before {\n  content: \"\\F081F\";\n}\n\n.mdi-find-replace::before {\n  content: \"\\F06D4\";\n}\n\n.mdi-fingerprint::before {\n  content: \"\\F0237\";\n}\n\n.mdi-fingerprint-off::before {\n  content: \"\\F0EB1\";\n}\n\n.mdi-fire::before {\n  content: \"\\F0238\";\n}\n\n.mdi-fire-alert::before {\n  content: \"\\F15D7\";\n}\n\n.mdi-fire-extinguisher::before {\n  content: \"\\F0EF2\";\n}\n\n.mdi-fire-hydrant::before {\n  content: \"\\F1137\";\n}\n\n.mdi-fire-hydrant-alert::before {\n  content: \"\\F1138\";\n}\n\n.mdi-fire-hydrant-off::before {\n  content: \"\\F1139\";\n}\n\n.mdi-fire-off::before {\n  content: \"\\F1722\";\n}\n\n.mdi-fire-truck::before {\n  content: \"\\F08AB\";\n}\n\n.mdi-firebase::before {\n  content: \"\\F0967\";\n}\n\n.mdi-firefox::before {\n  content: \"\\F0239\";\n}\n\n.mdi-fireplace::before {\n  content: \"\\F0E2E\";\n}\n\n.mdi-fireplace-off::before {\n  content: \"\\F0E2F\";\n}\n\n.mdi-firework::before {\n  content: \"\\F0E30\";\n}\n\n.mdi-firework-off::before {\n  content: \"\\F1723\";\n}\n\n.mdi-fish::before {\n  content: \"\\F023A\";\n}\n\n.mdi-fish-off::before {\n  content: \"\\F13F3\";\n}\n\n.mdi-fishbowl::before {\n  content: \"\\F0EF3\";\n}\n\n.mdi-fishbowl-outline::before {\n  content: \"\\F0EF4\";\n}\n\n.mdi-fit-to-page::before {\n  content: \"\\F0EF5\";\n}\n\n.mdi-fit-to-page-outline::before {\n  content: \"\\F0EF6\";\n}\n\n.mdi-flag::before {\n  content: \"\\F023B\";\n}\n\n.mdi-flag-checkered::before {\n  content: \"\\F023C\";\n}\n\n.mdi-flag-minus::before {\n  content: \"\\F0B99\";\n}\n\n.mdi-flag-minus-outline::before {\n  content: \"\\F10B2\";\n}\n\n.mdi-flag-outline::before {\n  content: \"\\F023D\";\n}\n\n.mdi-flag-plus::before {\n  content: \"\\F0B9A\";\n}\n\n.mdi-flag-plus-outline::before {\n  content: \"\\F10B3\";\n}\n\n.mdi-flag-remove::before {\n  content: \"\\F0B9B\";\n}\n\n.mdi-flag-remove-outline::before {\n  content: \"\\F10B4\";\n}\n\n.mdi-flag-triangle::before {\n  content: \"\\F023F\";\n}\n\n.mdi-flag-variant::before {\n  content: \"\\F0240\";\n}\n\n.mdi-flag-variant-outline::before {\n  content: \"\\F023E\";\n}\n\n.mdi-flare::before {\n  content: \"\\F0D72\";\n}\n\n.mdi-flash::before {\n  content: \"\\F0241\";\n}\n\n.mdi-flash-alert::before {\n  content: \"\\F0EF7\";\n}\n\n.mdi-flash-alert-outline::before {\n  content: \"\\F0EF8\";\n}\n\n.mdi-flash-auto::before {\n  content: \"\\F0242\";\n}\n\n.mdi-flash-circle::before {\n  content: \"\\F0820\";\n}\n\n.mdi-flash-off::before {\n  content: \"\\F0243\";\n}\n\n.mdi-flash-outline::before {\n  content: \"\\F06D5\";\n}\n\n.mdi-flash-red-eye::before {\n  content: \"\\F067B\";\n}\n\n.mdi-flashlight::before {\n  content: \"\\F0244\";\n}\n\n.mdi-flashlight-off::before {\n  content: \"\\F0245\";\n}\n\n.mdi-flask::before {\n  content: \"\\F0093\";\n}\n\n.mdi-flask-empty::before {\n  content: \"\\F0094\";\n}\n\n.mdi-flask-empty-minus::before {\n  content: \"\\F123A\";\n}\n\n.mdi-flask-empty-minus-outline::before {\n  content: \"\\F123B\";\n}\n\n.mdi-flask-empty-off::before {\n  content: \"\\F13F4\";\n}\n\n.mdi-flask-empty-off-outline::before {\n  content: \"\\F13F5\";\n}\n\n.mdi-flask-empty-outline::before {\n  content: \"\\F0095\";\n}\n\n.mdi-flask-empty-plus::before {\n  content: \"\\F123C\";\n}\n\n.mdi-flask-empty-plus-outline::before {\n  content: \"\\F123D\";\n}\n\n.mdi-flask-empty-remove::before {\n  content: \"\\F123E\";\n}\n\n.mdi-flask-empty-remove-outline::before {\n  content: \"\\F123F\";\n}\n\n.mdi-flask-minus::before {\n  content: \"\\F1240\";\n}\n\n.mdi-flask-minus-outline::before {\n  content: \"\\F1241\";\n}\n\n.mdi-flask-off::before {\n  content: \"\\F13F6\";\n}\n\n.mdi-flask-off-outline::before {\n  content: \"\\F13F7\";\n}\n\n.mdi-flask-outline::before {\n  content: \"\\F0096\";\n}\n\n.mdi-flask-plus::before {\n  content: \"\\F1242\";\n}\n\n.mdi-flask-plus-outline::before {\n  content: \"\\F1243\";\n}\n\n.mdi-flask-remove::before {\n  content: \"\\F1244\";\n}\n\n.mdi-flask-remove-outline::before {\n  content: \"\\F1245\";\n}\n\n.mdi-flask-round-bottom::before {\n  content: \"\\F124B\";\n}\n\n.mdi-flask-round-bottom-empty::before {\n  content: \"\\F124C\";\n}\n\n.mdi-flask-round-bottom-empty-outline::before {\n  content: \"\\F124D\";\n}\n\n.mdi-flask-round-bottom-outline::before {\n  content: \"\\F124E\";\n}\n\n.mdi-fleur-de-lis::before {\n  content: \"\\F1303\";\n}\n\n.mdi-flip-horizontal::before {\n  content: \"\\F10E7\";\n}\n\n.mdi-flip-to-back::before {\n  content: \"\\F0247\";\n}\n\n.mdi-flip-to-front::before {\n  content: \"\\F0248\";\n}\n\n.mdi-flip-vertical::before {\n  content: \"\\F10E8\";\n}\n\n.mdi-floor-lamp::before {\n  content: \"\\F08DD\";\n}\n\n.mdi-floor-lamp-dual::before {\n  content: \"\\F1040\";\n}\n\n.mdi-floor-lamp-variant::before {\n  content: \"\\F1041\";\n}\n\n.mdi-floor-plan::before {\n  content: \"\\F0821\";\n}\n\n.mdi-floppy::before {\n  content: \"\\F0249\";\n}\n\n.mdi-floppy-variant::before {\n  content: \"\\F09EF\";\n}\n\n.mdi-flower::before {\n  content: \"\\F024A\";\n}\n\n.mdi-flower-outline::before {\n  content: \"\\F09F0\";\n}\n\n.mdi-flower-poppy::before {\n  content: \"\\F0D08\";\n}\n\n.mdi-flower-tulip::before {\n  content: \"\\F09F1\";\n}\n\n.mdi-flower-tulip-outline::before {\n  content: \"\\F09F2\";\n}\n\n.mdi-focus-auto::before {\n  content: \"\\F0F4E\";\n}\n\n.mdi-focus-field::before {\n  content: \"\\F0F4F\";\n}\n\n.mdi-focus-field-horizontal::before {\n  content: \"\\F0F50\";\n}\n\n.mdi-focus-field-vertical::before {\n  content: \"\\F0F51\";\n}\n\n.mdi-folder::before {\n  content: \"\\F024B\";\n}\n\n.mdi-folder-account::before {\n  content: \"\\F024C\";\n}\n\n.mdi-folder-account-outline::before {\n  content: \"\\F0B9C\";\n}\n\n.mdi-folder-alert::before {\n  content: \"\\F0DCC\";\n}\n\n.mdi-folder-alert-outline::before {\n  content: \"\\F0DCD\";\n}\n\n.mdi-folder-clock::before {\n  content: \"\\F0ABA\";\n}\n\n.mdi-folder-clock-outline::before {\n  content: \"\\F0ABB\";\n}\n\n.mdi-folder-cog::before {\n  content: \"\\F107F\";\n}\n\n.mdi-folder-cog-outline::before {\n  content: \"\\F1080\";\n}\n\n.mdi-folder-download::before {\n  content: \"\\F024D\";\n}\n\n.mdi-folder-download-outline::before {\n  content: \"\\F10E9\";\n}\n\n.mdi-folder-edit::before {\n  content: \"\\F08DE\";\n}\n\n.mdi-folder-edit-outline::before {\n  content: \"\\F0DCE\";\n}\n\n.mdi-folder-google-drive::before {\n  content: \"\\F024E\";\n}\n\n.mdi-folder-heart::before {\n  content: \"\\F10EA\";\n}\n\n.mdi-folder-heart-outline::before {\n  content: \"\\F10EB\";\n}\n\n.mdi-folder-home::before {\n  content: \"\\F10B5\";\n}\n\n.mdi-folder-home-outline::before {\n  content: \"\\F10B6\";\n}\n\n.mdi-folder-image::before {\n  content: \"\\F024F\";\n}\n\n.mdi-folder-information::before {\n  content: \"\\F10B7\";\n}\n\n.mdi-folder-information-outline::before {\n  content: \"\\F10B8\";\n}\n\n.mdi-folder-key::before {\n  content: \"\\F08AC\";\n}\n\n.mdi-folder-key-network::before {\n  content: \"\\F08AD\";\n}\n\n.mdi-folder-key-network-outline::before {\n  content: \"\\F0C80\";\n}\n\n.mdi-folder-key-outline::before {\n  content: \"\\F10EC\";\n}\n\n.mdi-folder-lock::before {\n  content: \"\\F0250\";\n}\n\n.mdi-folder-lock-open::before {\n  content: \"\\F0251\";\n}\n\n.mdi-folder-marker::before {\n  content: \"\\F126D\";\n}\n\n.mdi-folder-marker-outline::before {\n  content: \"\\F126E\";\n}\n\n.mdi-folder-move::before {\n  content: \"\\F0252\";\n}\n\n.mdi-folder-move-outline::before {\n  content: \"\\F1246\";\n}\n\n.mdi-folder-multiple::before {\n  content: \"\\F0253\";\n}\n\n.mdi-folder-multiple-image::before {\n  content: \"\\F0254\";\n}\n\n.mdi-folder-multiple-outline::before {\n  content: \"\\F0255\";\n}\n\n.mdi-folder-multiple-plus::before {\n  content: \"\\F147E\";\n}\n\n.mdi-folder-multiple-plus-outline::before {\n  content: \"\\F147F\";\n}\n\n.mdi-folder-music::before {\n  content: \"\\F1359\";\n}\n\n.mdi-folder-music-outline::before {\n  content: \"\\F135A\";\n}\n\n.mdi-folder-network::before {\n  content: \"\\F0870\";\n}\n\n.mdi-folder-network-outline::before {\n  content: \"\\F0C81\";\n}\n\n.mdi-folder-open::before {\n  content: \"\\F0770\";\n}\n\n.mdi-folder-open-outline::before {\n  content: \"\\F0DCF\";\n}\n\n.mdi-folder-outline::before {\n  content: \"\\F0256\";\n}\n\n.mdi-folder-plus::before {\n  content: \"\\F0257\";\n}\n\n.mdi-folder-plus-outline::before {\n  content: \"\\F0B9D\";\n}\n\n.mdi-folder-pound::before {\n  content: \"\\F0D09\";\n}\n\n.mdi-folder-pound-outline::before {\n  content: \"\\F0D0A\";\n}\n\n.mdi-folder-refresh::before {\n  content: \"\\F0749\";\n}\n\n.mdi-folder-refresh-outline::before {\n  content: \"\\F0542\";\n}\n\n.mdi-folder-remove::before {\n  content: \"\\F0258\";\n}\n\n.mdi-folder-remove-outline::before {\n  content: \"\\F0B9E\";\n}\n\n.mdi-folder-search::before {\n  content: \"\\F0968\";\n}\n\n.mdi-folder-search-outline::before {\n  content: \"\\F0969\";\n}\n\n.mdi-folder-settings::before {\n  content: \"\\F107D\";\n}\n\n.mdi-folder-settings-outline::before {\n  content: \"\\F107E\";\n}\n\n.mdi-folder-star::before {\n  content: \"\\F069D\";\n}\n\n.mdi-folder-star-multiple::before {\n  content: \"\\F13D3\";\n}\n\n.mdi-folder-star-multiple-outline::before {\n  content: \"\\F13D4\";\n}\n\n.mdi-folder-star-outline::before {\n  content: \"\\F0B9F\";\n}\n\n.mdi-folder-swap::before {\n  content: \"\\F0FB6\";\n}\n\n.mdi-folder-swap-outline::before {\n  content: \"\\F0FB7\";\n}\n\n.mdi-folder-sync::before {\n  content: \"\\F0D0B\";\n}\n\n.mdi-folder-sync-outline::before {\n  content: \"\\F0D0C\";\n}\n\n.mdi-folder-table::before {\n  content: \"\\F12E3\";\n}\n\n.mdi-folder-table-outline::before {\n  content: \"\\F12E4\";\n}\n\n.mdi-folder-text::before {\n  content: \"\\F0C82\";\n}\n\n.mdi-folder-text-outline::before {\n  content: \"\\F0C83\";\n}\n\n.mdi-folder-upload::before {\n  content: \"\\F0259\";\n}\n\n.mdi-folder-upload-outline::before {\n  content: \"\\F10ED\";\n}\n\n.mdi-folder-zip::before {\n  content: \"\\F06EB\";\n}\n\n.mdi-folder-zip-outline::before {\n  content: \"\\F07B9\";\n}\n\n.mdi-font-awesome::before {\n  content: \"\\F003A\";\n}\n\n.mdi-food::before {\n  content: \"\\F025A\";\n}\n\n.mdi-food-apple::before {\n  content: \"\\F025B\";\n}\n\n.mdi-food-apple-outline::before {\n  content: \"\\F0C84\";\n}\n\n.mdi-food-croissant::before {\n  content: \"\\F07C8\";\n}\n\n.mdi-food-drumstick::before {\n  content: \"\\F141F\";\n}\n\n.mdi-food-drumstick-off::before {\n  content: \"\\F1468\";\n}\n\n.mdi-food-drumstick-off-outline::before {\n  content: \"\\F1469\";\n}\n\n.mdi-food-drumstick-outline::before {\n  content: \"\\F1420\";\n}\n\n.mdi-food-fork-drink::before {\n  content: \"\\F05F2\";\n}\n\n.mdi-food-halal::before {\n  content: \"\\F1572\";\n}\n\n.mdi-food-kosher::before {\n  content: \"\\F1573\";\n}\n\n.mdi-food-off::before {\n  content: \"\\F05F3\";\n}\n\n.mdi-food-steak::before {\n  content: \"\\F146A\";\n}\n\n.mdi-food-steak-off::before {\n  content: \"\\F146B\";\n}\n\n.mdi-food-turkey::before {\n  content: \"\\F171C\";\n}\n\n.mdi-food-variant::before {\n  content: \"\\F025C\";\n}\n\n.mdi-food-variant-off::before {\n  content: \"\\F13E5\";\n}\n\n.mdi-foot-print::before {\n  content: \"\\F0F52\";\n}\n\n.mdi-football::before {\n  content: \"\\F025D\";\n}\n\n.mdi-football-australian::before {\n  content: \"\\F025E\";\n}\n\n.mdi-football-helmet::before {\n  content: \"\\F025F\";\n}\n\n.mdi-forklift::before {\n  content: \"\\F07C9\";\n}\n\n.mdi-form-dropdown::before {\n  content: \"\\F1400\";\n}\n\n.mdi-form-select::before {\n  content: \"\\F1401\";\n}\n\n.mdi-form-textarea::before {\n  content: \"\\F1095\";\n}\n\n.mdi-form-textbox::before {\n  content: \"\\F060E\";\n}\n\n.mdi-form-textbox-lock::before {\n  content: \"\\F135D\";\n}\n\n.mdi-form-textbox-password::before {\n  content: \"\\F07F5\";\n}\n\n.mdi-format-align-bottom::before {\n  content: \"\\F0753\";\n}\n\n.mdi-format-align-center::before {\n  content: \"\\F0260\";\n}\n\n.mdi-format-align-justify::before {\n  content: \"\\F0261\";\n}\n\n.mdi-format-align-left::before {\n  content: \"\\F0262\";\n}\n\n.mdi-format-align-middle::before {\n  content: \"\\F0754\";\n}\n\n.mdi-format-align-right::before {\n  content: \"\\F0263\";\n}\n\n.mdi-format-align-top::before {\n  content: \"\\F0755\";\n}\n\n.mdi-format-annotation-minus::before {\n  content: \"\\F0ABC\";\n}\n\n.mdi-format-annotation-plus::before {\n  content: \"\\F0646\";\n}\n\n.mdi-format-bold::before {\n  content: \"\\F0264\";\n}\n\n.mdi-format-clear::before {\n  content: \"\\F0265\";\n}\n\n.mdi-format-color-fill::before {\n  content: \"\\F0266\";\n}\n\n.mdi-format-color-highlight::before {\n  content: \"\\F0E31\";\n}\n\n.mdi-format-color-marker-cancel::before {\n  content: \"\\F1313\";\n}\n\n.mdi-format-color-text::before {\n  content: \"\\F069E\";\n}\n\n.mdi-format-columns::before {\n  content: \"\\F08DF\";\n}\n\n.mdi-format-float-center::before {\n  content: \"\\F0267\";\n}\n\n.mdi-format-float-left::before {\n  content: \"\\F0268\";\n}\n\n.mdi-format-float-none::before {\n  content: \"\\F0269\";\n}\n\n.mdi-format-float-right::before {\n  content: \"\\F026A\";\n}\n\n.mdi-format-font::before {\n  content: \"\\F06D6\";\n}\n\n.mdi-format-font-size-decrease::before {\n  content: \"\\F09F3\";\n}\n\n.mdi-format-font-size-increase::before {\n  content: \"\\F09F4\";\n}\n\n.mdi-format-header-1::before {\n  content: \"\\F026B\";\n}\n\n.mdi-format-header-2::before {\n  content: \"\\F026C\";\n}\n\n.mdi-format-header-3::before {\n  content: \"\\F026D\";\n}\n\n.mdi-format-header-4::before {\n  content: \"\\F026E\";\n}\n\n.mdi-format-header-5::before {\n  content: \"\\F026F\";\n}\n\n.mdi-format-header-6::before {\n  content: \"\\F0270\";\n}\n\n.mdi-format-header-decrease::before {\n  content: \"\\F0271\";\n}\n\n.mdi-format-header-equal::before {\n  content: \"\\F0272\";\n}\n\n.mdi-format-header-increase::before {\n  content: \"\\F0273\";\n}\n\n.mdi-format-header-pound::before {\n  content: \"\\F0274\";\n}\n\n.mdi-format-horizontal-align-center::before {\n  content: \"\\F061E\";\n}\n\n.mdi-format-horizontal-align-left::before {\n  content: \"\\F061F\";\n}\n\n.mdi-format-horizontal-align-right::before {\n  content: \"\\F0620\";\n}\n\n.mdi-format-indent-decrease::before {\n  content: \"\\F0275\";\n}\n\n.mdi-format-indent-increase::before {\n  content: \"\\F0276\";\n}\n\n.mdi-format-italic::before {\n  content: \"\\F0277\";\n}\n\n.mdi-format-letter-case::before {\n  content: \"\\F0B34\";\n}\n\n.mdi-format-letter-case-lower::before {\n  content: \"\\F0B35\";\n}\n\n.mdi-format-letter-case-upper::before {\n  content: \"\\F0B36\";\n}\n\n.mdi-format-letter-ends-with::before {\n  content: \"\\F0FB8\";\n}\n\n.mdi-format-letter-matches::before {\n  content: \"\\F0FB9\";\n}\n\n.mdi-format-letter-starts-with::before {\n  content: \"\\F0FBA\";\n}\n\n.mdi-format-line-spacing::before {\n  content: \"\\F0278\";\n}\n\n.mdi-format-line-style::before {\n  content: \"\\F05C8\";\n}\n\n.mdi-format-line-weight::before {\n  content: \"\\F05C9\";\n}\n\n.mdi-format-list-bulleted::before {\n  content: \"\\F0279\";\n}\n\n.mdi-format-list-bulleted-square::before {\n  content: \"\\F0DD0\";\n}\n\n.mdi-format-list-bulleted-triangle::before {\n  content: \"\\F0EB2\";\n}\n\n.mdi-format-list-bulleted-type::before {\n  content: \"\\F027A\";\n}\n\n.mdi-format-list-checkbox::before {\n  content: \"\\F096A\";\n}\n\n.mdi-format-list-checks::before {\n  content: \"\\F0756\";\n}\n\n.mdi-format-list-numbered::before {\n  content: \"\\F027B\";\n}\n\n.mdi-format-list-numbered-rtl::before {\n  content: \"\\F0D0D\";\n}\n\n.mdi-format-list-text::before {\n  content: \"\\F126F\";\n}\n\n.mdi-format-overline::before {\n  content: \"\\F0EB3\";\n}\n\n.mdi-format-page-break::before {\n  content: \"\\F06D7\";\n}\n\n.mdi-format-paint::before {\n  content: \"\\F027C\";\n}\n\n.mdi-format-paragraph::before {\n  content: \"\\F027D\";\n}\n\n.mdi-format-pilcrow::before {\n  content: \"\\F06D8\";\n}\n\n.mdi-format-quote-close::before {\n  content: \"\\F027E\";\n}\n\n.mdi-format-quote-close-outline::before {\n  content: \"\\F11A8\";\n}\n\n.mdi-format-quote-open::before {\n  content: \"\\F0757\";\n}\n\n.mdi-format-quote-open-outline::before {\n  content: \"\\F11A7\";\n}\n\n.mdi-format-rotate-90::before {\n  content: \"\\F06AA\";\n}\n\n.mdi-format-section::before {\n  content: \"\\F069F\";\n}\n\n.mdi-format-size::before {\n  content: \"\\F027F\";\n}\n\n.mdi-format-strikethrough::before {\n  content: \"\\F0280\";\n}\n\n.mdi-format-strikethrough-variant::before {\n  content: \"\\F0281\";\n}\n\n.mdi-format-subscript::before {\n  content: \"\\F0282\";\n}\n\n.mdi-format-superscript::before {\n  content: \"\\F0283\";\n}\n\n.mdi-format-text::before {\n  content: \"\\F0284\";\n}\n\n.mdi-format-text-rotation-angle-down::before {\n  content: \"\\F0FBB\";\n}\n\n.mdi-format-text-rotation-angle-up::before {\n  content: \"\\F0FBC\";\n}\n\n.mdi-format-text-rotation-down::before {\n  content: \"\\F0D73\";\n}\n\n.mdi-format-text-rotation-down-vertical::before {\n  content: \"\\F0FBD\";\n}\n\n.mdi-format-text-rotation-none::before {\n  content: \"\\F0D74\";\n}\n\n.mdi-format-text-rotation-up::before {\n  content: \"\\F0FBE\";\n}\n\n.mdi-format-text-rotation-vertical::before {\n  content: \"\\F0FBF\";\n}\n\n.mdi-format-text-variant::before {\n  content: \"\\F0E32\";\n}\n\n.mdi-format-text-variant-outline::before {\n  content: \"\\F150F\";\n}\n\n.mdi-format-text-wrapping-clip::before {\n  content: \"\\F0D0E\";\n}\n\n.mdi-format-text-wrapping-overflow::before {\n  content: \"\\F0D0F\";\n}\n\n.mdi-format-text-wrapping-wrap::before {\n  content: \"\\F0D10\";\n}\n\n.mdi-format-textbox::before {\n  content: \"\\F0D11\";\n}\n\n.mdi-format-textdirection-l-to-r::before {\n  content: \"\\F0285\";\n}\n\n.mdi-format-textdirection-r-to-l::before {\n  content: \"\\F0286\";\n}\n\n.mdi-format-title::before {\n  content: \"\\F05F4\";\n}\n\n.mdi-format-underline::before {\n  content: \"\\F0287\";\n}\n\n.mdi-format-vertical-align-bottom::before {\n  content: \"\\F0621\";\n}\n\n.mdi-format-vertical-align-center::before {\n  content: \"\\F0622\";\n}\n\n.mdi-format-vertical-align-top::before {\n  content: \"\\F0623\";\n}\n\n.mdi-format-wrap-inline::before {\n  content: \"\\F0288\";\n}\n\n.mdi-format-wrap-square::before {\n  content: \"\\F0289\";\n}\n\n.mdi-format-wrap-tight::before {\n  content: \"\\F028A\";\n}\n\n.mdi-format-wrap-top-bottom::before {\n  content: \"\\F028B\";\n}\n\n.mdi-forum::before {\n  content: \"\\F028C\";\n}\n\n.mdi-forum-outline::before {\n  content: \"\\F0822\";\n}\n\n.mdi-forward::before {\n  content: \"\\F028D\";\n}\n\n.mdi-forwardburger::before {\n  content: \"\\F0D75\";\n}\n\n.mdi-fountain::before {\n  content: \"\\F096B\";\n}\n\n.mdi-fountain-pen::before {\n  content: \"\\F0D12\";\n}\n\n.mdi-fountain-pen-tip::before {\n  content: \"\\F0D13\";\n}\n\n.mdi-freebsd::before {\n  content: \"\\F08E0\";\n}\n\n.mdi-frequently-asked-questions::before {\n  content: \"\\F0EB4\";\n}\n\n.mdi-fridge::before {\n  content: \"\\F0290\";\n}\n\n.mdi-fridge-alert::before {\n  content: \"\\F11B1\";\n}\n\n.mdi-fridge-alert-outline::before {\n  content: \"\\F11B2\";\n}\n\n.mdi-fridge-bottom::before {\n  content: \"\\F0292\";\n}\n\n.mdi-fridge-industrial::before {\n  content: \"\\F15EE\";\n}\n\n.mdi-fridge-industrial-alert::before {\n  content: \"\\F15EF\";\n}\n\n.mdi-fridge-industrial-alert-outline::before {\n  content: \"\\F15F0\";\n}\n\n.mdi-fridge-industrial-off::before {\n  content: \"\\F15F1\";\n}\n\n.mdi-fridge-industrial-off-outline::before {\n  content: \"\\F15F2\";\n}\n\n.mdi-fridge-industrial-outline::before {\n  content: \"\\F15F3\";\n}\n\n.mdi-fridge-off::before {\n  content: \"\\F11AF\";\n}\n\n.mdi-fridge-off-outline::before {\n  content: \"\\F11B0\";\n}\n\n.mdi-fridge-outline::before {\n  content: \"\\F028F\";\n}\n\n.mdi-fridge-top::before {\n  content: \"\\F0291\";\n}\n\n.mdi-fridge-variant::before {\n  content: \"\\F15F4\";\n}\n\n.mdi-fridge-variant-alert::before {\n  content: \"\\F15F5\";\n}\n\n.mdi-fridge-variant-alert-outline::before {\n  content: \"\\F15F6\";\n}\n\n.mdi-fridge-variant-off::before {\n  content: \"\\F15F7\";\n}\n\n.mdi-fridge-variant-off-outline::before {\n  content: \"\\F15F8\";\n}\n\n.mdi-fridge-variant-outline::before {\n  content: \"\\F15F9\";\n}\n\n.mdi-fruit-cherries::before {\n  content: \"\\F1042\";\n}\n\n.mdi-fruit-cherries-off::before {\n  content: \"\\F13F8\";\n}\n\n.mdi-fruit-citrus::before {\n  content: \"\\F1043\";\n}\n\n.mdi-fruit-citrus-off::before {\n  content: \"\\F13F9\";\n}\n\n.mdi-fruit-grapes::before {\n  content: \"\\F1044\";\n}\n\n.mdi-fruit-grapes-outline::before {\n  content: \"\\F1045\";\n}\n\n.mdi-fruit-pineapple::before {\n  content: \"\\F1046\";\n}\n\n.mdi-fruit-watermelon::before {\n  content: \"\\F1047\";\n}\n\n.mdi-fuel::before {\n  content: \"\\F07CA\";\n}\n\n.mdi-fullscreen::before {\n  content: \"\\F0293\";\n}\n\n.mdi-fullscreen-exit::before {\n  content: \"\\F0294\";\n}\n\n.mdi-function::before {\n  content: \"\\F0295\";\n}\n\n.mdi-function-variant::before {\n  content: \"\\F0871\";\n}\n\n.mdi-furigana-horizontal::before {\n  content: \"\\F1081\";\n}\n\n.mdi-furigana-vertical::before {\n  content: \"\\F1082\";\n}\n\n.mdi-fuse::before {\n  content: \"\\F0C85\";\n}\n\n.mdi-fuse-alert::before {\n  content: \"\\F142D\";\n}\n\n.mdi-fuse-blade::before {\n  content: \"\\F0C86\";\n}\n\n.mdi-fuse-off::before {\n  content: \"\\F142C\";\n}\n\n.mdi-gamepad::before {\n  content: \"\\F0296\";\n}\n\n.mdi-gamepad-circle::before {\n  content: \"\\F0E33\";\n}\n\n.mdi-gamepad-circle-down::before {\n  content: \"\\F0E34\";\n}\n\n.mdi-gamepad-circle-left::before {\n  content: \"\\F0E35\";\n}\n\n.mdi-gamepad-circle-outline::before {\n  content: \"\\F0E36\";\n}\n\n.mdi-gamepad-circle-right::before {\n  content: \"\\F0E37\";\n}\n\n.mdi-gamepad-circle-up::before {\n  content: \"\\F0E38\";\n}\n\n.mdi-gamepad-down::before {\n  content: \"\\F0E39\";\n}\n\n.mdi-gamepad-left::before {\n  content: \"\\F0E3A\";\n}\n\n.mdi-gamepad-right::before {\n  content: \"\\F0E3B\";\n}\n\n.mdi-gamepad-round::before {\n  content: \"\\F0E3C\";\n}\n\n.mdi-gamepad-round-down::before {\n  content: \"\\F0E3D\";\n}\n\n.mdi-gamepad-round-left::before {\n  content: \"\\F0E3E\";\n}\n\n.mdi-gamepad-round-outline::before {\n  content: \"\\F0E3F\";\n}\n\n.mdi-gamepad-round-right::before {\n  content: \"\\F0E40\";\n}\n\n.mdi-gamepad-round-up::before {\n  content: \"\\F0E41\";\n}\n\n.mdi-gamepad-square::before {\n  content: \"\\F0EB5\";\n}\n\n.mdi-gamepad-square-outline::before {\n  content: \"\\F0EB6\";\n}\n\n.mdi-gamepad-up::before {\n  content: \"\\F0E42\";\n}\n\n.mdi-gamepad-variant::before {\n  content: \"\\F0297\";\n}\n\n.mdi-gamepad-variant-outline::before {\n  content: \"\\F0EB7\";\n}\n\n.mdi-gamma::before {\n  content: \"\\F10EE\";\n}\n\n.mdi-gantry-crane::before {\n  content: \"\\F0DD1\";\n}\n\n.mdi-garage::before {\n  content: \"\\F06D9\";\n}\n\n.mdi-garage-alert::before {\n  content: \"\\F0872\";\n}\n\n.mdi-garage-alert-variant::before {\n  content: \"\\F12D5\";\n}\n\n.mdi-garage-open::before {\n  content: \"\\F06DA\";\n}\n\n.mdi-garage-open-variant::before {\n  content: \"\\F12D4\";\n}\n\n.mdi-garage-variant::before {\n  content: \"\\F12D3\";\n}\n\n.mdi-gas-cylinder::before {\n  content: \"\\F0647\";\n}\n\n.mdi-gas-station::before {\n  content: \"\\F0298\";\n}\n\n.mdi-gas-station-off::before {\n  content: \"\\F1409\";\n}\n\n.mdi-gas-station-off-outline::before {\n  content: \"\\F140A\";\n}\n\n.mdi-gas-station-outline::before {\n  content: \"\\F0EB8\";\n}\n\n.mdi-gate::before {\n  content: \"\\F0299\";\n}\n\n.mdi-gate-and::before {\n  content: \"\\F08E1\";\n}\n\n.mdi-gate-arrow-right::before {\n  content: \"\\F1169\";\n}\n\n.mdi-gate-nand::before {\n  content: \"\\F08E2\";\n}\n\n.mdi-gate-nor::before {\n  content: \"\\F08E3\";\n}\n\n.mdi-gate-not::before {\n  content: \"\\F08E4\";\n}\n\n.mdi-gate-open::before {\n  content: \"\\F116A\";\n}\n\n.mdi-gate-or::before {\n  content: \"\\F08E5\";\n}\n\n.mdi-gate-xnor::before {\n  content: \"\\F08E6\";\n}\n\n.mdi-gate-xor::before {\n  content: \"\\F08E7\";\n}\n\n.mdi-gatsby::before {\n  content: \"\\F0E43\";\n}\n\n.mdi-gauge::before {\n  content: \"\\F029A\";\n}\n\n.mdi-gauge-empty::before {\n  content: \"\\F0873\";\n}\n\n.mdi-gauge-full::before {\n  content: \"\\F0874\";\n}\n\n.mdi-gauge-low::before {\n  content: \"\\F0875\";\n}\n\n.mdi-gavel::before {\n  content: \"\\F029B\";\n}\n\n.mdi-gender-female::before {\n  content: \"\\F029C\";\n}\n\n.mdi-gender-male::before {\n  content: \"\\F029D\";\n}\n\n.mdi-gender-male-female::before {\n  content: \"\\F029E\";\n}\n\n.mdi-gender-male-female-variant::before {\n  content: \"\\F113F\";\n}\n\n.mdi-gender-non-binary::before {\n  content: \"\\F1140\";\n}\n\n.mdi-gender-transgender::before {\n  content: \"\\F029F\";\n}\n\n.mdi-gentoo::before {\n  content: \"\\F08E8\";\n}\n\n.mdi-gesture::before {\n  content: \"\\F07CB\";\n}\n\n.mdi-gesture-double-tap::before {\n  content: \"\\F073C\";\n}\n\n.mdi-gesture-pinch::before {\n  content: \"\\F0ABD\";\n}\n\n.mdi-gesture-spread::before {\n  content: \"\\F0ABE\";\n}\n\n.mdi-gesture-swipe::before {\n  content: \"\\F0D76\";\n}\n\n.mdi-gesture-swipe-down::before {\n  content: \"\\F073D\";\n}\n\n.mdi-gesture-swipe-horizontal::before {\n  content: \"\\F0ABF\";\n}\n\n.mdi-gesture-swipe-left::before {\n  content: \"\\F073E\";\n}\n\n.mdi-gesture-swipe-right::before {\n  content: \"\\F073F\";\n}\n\n.mdi-gesture-swipe-up::before {\n  content: \"\\F0740\";\n}\n\n.mdi-gesture-swipe-vertical::before {\n  content: \"\\F0AC0\";\n}\n\n.mdi-gesture-tap::before {\n  content: \"\\F0741\";\n}\n\n.mdi-gesture-tap-box::before {\n  content: \"\\F12A9\";\n}\n\n.mdi-gesture-tap-button::before {\n  content: \"\\F12A8\";\n}\n\n.mdi-gesture-tap-hold::before {\n  content: \"\\F0D77\";\n}\n\n.mdi-gesture-two-double-tap::before {\n  content: \"\\F0742\";\n}\n\n.mdi-gesture-two-tap::before {\n  content: \"\\F0743\";\n}\n\n.mdi-ghost::before {\n  content: \"\\F02A0\";\n}\n\n.mdi-ghost-off::before {\n  content: \"\\F09F5\";\n}\n\n.mdi-ghost-off-outline::before {\n  content: \"\\F165C\";\n}\n\n.mdi-ghost-outline::before {\n  content: \"\\F165D\";\n}\n\n.mdi-gif::before {\n  content: \"\\F0D78\";\n}\n\n.mdi-gift::before {\n  content: \"\\F0E44\";\n}\n\n.mdi-gift-off::before {\n  content: \"\\F16EF\";\n}\n\n.mdi-gift-off-outline::before {\n  content: \"\\F16F0\";\n}\n\n.mdi-gift-open::before {\n  content: \"\\F16F1\";\n}\n\n.mdi-gift-open-outline::before {\n  content: \"\\F16F2\";\n}\n\n.mdi-gift-outline::before {\n  content: \"\\F02A1\";\n}\n\n.mdi-git::before {\n  content: \"\\F02A2\";\n}\n\n.mdi-github::before {\n  content: \"\\F02A4\";\n}\n\n.mdi-gitlab::before {\n  content: \"\\F0BA0\";\n}\n\n.mdi-glass-cocktail::before {\n  content: \"\\F0356\";\n}\n\n.mdi-glass-cocktail-off::before {\n  content: \"\\F15E6\";\n}\n\n.mdi-glass-flute::before {\n  content: \"\\F02A5\";\n}\n\n.mdi-glass-mug::before {\n  content: \"\\F02A6\";\n}\n\n.mdi-glass-mug-off::before {\n  content: \"\\F15E7\";\n}\n\n.mdi-glass-mug-variant::before {\n  content: \"\\F1116\";\n}\n\n.mdi-glass-mug-variant-off::before {\n  content: \"\\F15E8\";\n}\n\n.mdi-glass-pint-outline::before {\n  content: \"\\F130D\";\n}\n\n.mdi-glass-stange::before {\n  content: \"\\F02A7\";\n}\n\n.mdi-glass-tulip::before {\n  content: \"\\F02A8\";\n}\n\n.mdi-glass-wine::before {\n  content: \"\\F0876\";\n}\n\n.mdi-glasses::before {\n  content: \"\\F02AA\";\n}\n\n.mdi-globe-light::before {\n  content: \"\\F12D7\";\n}\n\n.mdi-globe-model::before {\n  content: \"\\F08E9\";\n}\n\n.mdi-gmail::before {\n  content: \"\\F02AB\";\n}\n\n.mdi-gnome::before {\n  content: \"\\F02AC\";\n}\n\n.mdi-go-kart::before {\n  content: \"\\F0D79\";\n}\n\n.mdi-go-kart-track::before {\n  content: \"\\F0D7A\";\n}\n\n.mdi-gog::before {\n  content: \"\\F0BA1\";\n}\n\n.mdi-gold::before {\n  content: \"\\F124F\";\n}\n\n.mdi-golf::before {\n  content: \"\\F0823\";\n}\n\n.mdi-golf-cart::before {\n  content: \"\\F11A4\";\n}\n\n.mdi-golf-tee::before {\n  content: \"\\F1083\";\n}\n\n.mdi-gondola::before {\n  content: \"\\F0686\";\n}\n\n.mdi-goodreads::before {\n  content: \"\\F0D7B\";\n}\n\n.mdi-google::before {\n  content: \"\\F02AD\";\n}\n\n.mdi-google-ads::before {\n  content: \"\\F0C87\";\n}\n\n.mdi-google-analytics::before {\n  content: \"\\F07CC\";\n}\n\n.mdi-google-assistant::before {\n  content: \"\\F07CD\";\n}\n\n.mdi-google-cardboard::before {\n  content: \"\\F02AE\";\n}\n\n.mdi-google-chrome::before {\n  content: \"\\F02AF\";\n}\n\n.mdi-google-circles::before {\n  content: \"\\F02B0\";\n}\n\n.mdi-google-circles-communities::before {\n  content: \"\\F02B1\";\n}\n\n.mdi-google-circles-extended::before {\n  content: \"\\F02B2\";\n}\n\n.mdi-google-circles-group::before {\n  content: \"\\F02B3\";\n}\n\n.mdi-google-classroom::before {\n  content: \"\\F02C0\";\n}\n\n.mdi-google-cloud::before {\n  content: \"\\F11F6\";\n}\n\n.mdi-google-controller::before {\n  content: \"\\F02B4\";\n}\n\n.mdi-google-controller-off::before {\n  content: \"\\F02B5\";\n}\n\n.mdi-google-downasaur::before {\n  content: \"\\F1362\";\n}\n\n.mdi-google-drive::before {\n  content: \"\\F02B6\";\n}\n\n.mdi-google-earth::before {\n  content: \"\\F02B7\";\n}\n\n.mdi-google-fit::before {\n  content: \"\\F096C\";\n}\n\n.mdi-google-glass::before {\n  content: \"\\F02B8\";\n}\n\n.mdi-google-hangouts::before {\n  content: \"\\F02C9\";\n}\n\n.mdi-google-home::before {\n  content: \"\\F0824\";\n}\n\n.mdi-google-keep::before {\n  content: \"\\F06DC\";\n}\n\n.mdi-google-lens::before {\n  content: \"\\F09F6\";\n}\n\n.mdi-google-maps::before {\n  content: \"\\F05F5\";\n}\n\n.mdi-google-my-business::before {\n  content: \"\\F1048\";\n}\n\n.mdi-google-nearby::before {\n  content: \"\\F02B9\";\n}\n\n.mdi-google-photos::before {\n  content: \"\\F06DD\";\n}\n\n.mdi-google-play::before {\n  content: \"\\F02BC\";\n}\n\n.mdi-google-plus::before {\n  content: \"\\F02BD\";\n}\n\n.mdi-google-podcast::before {\n  content: \"\\F0EB9\";\n}\n\n.mdi-google-spreadsheet::before {\n  content: \"\\F09F7\";\n}\n\n.mdi-google-street-view::before {\n  content: \"\\F0C88\";\n}\n\n.mdi-google-translate::before {\n  content: \"\\F02BF\";\n}\n\n.mdi-gradient::before {\n  content: \"\\F06A0\";\n}\n\n.mdi-grain::before {\n  content: \"\\F0D7C\";\n}\n\n.mdi-graph::before {\n  content: \"\\F1049\";\n}\n\n.mdi-graph-outline::before {\n  content: \"\\F104A\";\n}\n\n.mdi-graphql::before {\n  content: \"\\F0877\";\n}\n\n.mdi-grass::before {\n  content: \"\\F1510\";\n}\n\n.mdi-grave-stone::before {\n  content: \"\\F0BA2\";\n}\n\n.mdi-grease-pencil::before {\n  content: \"\\F0648\";\n}\n\n.mdi-greater-than::before {\n  content: \"\\F096D\";\n}\n\n.mdi-greater-than-or-equal::before {\n  content: \"\\F096E\";\n}\n\n.mdi-grid::before {\n  content: \"\\F02C1\";\n}\n\n.mdi-grid-large::before {\n  content: \"\\F0758\";\n}\n\n.mdi-grid-off::before {\n  content: \"\\F02C2\";\n}\n\n.mdi-grill::before {\n  content: \"\\F0E45\";\n}\n\n.mdi-grill-outline::before {\n  content: \"\\F118A\";\n}\n\n.mdi-group::before {\n  content: \"\\F02C3\";\n}\n\n.mdi-guitar-acoustic::before {\n  content: \"\\F0771\";\n}\n\n.mdi-guitar-electric::before {\n  content: \"\\F02C4\";\n}\n\n.mdi-guitar-pick::before {\n  content: \"\\F02C5\";\n}\n\n.mdi-guitar-pick-outline::before {\n  content: \"\\F02C6\";\n}\n\n.mdi-guy-fawkes-mask::before {\n  content: \"\\F0825\";\n}\n\n.mdi-hail::before {\n  content: \"\\F0AC1\";\n}\n\n.mdi-hair-dryer::before {\n  content: \"\\F10EF\";\n}\n\n.mdi-hair-dryer-outline::before {\n  content: \"\\F10F0\";\n}\n\n.mdi-halloween::before {\n  content: \"\\F0BA3\";\n}\n\n.mdi-hamburger::before {\n  content: \"\\F0685\";\n}\n\n.mdi-hammer::before {\n  content: \"\\F08EA\";\n}\n\n.mdi-hammer-screwdriver::before {\n  content: \"\\F1322\";\n}\n\n.mdi-hammer-wrench::before {\n  content: \"\\F1323\";\n}\n\n.mdi-hand::before {\n  content: \"\\F0A4F\";\n}\n\n.mdi-hand-heart::before {\n  content: \"\\F10F1\";\n}\n\n.mdi-hand-heart-outline::before {\n  content: \"\\F157E\";\n}\n\n.mdi-hand-left::before {\n  content: \"\\F0E46\";\n}\n\n.mdi-hand-okay::before {\n  content: \"\\F0A50\";\n}\n\n.mdi-hand-peace::before {\n  content: \"\\F0A51\";\n}\n\n.mdi-hand-peace-variant::before {\n  content: \"\\F0A52\";\n}\n\n.mdi-hand-pointing-down::before {\n  content: \"\\F0A53\";\n}\n\n.mdi-hand-pointing-left::before {\n  content: \"\\F0A54\";\n}\n\n.mdi-hand-pointing-right::before {\n  content: \"\\F02C7\";\n}\n\n.mdi-hand-pointing-up::before {\n  content: \"\\F0A55\";\n}\n\n.mdi-hand-right::before {\n  content: \"\\F0E47\";\n}\n\n.mdi-hand-saw::before {\n  content: \"\\F0E48\";\n}\n\n.mdi-hand-wash::before {\n  content: \"\\F157F\";\n}\n\n.mdi-hand-wash-outline::before {\n  content: \"\\F1580\";\n}\n\n.mdi-hand-water::before {\n  content: \"\\F139F\";\n}\n\n.mdi-handball::before {\n  content: \"\\F0F53\";\n}\n\n.mdi-handcuffs::before {\n  content: \"\\F113E\";\n}\n\n.mdi-handshake::before {\n  content: \"\\F1218\";\n}\n\n.mdi-handshake-outline::before {\n  content: \"\\F15A1\";\n}\n\n.mdi-hanger::before {\n  content: \"\\F02C8\";\n}\n\n.mdi-hard-hat::before {\n  content: \"\\F096F\";\n}\n\n.mdi-harddisk::before {\n  content: \"\\F02CA\";\n}\n\n.mdi-harddisk-plus::before {\n  content: \"\\F104B\";\n}\n\n.mdi-harddisk-remove::before {\n  content: \"\\F104C\";\n}\n\n.mdi-hat-fedora::before {\n  content: \"\\F0BA4\";\n}\n\n.mdi-hazard-lights::before {\n  content: \"\\F0C89\";\n}\n\n.mdi-hdr::before {\n  content: \"\\F0D7D\";\n}\n\n.mdi-hdr-off::before {\n  content: \"\\F0D7E\";\n}\n\n.mdi-head::before {\n  content: \"\\F135E\";\n}\n\n.mdi-head-alert::before {\n  content: \"\\F1338\";\n}\n\n.mdi-head-alert-outline::before {\n  content: \"\\F1339\";\n}\n\n.mdi-head-check::before {\n  content: \"\\F133A\";\n}\n\n.mdi-head-check-outline::before {\n  content: \"\\F133B\";\n}\n\n.mdi-head-cog::before {\n  content: \"\\F133C\";\n}\n\n.mdi-head-cog-outline::before {\n  content: \"\\F133D\";\n}\n\n.mdi-head-dots-horizontal::before {\n  content: \"\\F133E\";\n}\n\n.mdi-head-dots-horizontal-outline::before {\n  content: \"\\F133F\";\n}\n\n.mdi-head-flash::before {\n  content: \"\\F1340\";\n}\n\n.mdi-head-flash-outline::before {\n  content: \"\\F1341\";\n}\n\n.mdi-head-heart::before {\n  content: \"\\F1342\";\n}\n\n.mdi-head-heart-outline::before {\n  content: \"\\F1343\";\n}\n\n.mdi-head-lightbulb::before {\n  content: \"\\F1344\";\n}\n\n.mdi-head-lightbulb-outline::before {\n  content: \"\\F1345\";\n}\n\n.mdi-head-minus::before {\n  content: \"\\F1346\";\n}\n\n.mdi-head-minus-outline::before {\n  content: \"\\F1347\";\n}\n\n.mdi-head-outline::before {\n  content: \"\\F135F\";\n}\n\n.mdi-head-plus::before {\n  content: \"\\F1348\";\n}\n\n.mdi-head-plus-outline::before {\n  content: \"\\F1349\";\n}\n\n.mdi-head-question::before {\n  content: \"\\F134A\";\n}\n\n.mdi-head-question-outline::before {\n  content: \"\\F134B\";\n}\n\n.mdi-head-remove::before {\n  content: \"\\F134C\";\n}\n\n.mdi-head-remove-outline::before {\n  content: \"\\F134D\";\n}\n\n.mdi-head-snowflake::before {\n  content: \"\\F134E\";\n}\n\n.mdi-head-snowflake-outline::before {\n  content: \"\\F134F\";\n}\n\n.mdi-head-sync::before {\n  content: \"\\F1350\";\n}\n\n.mdi-head-sync-outline::before {\n  content: \"\\F1351\";\n}\n\n.mdi-headphones::before {\n  content: \"\\F02CB\";\n}\n\n.mdi-headphones-bluetooth::before {\n  content: \"\\F0970\";\n}\n\n.mdi-headphones-box::before {\n  content: \"\\F02CC\";\n}\n\n.mdi-headphones-off::before {\n  content: \"\\F07CE\";\n}\n\n.mdi-headphones-settings::before {\n  content: \"\\F02CD\";\n}\n\n.mdi-headset::before {\n  content: \"\\F02CE\";\n}\n\n.mdi-headset-dock::before {\n  content: \"\\F02CF\";\n}\n\n.mdi-headset-off::before {\n  content: \"\\F02D0\";\n}\n\n.mdi-heart::before {\n  content: \"\\F02D1\";\n}\n\n.mdi-heart-box::before {\n  content: \"\\F02D2\";\n}\n\n.mdi-heart-box-outline::before {\n  content: \"\\F02D3\";\n}\n\n.mdi-heart-broken::before {\n  content: \"\\F02D4\";\n}\n\n.mdi-heart-broken-outline::before {\n  content: \"\\F0D14\";\n}\n\n.mdi-heart-circle::before {\n  content: \"\\F0971\";\n}\n\n.mdi-heart-circle-outline::before {\n  content: \"\\F0972\";\n}\n\n.mdi-heart-cog::before {\n  content: \"\\F1663\";\n}\n\n.mdi-heart-cog-outline::before {\n  content: \"\\F1664\";\n}\n\n.mdi-heart-flash::before {\n  content: \"\\F0EF9\";\n}\n\n.mdi-heart-half::before {\n  content: \"\\F06DF\";\n}\n\n.mdi-heart-half-full::before {\n  content: \"\\F06DE\";\n}\n\n.mdi-heart-half-outline::before {\n  content: \"\\F06E0\";\n}\n\n.mdi-heart-minus::before {\n  content: \"\\F142F\";\n}\n\n.mdi-heart-minus-outline::before {\n  content: \"\\F1432\";\n}\n\n.mdi-heart-multiple::before {\n  content: \"\\F0A56\";\n}\n\n.mdi-heart-multiple-outline::before {\n  content: \"\\F0A57\";\n}\n\n.mdi-heart-off::before {\n  content: \"\\F0759\";\n}\n\n.mdi-heart-off-outline::before {\n  content: \"\\F1434\";\n}\n\n.mdi-heart-outline::before {\n  content: \"\\F02D5\";\n}\n\n.mdi-heart-plus::before {\n  content: \"\\F142E\";\n}\n\n.mdi-heart-plus-outline::before {\n  content: \"\\F1431\";\n}\n\n.mdi-heart-pulse::before {\n  content: \"\\F05F6\";\n}\n\n.mdi-heart-remove::before {\n  content: \"\\F1430\";\n}\n\n.mdi-heart-remove-outline::before {\n  content: \"\\F1433\";\n}\n\n.mdi-heart-settings::before {\n  content: \"\\F1665\";\n}\n\n.mdi-heart-settings-outline::before {\n  content: \"\\F1666\";\n}\n\n.mdi-helicopter::before {\n  content: \"\\F0AC2\";\n}\n\n.mdi-help::before {\n  content: \"\\F02D6\";\n}\n\n.mdi-help-box::before {\n  content: \"\\F078B\";\n}\n\n.mdi-help-circle::before {\n  content: \"\\F02D7\";\n}\n\n.mdi-help-circle-outline::before {\n  content: \"\\F0625\";\n}\n\n.mdi-help-network::before {\n  content: \"\\F06F5\";\n}\n\n.mdi-help-network-outline::before {\n  content: \"\\F0C8A\";\n}\n\n.mdi-help-rhombus::before {\n  content: \"\\F0BA5\";\n}\n\n.mdi-help-rhombus-outline::before {\n  content: \"\\F0BA6\";\n}\n\n.mdi-hexadecimal::before {\n  content: \"\\F12A7\";\n}\n\n.mdi-hexagon::before {\n  content: \"\\F02D8\";\n}\n\n.mdi-hexagon-multiple::before {\n  content: \"\\F06E1\";\n}\n\n.mdi-hexagon-multiple-outline::before {\n  content: \"\\F10F2\";\n}\n\n.mdi-hexagon-outline::before {\n  content: \"\\F02D9\";\n}\n\n.mdi-hexagon-slice-1::before {\n  content: \"\\F0AC3\";\n}\n\n.mdi-hexagon-slice-2::before {\n  content: \"\\F0AC4\";\n}\n\n.mdi-hexagon-slice-3::before {\n  content: \"\\F0AC5\";\n}\n\n.mdi-hexagon-slice-4::before {\n  content: \"\\F0AC6\";\n}\n\n.mdi-hexagon-slice-5::before {\n  content: \"\\F0AC7\";\n}\n\n.mdi-hexagon-slice-6::before {\n  content: \"\\F0AC8\";\n}\n\n.mdi-hexagram::before {\n  content: \"\\F0AC9\";\n}\n\n.mdi-hexagram-outline::before {\n  content: \"\\F0ACA\";\n}\n\n.mdi-high-definition::before {\n  content: \"\\F07CF\";\n}\n\n.mdi-high-definition-box::before {\n  content: \"\\F0878\";\n}\n\n.mdi-highway::before {\n  content: \"\\F05F7\";\n}\n\n.mdi-hiking::before {\n  content: \"\\F0D7F\";\n}\n\n.mdi-hinduism::before {\n  content: \"\\F0973\";\n}\n\n.mdi-history::before {\n  content: \"\\F02DA\";\n}\n\n.mdi-hockey-puck::before {\n  content: \"\\F0879\";\n}\n\n.mdi-hockey-sticks::before {\n  content: \"\\F087A\";\n}\n\n.mdi-hololens::before {\n  content: \"\\F02DB\";\n}\n\n.mdi-home::before {\n  content: \"\\F02DC\";\n}\n\n.mdi-home-account::before {\n  content: \"\\F0826\";\n}\n\n.mdi-home-alert::before {\n  content: \"\\F087B\";\n}\n\n.mdi-home-alert-outline::before {\n  content: \"\\F15D0\";\n}\n\n.mdi-home-analytics::before {\n  content: \"\\F0EBA\";\n}\n\n.mdi-home-assistant::before {\n  content: \"\\F07D0\";\n}\n\n.mdi-home-automation::before {\n  content: \"\\F07D1\";\n}\n\n.mdi-home-circle::before {\n  content: \"\\F07D2\";\n}\n\n.mdi-home-circle-outline::before {\n  content: \"\\F104D\";\n}\n\n.mdi-home-city::before {\n  content: \"\\F0D15\";\n}\n\n.mdi-home-city-outline::before {\n  content: \"\\F0D16\";\n}\n\n.mdi-home-currency-usd::before {\n  content: \"\\F08AF\";\n}\n\n.mdi-home-edit::before {\n  content: \"\\F1159\";\n}\n\n.mdi-home-edit-outline::before {\n  content: \"\\F115A\";\n}\n\n.mdi-home-export-outline::before {\n  content: \"\\F0F9B\";\n}\n\n.mdi-home-flood::before {\n  content: \"\\F0EFA\";\n}\n\n.mdi-home-floor-0::before {\n  content: \"\\F0DD2\";\n}\n\n.mdi-home-floor-1::before {\n  content: \"\\F0D80\";\n}\n\n.mdi-home-floor-2::before {\n  content: \"\\F0D81\";\n}\n\n.mdi-home-floor-3::before {\n  content: \"\\F0D82\";\n}\n\n.mdi-home-floor-a::before {\n  content: \"\\F0D83\";\n}\n\n.mdi-home-floor-b::before {\n  content: \"\\F0D84\";\n}\n\n.mdi-home-floor-g::before {\n  content: \"\\F0D85\";\n}\n\n.mdi-home-floor-l::before {\n  content: \"\\F0D86\";\n}\n\n.mdi-home-floor-negative-1::before {\n  content: \"\\F0DD3\";\n}\n\n.mdi-home-group::before {\n  content: \"\\F0DD4\";\n}\n\n.mdi-home-heart::before {\n  content: \"\\F0827\";\n}\n\n.mdi-home-import-outline::before {\n  content: \"\\F0F9C\";\n}\n\n.mdi-home-lightbulb::before {\n  content: \"\\F1251\";\n}\n\n.mdi-home-lightbulb-outline::before {\n  content: \"\\F1252\";\n}\n\n.mdi-home-lock::before {\n  content: \"\\F08EB\";\n}\n\n.mdi-home-lock-open::before {\n  content: \"\\F08EC\";\n}\n\n.mdi-home-map-marker::before {\n  content: \"\\F05F8\";\n}\n\n.mdi-home-minus::before {\n  content: \"\\F0974\";\n}\n\n.mdi-home-minus-outline::before {\n  content: \"\\F13D5\";\n}\n\n.mdi-home-modern::before {\n  content: \"\\F02DD\";\n}\n\n.mdi-home-outline::before {\n  content: \"\\F06A1\";\n}\n\n.mdi-home-plus::before {\n  content: \"\\F0975\";\n}\n\n.mdi-home-plus-outline::before {\n  content: \"\\F13D6\";\n}\n\n.mdi-home-remove::before {\n  content: \"\\F1247\";\n}\n\n.mdi-home-remove-outline::before {\n  content: \"\\F13D7\";\n}\n\n.mdi-home-roof::before {\n  content: \"\\F112B\";\n}\n\n.mdi-home-search::before {\n  content: \"\\F13B0\";\n}\n\n.mdi-home-search-outline::before {\n  content: \"\\F13B1\";\n}\n\n.mdi-home-thermometer::before {\n  content: \"\\F0F54\";\n}\n\n.mdi-home-thermometer-outline::before {\n  content: \"\\F0F55\";\n}\n\n.mdi-home-variant::before {\n  content: \"\\F02DE\";\n}\n\n.mdi-home-variant-outline::before {\n  content: \"\\F0BA7\";\n}\n\n.mdi-hook::before {\n  content: \"\\F06E2\";\n}\n\n.mdi-hook-off::before {\n  content: \"\\F06E3\";\n}\n\n.mdi-hops::before {\n  content: \"\\F02DF\";\n}\n\n.mdi-horizontal-rotate-clockwise::before {\n  content: \"\\F10F3\";\n}\n\n.mdi-horizontal-rotate-counterclockwise::before {\n  content: \"\\F10F4\";\n}\n\n.mdi-horse::before {\n  content: \"\\F15BF\";\n}\n\n.mdi-horse-human::before {\n  content: \"\\F15C0\";\n}\n\n.mdi-horse-variant::before {\n  content: \"\\F15C1\";\n}\n\n.mdi-horseshoe::before {\n  content: \"\\F0A58\";\n}\n\n.mdi-hospital::before {\n  content: \"\\F0FF6\";\n}\n\n.mdi-hospital-box::before {\n  content: \"\\F02E0\";\n}\n\n.mdi-hospital-box-outline::before {\n  content: \"\\F0FF7\";\n}\n\n.mdi-hospital-building::before {\n  content: \"\\F02E1\";\n}\n\n.mdi-hospital-marker::before {\n  content: \"\\F02E2\";\n}\n\n.mdi-hot-tub::before {\n  content: \"\\F0828\";\n}\n\n.mdi-hours-24::before {\n  content: \"\\F1478\";\n}\n\n.mdi-hubspot::before {\n  content: \"\\F0D17\";\n}\n\n.mdi-hulu::before {\n  content: \"\\F0829\";\n}\n\n.mdi-human::before {\n  content: \"\\F02E6\";\n}\n\n.mdi-human-baby-changing-table::before {\n  content: \"\\F138B\";\n}\n\n.mdi-human-cane::before {\n  content: \"\\F1581\";\n}\n\n.mdi-human-capacity-decrease::before {\n  content: \"\\F159B\";\n}\n\n.mdi-human-capacity-increase::before {\n  content: \"\\F159C\";\n}\n\n.mdi-human-child::before {\n  content: \"\\F02E7\";\n}\n\n.mdi-human-edit::before {\n  content: \"\\F14E8\";\n}\n\n.mdi-human-female::before {\n  content: \"\\F0649\";\n}\n\n.mdi-human-female-boy::before {\n  content: \"\\F0A59\";\n}\n\n.mdi-human-female-dance::before {\n  content: \"\\F15C9\";\n}\n\n.mdi-human-female-female::before {\n  content: \"\\F0A5A\";\n}\n\n.mdi-human-female-girl::before {\n  content: \"\\F0A5B\";\n}\n\n.mdi-human-greeting::before {\n  content: \"\\F064A\";\n}\n\n.mdi-human-greeting-proximity::before {\n  content: \"\\F159D\";\n}\n\n.mdi-human-handsdown::before {\n  content: \"\\F064B\";\n}\n\n.mdi-human-handsup::before {\n  content: \"\\F064C\";\n}\n\n.mdi-human-male::before {\n  content: \"\\F064D\";\n}\n\n.mdi-human-male-boy::before {\n  content: \"\\F0A5C\";\n}\n\n.mdi-human-male-child::before {\n  content: \"\\F138C\";\n}\n\n.mdi-human-male-female::before {\n  content: \"\\F02E8\";\n}\n\n.mdi-human-male-girl::before {\n  content: \"\\F0A5D\";\n}\n\n.mdi-human-male-height::before {\n  content: \"\\F0EFB\";\n}\n\n.mdi-human-male-height-variant::before {\n  content: \"\\F0EFC\";\n}\n\n.mdi-human-male-male::before {\n  content: \"\\F0A5E\";\n}\n\n.mdi-human-pregnant::before {\n  content: \"\\F05CF\";\n}\n\n.mdi-human-queue::before {\n  content: \"\\F1571\";\n}\n\n.mdi-human-scooter::before {\n  content: \"\\F11E9\";\n}\n\n.mdi-human-wheelchair::before {\n  content: \"\\F138D\";\n}\n\n.mdi-humble-bundle::before {\n  content: \"\\F0744\";\n}\n\n.mdi-hvac::before {\n  content: \"\\F1352\";\n}\n\n.mdi-hvac-off::before {\n  content: \"\\F159E\";\n}\n\n.mdi-hydraulic-oil-level::before {\n  content: \"\\F1324\";\n}\n\n.mdi-hydraulic-oil-temperature::before {\n  content: \"\\F1325\";\n}\n\n.mdi-hydro-power::before {\n  content: \"\\F12E5\";\n}\n\n.mdi-ice-cream::before {\n  content: \"\\F082A\";\n}\n\n.mdi-ice-cream-off::before {\n  content: \"\\F0E52\";\n}\n\n.mdi-ice-pop::before {\n  content: \"\\F0EFD\";\n}\n\n.mdi-id-card::before {\n  content: \"\\F0FC0\";\n}\n\n.mdi-identifier::before {\n  content: \"\\F0EFE\";\n}\n\n.mdi-ideogram-cjk::before {\n  content: \"\\F1331\";\n}\n\n.mdi-ideogram-cjk-variant::before {\n  content: \"\\F1332\";\n}\n\n.mdi-iframe::before {\n  content: \"\\F0C8B\";\n}\n\n.mdi-iframe-array::before {\n  content: \"\\F10F5\";\n}\n\n.mdi-iframe-array-outline::before {\n  content: \"\\F10F6\";\n}\n\n.mdi-iframe-braces::before {\n  content: \"\\F10F7\";\n}\n\n.mdi-iframe-braces-outline::before {\n  content: \"\\F10F8\";\n}\n\n.mdi-iframe-outline::before {\n  content: \"\\F0C8C\";\n}\n\n.mdi-iframe-parentheses::before {\n  content: \"\\F10F9\";\n}\n\n.mdi-iframe-parentheses-outline::before {\n  content: \"\\F10FA\";\n}\n\n.mdi-iframe-variable::before {\n  content: \"\\F10FB\";\n}\n\n.mdi-iframe-variable-outline::before {\n  content: \"\\F10FC\";\n}\n\n.mdi-image::before {\n  content: \"\\F02E9\";\n}\n\n.mdi-image-album::before {\n  content: \"\\F02EA\";\n}\n\n.mdi-image-area::before {\n  content: \"\\F02EB\";\n}\n\n.mdi-image-area-close::before {\n  content: \"\\F02EC\";\n}\n\n.mdi-image-auto-adjust::before {\n  content: \"\\F0FC1\";\n}\n\n.mdi-image-broken::before {\n  content: \"\\F02ED\";\n}\n\n.mdi-image-broken-variant::before {\n  content: \"\\F02EE\";\n}\n\n.mdi-image-edit::before {\n  content: \"\\F11E3\";\n}\n\n.mdi-image-edit-outline::before {\n  content: \"\\F11E4\";\n}\n\n.mdi-image-filter-black-white::before {\n  content: \"\\F02F0\";\n}\n\n.mdi-image-filter-center-focus::before {\n  content: \"\\F02F1\";\n}\n\n.mdi-image-filter-center-focus-strong::before {\n  content: \"\\F0EFF\";\n}\n\n.mdi-image-filter-center-focus-strong-outline::before {\n  content: \"\\F0F00\";\n}\n\n.mdi-image-filter-center-focus-weak::before {\n  content: \"\\F02F2\";\n}\n\n.mdi-image-filter-drama::before {\n  content: \"\\F02F3\";\n}\n\n.mdi-image-filter-frames::before {\n  content: \"\\F02F4\";\n}\n\n.mdi-image-filter-hdr::before {\n  content: \"\\F02F5\";\n}\n\n.mdi-image-filter-none::before {\n  content: \"\\F02F6\";\n}\n\n.mdi-image-filter-tilt-shift::before {\n  content: \"\\F02F7\";\n}\n\n.mdi-image-filter-vintage::before {\n  content: \"\\F02F8\";\n}\n\n.mdi-image-frame::before {\n  content: \"\\F0E49\";\n}\n\n.mdi-image-minus::before {\n  content: \"\\F1419\";\n}\n\n.mdi-image-move::before {\n  content: \"\\F09F8\";\n}\n\n.mdi-image-multiple::before {\n  content: \"\\F02F9\";\n}\n\n.mdi-image-multiple-outline::before {\n  content: \"\\F02EF\";\n}\n\n.mdi-image-off::before {\n  content: \"\\F082B\";\n}\n\n.mdi-image-off-outline::before {\n  content: \"\\F11D1\";\n}\n\n.mdi-image-outline::before {\n  content: \"\\F0976\";\n}\n\n.mdi-image-plus::before {\n  content: \"\\F087C\";\n}\n\n.mdi-image-remove::before {\n  content: \"\\F1418\";\n}\n\n.mdi-image-search::before {\n  content: \"\\F0977\";\n}\n\n.mdi-image-search-outline::before {\n  content: \"\\F0978\";\n}\n\n.mdi-image-size-select-actual::before {\n  content: \"\\F0C8D\";\n}\n\n.mdi-image-size-select-large::before {\n  content: \"\\F0C8E\";\n}\n\n.mdi-image-size-select-small::before {\n  content: \"\\F0C8F\";\n}\n\n.mdi-image-text::before {\n  content: \"\\F160D\";\n}\n\n.mdi-import::before {\n  content: \"\\F02FA\";\n}\n\n.mdi-inbox::before {\n  content: \"\\F0687\";\n}\n\n.mdi-inbox-arrow-down::before {\n  content: \"\\F02FB\";\n}\n\n.mdi-inbox-arrow-down-outline::before {\n  content: \"\\F1270\";\n}\n\n.mdi-inbox-arrow-up::before {\n  content: \"\\F03D1\";\n}\n\n.mdi-inbox-arrow-up-outline::before {\n  content: \"\\F1271\";\n}\n\n.mdi-inbox-full::before {\n  content: \"\\F1272\";\n}\n\n.mdi-inbox-full-outline::before {\n  content: \"\\F1273\";\n}\n\n.mdi-inbox-multiple::before {\n  content: \"\\F08B0\";\n}\n\n.mdi-inbox-multiple-outline::before {\n  content: \"\\F0BA8\";\n}\n\n.mdi-inbox-outline::before {\n  content: \"\\F1274\";\n}\n\n.mdi-inbox-remove::before {\n  content: \"\\F159F\";\n}\n\n.mdi-inbox-remove-outline::before {\n  content: \"\\F15A0\";\n}\n\n.mdi-incognito::before {\n  content: \"\\F05F9\";\n}\n\n.mdi-incognito-circle::before {\n  content: \"\\F1421\";\n}\n\n.mdi-incognito-circle-off::before {\n  content: \"\\F1422\";\n}\n\n.mdi-incognito-off::before {\n  content: \"\\F0075\";\n}\n\n.mdi-infinity::before {\n  content: \"\\F06E4\";\n}\n\n.mdi-information::before {\n  content: \"\\F02FC\";\n}\n\n.mdi-information-outline::before {\n  content: \"\\F02FD\";\n}\n\n.mdi-information-variant::before {\n  content: \"\\F064E\";\n}\n\n.mdi-instagram::before {\n  content: \"\\F02FE\";\n}\n\n.mdi-instrument-triangle::before {\n  content: \"\\F104E\";\n}\n\n.mdi-invert-colors::before {\n  content: \"\\F0301\";\n}\n\n.mdi-invert-colors-off::before {\n  content: \"\\F0E4A\";\n}\n\n.mdi-iobroker::before {\n  content: \"\\F12E8\";\n}\n\n.mdi-ip::before {\n  content: \"\\F0A5F\";\n}\n\n.mdi-ip-network::before {\n  content: \"\\F0A60\";\n}\n\n.mdi-ip-network-outline::before {\n  content: \"\\F0C90\";\n}\n\n.mdi-ipod::before {\n  content: \"\\F0C91\";\n}\n\n.mdi-islam::before {\n  content: \"\\F0979\";\n}\n\n.mdi-island::before {\n  content: \"\\F104F\";\n}\n\n.mdi-iv-bag::before {\n  content: \"\\F10B9\";\n}\n\n.mdi-jabber::before {\n  content: \"\\F0DD5\";\n}\n\n.mdi-jeepney::before {\n  content: \"\\F0302\";\n}\n\n.mdi-jellyfish::before {\n  content: \"\\F0F01\";\n}\n\n.mdi-jellyfish-outline::before {\n  content: \"\\F0F02\";\n}\n\n.mdi-jira::before {\n  content: \"\\F0303\";\n}\n\n.mdi-jquery::before {\n  content: \"\\F087D\";\n}\n\n.mdi-jsfiddle::before {\n  content: \"\\F0304\";\n}\n\n.mdi-judaism::before {\n  content: \"\\F097A\";\n}\n\n.mdi-jump-rope::before {\n  content: \"\\F12FF\";\n}\n\n.mdi-kabaddi::before {\n  content: \"\\F0D87\";\n}\n\n.mdi-kangaroo::before {\n  content: \"\\F1558\";\n}\n\n.mdi-karate::before {\n  content: \"\\F082C\";\n}\n\n.mdi-keg::before {\n  content: \"\\F0305\";\n}\n\n.mdi-kettle::before {\n  content: \"\\F05FA\";\n}\n\n.mdi-kettle-alert::before {\n  content: \"\\F1317\";\n}\n\n.mdi-kettle-alert-outline::before {\n  content: \"\\F1318\";\n}\n\n.mdi-kettle-off::before {\n  content: \"\\F131B\";\n}\n\n.mdi-kettle-off-outline::before {\n  content: \"\\F131C\";\n}\n\n.mdi-kettle-outline::before {\n  content: \"\\F0F56\";\n}\n\n.mdi-kettle-pour-over::before {\n  content: \"\\F173C\";\n}\n\n.mdi-kettle-steam::before {\n  content: \"\\F1319\";\n}\n\n.mdi-kettle-steam-outline::before {\n  content: \"\\F131A\";\n}\n\n.mdi-kettlebell::before {\n  content: \"\\F1300\";\n}\n\n.mdi-key::before {\n  content: \"\\F0306\";\n}\n\n.mdi-key-arrow-right::before {\n  content: \"\\F1312\";\n}\n\n.mdi-key-chain::before {\n  content: \"\\F1574\";\n}\n\n.mdi-key-chain-variant::before {\n  content: \"\\F1575\";\n}\n\n.mdi-key-change::before {\n  content: \"\\F0307\";\n}\n\n.mdi-key-link::before {\n  content: \"\\F119F\";\n}\n\n.mdi-key-minus::before {\n  content: \"\\F0308\";\n}\n\n.mdi-key-outline::before {\n  content: \"\\F0DD6\";\n}\n\n.mdi-key-plus::before {\n  content: \"\\F0309\";\n}\n\n.mdi-key-remove::before {\n  content: \"\\F030A\";\n}\n\n.mdi-key-star::before {\n  content: \"\\F119E\";\n}\n\n.mdi-key-variant::before {\n  content: \"\\F030B\";\n}\n\n.mdi-key-wireless::before {\n  content: \"\\F0FC2\";\n}\n\n.mdi-keyboard::before {\n  content: \"\\F030C\";\n}\n\n.mdi-keyboard-backspace::before {\n  content: \"\\F030D\";\n}\n\n.mdi-keyboard-caps::before {\n  content: \"\\F030E\";\n}\n\n.mdi-keyboard-close::before {\n  content: \"\\F030F\";\n}\n\n.mdi-keyboard-esc::before {\n  content: \"\\F12B7\";\n}\n\n.mdi-keyboard-f1::before {\n  content: \"\\F12AB\";\n}\n\n.mdi-keyboard-f10::before {\n  content: \"\\F12B4\";\n}\n\n.mdi-keyboard-f11::before {\n  content: \"\\F12B5\";\n}\n\n.mdi-keyboard-f12::before {\n  content: \"\\F12B6\";\n}\n\n.mdi-keyboard-f2::before {\n  content: \"\\F12AC\";\n}\n\n.mdi-keyboard-f3::before {\n  content: \"\\F12AD\";\n}\n\n.mdi-keyboard-f4::before {\n  content: \"\\F12AE\";\n}\n\n.mdi-keyboard-f5::before {\n  content: \"\\F12AF\";\n}\n\n.mdi-keyboard-f6::before {\n  content: \"\\F12B0\";\n}\n\n.mdi-keyboard-f7::before {\n  content: \"\\F12B1\";\n}\n\n.mdi-keyboard-f8::before {\n  content: \"\\F12B2\";\n}\n\n.mdi-keyboard-f9::before {\n  content: \"\\F12B3\";\n}\n\n.mdi-keyboard-off::before {\n  content: \"\\F0310\";\n}\n\n.mdi-keyboard-off-outline::before {\n  content: \"\\F0E4B\";\n}\n\n.mdi-keyboard-outline::before {\n  content: \"\\F097B\";\n}\n\n.mdi-keyboard-return::before {\n  content: \"\\F0311\";\n}\n\n.mdi-keyboard-settings::before {\n  content: \"\\F09F9\";\n}\n\n.mdi-keyboard-settings-outline::before {\n  content: \"\\F09FA\";\n}\n\n.mdi-keyboard-space::before {\n  content: \"\\F1050\";\n}\n\n.mdi-keyboard-tab::before {\n  content: \"\\F0312\";\n}\n\n.mdi-keyboard-variant::before {\n  content: \"\\F0313\";\n}\n\n.mdi-khanda::before {\n  content: \"\\F10FD\";\n}\n\n.mdi-kickstarter::before {\n  content: \"\\F0745\";\n}\n\n.mdi-klingon::before {\n  content: \"\\F135B\";\n}\n\n.mdi-knife::before {\n  content: \"\\F09FB\";\n}\n\n.mdi-knife-military::before {\n  content: \"\\F09FC\";\n}\n\n.mdi-koala::before {\n  content: \"\\F173F\";\n}\n\n.mdi-kodi::before {\n  content: \"\\F0314\";\n}\n\n.mdi-kubernetes::before {\n  content: \"\\F10FE\";\n}\n\n.mdi-label::before {\n  content: \"\\F0315\";\n}\n\n.mdi-label-multiple::before {\n  content: \"\\F1375\";\n}\n\n.mdi-label-multiple-outline::before {\n  content: \"\\F1376\";\n}\n\n.mdi-label-off::before {\n  content: \"\\F0ACB\";\n}\n\n.mdi-label-off-outline::before {\n  content: \"\\F0ACC\";\n}\n\n.mdi-label-outline::before {\n  content: \"\\F0316\";\n}\n\n.mdi-label-percent::before {\n  content: \"\\F12EA\";\n}\n\n.mdi-label-percent-outline::before {\n  content: \"\\F12EB\";\n}\n\n.mdi-label-variant::before {\n  content: \"\\F0ACD\";\n}\n\n.mdi-label-variant-outline::before {\n  content: \"\\F0ACE\";\n}\n\n.mdi-ladder::before {\n  content: \"\\F15A2\";\n}\n\n.mdi-ladybug::before {\n  content: \"\\F082D\";\n}\n\n.mdi-lambda::before {\n  content: \"\\F0627\";\n}\n\n.mdi-lamp::before {\n  content: \"\\F06B5\";\n}\n\n.mdi-lamps::before {\n  content: \"\\F1576\";\n}\n\n.mdi-lan::before {\n  content: \"\\F0317\";\n}\n\n.mdi-lan-check::before {\n  content: \"\\F12AA\";\n}\n\n.mdi-lan-connect::before {\n  content: \"\\F0318\";\n}\n\n.mdi-lan-disconnect::before {\n  content: \"\\F0319\";\n}\n\n.mdi-lan-pending::before {\n  content: \"\\F031A\";\n}\n\n.mdi-language-c::before {\n  content: \"\\F0671\";\n}\n\n.mdi-language-cpp::before {\n  content: \"\\F0672\";\n}\n\n.mdi-language-csharp::before {\n  content: \"\\F031B\";\n}\n\n.mdi-language-css3::before {\n  content: \"\\F031C\";\n}\n\n.mdi-language-fortran::before {\n  content: \"\\F121A\";\n}\n\n.mdi-language-go::before {\n  content: \"\\F07D3\";\n}\n\n.mdi-language-haskell::before {\n  content: \"\\F0C92\";\n}\n\n.mdi-language-html5::before {\n  content: \"\\F031D\";\n}\n\n.mdi-language-java::before {\n  content: \"\\F0B37\";\n}\n\n.mdi-language-javascript::before {\n  content: \"\\F031E\";\n}\n\n.mdi-language-kotlin::before {\n  content: \"\\F1219\";\n}\n\n.mdi-language-lua::before {\n  content: \"\\F08B1\";\n}\n\n.mdi-language-markdown::before {\n  content: \"\\F0354\";\n}\n\n.mdi-language-markdown-outline::before {\n  content: \"\\F0F5B\";\n}\n\n.mdi-language-php::before {\n  content: \"\\F031F\";\n}\n\n.mdi-language-python::before {\n  content: \"\\F0320\";\n}\n\n.mdi-language-r::before {\n  content: \"\\F07D4\";\n}\n\n.mdi-language-ruby::before {\n  content: \"\\F0D2D\";\n}\n\n.mdi-language-ruby-on-rails::before {\n  content: \"\\F0ACF\";\n}\n\n.mdi-language-rust::before {\n  content: \"\\F1617\";\n}\n\n.mdi-language-swift::before {\n  content: \"\\F06E5\";\n}\n\n.mdi-language-typescript::before {\n  content: \"\\F06E6\";\n}\n\n.mdi-language-xaml::before {\n  content: \"\\F0673\";\n}\n\n.mdi-laptop::before {\n  content: \"\\F0322\";\n}\n\n.mdi-laptop-chromebook::before {\n  content: \"\\F0323\";\n}\n\n.mdi-laptop-mac::before {\n  content: \"\\F0324\";\n}\n\n.mdi-laptop-off::before {\n  content: \"\\F06E7\";\n}\n\n.mdi-laptop-windows::before {\n  content: \"\\F0325\";\n}\n\n.mdi-laravel::before {\n  content: \"\\F0AD0\";\n}\n\n.mdi-laser-pointer::before {\n  content: \"\\F1484\";\n}\n\n.mdi-lasso::before {\n  content: \"\\F0F03\";\n}\n\n.mdi-lastpass::before {\n  content: \"\\F0446\";\n}\n\n.mdi-latitude::before {\n  content: \"\\F0F57\";\n}\n\n.mdi-launch::before {\n  content: \"\\F0327\";\n}\n\n.mdi-lava-lamp::before {\n  content: \"\\F07D5\";\n}\n\n.mdi-layers::before {\n  content: \"\\F0328\";\n}\n\n.mdi-layers-minus::before {\n  content: \"\\F0E4C\";\n}\n\n.mdi-layers-off::before {\n  content: \"\\F0329\";\n}\n\n.mdi-layers-off-outline::before {\n  content: \"\\F09FD\";\n}\n\n.mdi-layers-outline::before {\n  content: \"\\F09FE\";\n}\n\n.mdi-layers-plus::before {\n  content: \"\\F0E4D\";\n}\n\n.mdi-layers-remove::before {\n  content: \"\\F0E4E\";\n}\n\n.mdi-layers-search::before {\n  content: \"\\F1206\";\n}\n\n.mdi-layers-search-outline::before {\n  content: \"\\F1207\";\n}\n\n.mdi-layers-triple::before {\n  content: \"\\F0F58\";\n}\n\n.mdi-layers-triple-outline::before {\n  content: \"\\F0F59\";\n}\n\n.mdi-lead-pencil::before {\n  content: \"\\F064F\";\n}\n\n.mdi-leaf::before {\n  content: \"\\F032A\";\n}\n\n.mdi-leaf-maple::before {\n  content: \"\\F0C93\";\n}\n\n.mdi-leaf-maple-off::before {\n  content: \"\\F12DA\";\n}\n\n.mdi-leaf-off::before {\n  content: \"\\F12D9\";\n}\n\n.mdi-leak::before {\n  content: \"\\F0DD7\";\n}\n\n.mdi-leak-off::before {\n  content: \"\\F0DD8\";\n}\n\n.mdi-led-off::before {\n  content: \"\\F032B\";\n}\n\n.mdi-led-on::before {\n  content: \"\\F032C\";\n}\n\n.mdi-led-outline::before {\n  content: \"\\F032D\";\n}\n\n.mdi-led-strip::before {\n  content: \"\\F07D6\";\n}\n\n.mdi-led-strip-variant::before {\n  content: \"\\F1051\";\n}\n\n.mdi-led-variant-off::before {\n  content: \"\\F032E\";\n}\n\n.mdi-led-variant-on::before {\n  content: \"\\F032F\";\n}\n\n.mdi-led-variant-outline::before {\n  content: \"\\F0330\";\n}\n\n.mdi-leek::before {\n  content: \"\\F117D\";\n}\n\n.mdi-less-than::before {\n  content: \"\\F097C\";\n}\n\n.mdi-less-than-or-equal::before {\n  content: \"\\F097D\";\n}\n\n.mdi-library::before {\n  content: \"\\F0331\";\n}\n\n.mdi-library-shelves::before {\n  content: \"\\F0BA9\";\n}\n\n.mdi-license::before {\n  content: \"\\F0FC3\";\n}\n\n.mdi-lifebuoy::before {\n  content: \"\\F087E\";\n}\n\n.mdi-light-switch::before {\n  content: \"\\F097E\";\n}\n\n.mdi-lightbulb::before {\n  content: \"\\F0335\";\n}\n\n.mdi-lightbulb-cfl::before {\n  content: \"\\F1208\";\n}\n\n.mdi-lightbulb-cfl-off::before {\n  content: \"\\F1209\";\n}\n\n.mdi-lightbulb-cfl-spiral::before {\n  content: \"\\F1275\";\n}\n\n.mdi-lightbulb-cfl-spiral-off::before {\n  content: \"\\F12C3\";\n}\n\n.mdi-lightbulb-group::before {\n  content: \"\\F1253\";\n}\n\n.mdi-lightbulb-group-off::before {\n  content: \"\\F12CD\";\n}\n\n.mdi-lightbulb-group-off-outline::before {\n  content: \"\\F12CE\";\n}\n\n.mdi-lightbulb-group-outline::before {\n  content: \"\\F1254\";\n}\n\n.mdi-lightbulb-multiple::before {\n  content: \"\\F1255\";\n}\n\n.mdi-lightbulb-multiple-off::before {\n  content: \"\\F12CF\";\n}\n\n.mdi-lightbulb-multiple-off-outline::before {\n  content: \"\\F12D0\";\n}\n\n.mdi-lightbulb-multiple-outline::before {\n  content: \"\\F1256\";\n}\n\n.mdi-lightbulb-off::before {\n  content: \"\\F0E4F\";\n}\n\n.mdi-lightbulb-off-outline::before {\n  content: \"\\F0E50\";\n}\n\n.mdi-lightbulb-on::before {\n  content: \"\\F06E8\";\n}\n\n.mdi-lightbulb-on-outline::before {\n  content: \"\\F06E9\";\n}\n\n.mdi-lightbulb-outline::before {\n  content: \"\\F0336\";\n}\n\n.mdi-lighthouse::before {\n  content: \"\\F09FF\";\n}\n\n.mdi-lighthouse-on::before {\n  content: \"\\F0A00\";\n}\n\n.mdi-lightning-bolt::before {\n  content: \"\\F140B\";\n}\n\n.mdi-lightning-bolt-outline::before {\n  content: \"\\F140C\";\n}\n\n.mdi-lingerie::before {\n  content: \"\\F1476\";\n}\n\n.mdi-link::before {\n  content: \"\\F0337\";\n}\n\n.mdi-link-box::before {\n  content: \"\\F0D1A\";\n}\n\n.mdi-link-box-outline::before {\n  content: \"\\F0D1B\";\n}\n\n.mdi-link-box-variant::before {\n  content: \"\\F0D1C\";\n}\n\n.mdi-link-box-variant-outline::before {\n  content: \"\\F0D1D\";\n}\n\n.mdi-link-lock::before {\n  content: \"\\F10BA\";\n}\n\n.mdi-link-off::before {\n  content: \"\\F0338\";\n}\n\n.mdi-link-plus::before {\n  content: \"\\F0C94\";\n}\n\n.mdi-link-variant::before {\n  content: \"\\F0339\";\n}\n\n.mdi-link-variant-minus::before {\n  content: \"\\F10FF\";\n}\n\n.mdi-link-variant-off::before {\n  content: \"\\F033A\";\n}\n\n.mdi-link-variant-plus::before {\n  content: \"\\F1100\";\n}\n\n.mdi-link-variant-remove::before {\n  content: \"\\F1101\";\n}\n\n.mdi-linkedin::before {\n  content: \"\\F033B\";\n}\n\n.mdi-linux::before {\n  content: \"\\F033D\";\n}\n\n.mdi-linux-mint::before {\n  content: \"\\F08ED\";\n}\n\n.mdi-lipstick::before {\n  content: \"\\F13B5\";\n}\n\n.mdi-list-status::before {\n  content: \"\\F15AB\";\n}\n\n.mdi-litecoin::before {\n  content: \"\\F0A61\";\n}\n\n.mdi-loading::before {\n  content: \"\\F0772\";\n}\n\n.mdi-location-enter::before {\n  content: \"\\F0FC4\";\n}\n\n.mdi-location-exit::before {\n  content: \"\\F0FC5\";\n}\n\n.mdi-lock::before {\n  content: \"\\F033E\";\n}\n\n.mdi-lock-alert::before {\n  content: \"\\F08EE\";\n}\n\n.mdi-lock-alert-outline::before {\n  content: \"\\F15D1\";\n}\n\n.mdi-lock-check::before {\n  content: \"\\F139A\";\n}\n\n.mdi-lock-check-outline::before {\n  content: \"\\F16A8\";\n}\n\n.mdi-lock-clock::before {\n  content: \"\\F097F\";\n}\n\n.mdi-lock-minus::before {\n  content: \"\\F16A9\";\n}\n\n.mdi-lock-minus-outline::before {\n  content: \"\\F16AA\";\n}\n\n.mdi-lock-off::before {\n  content: \"\\F1671\";\n}\n\n.mdi-lock-off-outline::before {\n  content: \"\\F1672\";\n}\n\n.mdi-lock-open::before {\n  content: \"\\F033F\";\n}\n\n.mdi-lock-open-alert::before {\n  content: \"\\F139B\";\n}\n\n.mdi-lock-open-alert-outline::before {\n  content: \"\\F15D2\";\n}\n\n.mdi-lock-open-check::before {\n  content: \"\\F139C\";\n}\n\n.mdi-lock-open-check-outline::before {\n  content: \"\\F16AB\";\n}\n\n.mdi-lock-open-minus::before {\n  content: \"\\F16AC\";\n}\n\n.mdi-lock-open-minus-outline::before {\n  content: \"\\F16AD\";\n}\n\n.mdi-lock-open-outline::before {\n  content: \"\\F0340\";\n}\n\n.mdi-lock-open-plus::before {\n  content: \"\\F16AE\";\n}\n\n.mdi-lock-open-plus-outline::before {\n  content: \"\\F16AF\";\n}\n\n.mdi-lock-open-remove::before {\n  content: \"\\F16B0\";\n}\n\n.mdi-lock-open-remove-outline::before {\n  content: \"\\F16B1\";\n}\n\n.mdi-lock-open-variant::before {\n  content: \"\\F0FC6\";\n}\n\n.mdi-lock-open-variant-outline::before {\n  content: \"\\F0FC7\";\n}\n\n.mdi-lock-outline::before {\n  content: \"\\F0341\";\n}\n\n.mdi-lock-pattern::before {\n  content: \"\\F06EA\";\n}\n\n.mdi-lock-plus::before {\n  content: \"\\F05FB\";\n}\n\n.mdi-lock-plus-outline::before {\n  content: \"\\F16B2\";\n}\n\n.mdi-lock-question::before {\n  content: \"\\F08EF\";\n}\n\n.mdi-lock-remove::before {\n  content: \"\\F16B3\";\n}\n\n.mdi-lock-remove-outline::before {\n  content: \"\\F16B4\";\n}\n\n.mdi-lock-reset::before {\n  content: \"\\F0773\";\n}\n\n.mdi-lock-smart::before {\n  content: \"\\F08B2\";\n}\n\n.mdi-locker::before {\n  content: \"\\F07D7\";\n}\n\n.mdi-locker-multiple::before {\n  content: \"\\F07D8\";\n}\n\n.mdi-login::before {\n  content: \"\\F0342\";\n}\n\n.mdi-login-variant::before {\n  content: \"\\F05FC\";\n}\n\n.mdi-logout::before {\n  content: \"\\F0343\";\n}\n\n.mdi-logout-variant::before {\n  content: \"\\F05FD\";\n}\n\n.mdi-longitude::before {\n  content: \"\\F0F5A\";\n}\n\n.mdi-looks::before {\n  content: \"\\F0344\";\n}\n\n.mdi-lotion::before {\n  content: \"\\F1582\";\n}\n\n.mdi-lotion-outline::before {\n  content: \"\\F1583\";\n}\n\n.mdi-lotion-plus::before {\n  content: \"\\F1584\";\n}\n\n.mdi-lotion-plus-outline::before {\n  content: \"\\F1585\";\n}\n\n.mdi-loupe::before {\n  content: \"\\F0345\";\n}\n\n.mdi-lumx::before {\n  content: \"\\F0346\";\n}\n\n.mdi-lungs::before {\n  content: \"\\F1084\";\n}\n\n.mdi-magnet::before {\n  content: \"\\F0347\";\n}\n\n.mdi-magnet-on::before {\n  content: \"\\F0348\";\n}\n\n.mdi-magnify::before {\n  content: \"\\F0349\";\n}\n\n.mdi-magnify-close::before {\n  content: \"\\F0980\";\n}\n\n.mdi-magnify-minus::before {\n  content: \"\\F034A\";\n}\n\n.mdi-magnify-minus-cursor::before {\n  content: \"\\F0A62\";\n}\n\n.mdi-magnify-minus-outline::before {\n  content: \"\\F06EC\";\n}\n\n.mdi-magnify-plus::before {\n  content: \"\\F034B\";\n}\n\n.mdi-magnify-plus-cursor::before {\n  content: \"\\F0A63\";\n}\n\n.mdi-magnify-plus-outline::before {\n  content: \"\\F06ED\";\n}\n\n.mdi-magnify-remove-cursor::before {\n  content: \"\\F120C\";\n}\n\n.mdi-magnify-remove-outline::before {\n  content: \"\\F120D\";\n}\n\n.mdi-magnify-scan::before {\n  content: \"\\F1276\";\n}\n\n.mdi-mail::before {\n  content: \"\\F0EBB\";\n}\n\n.mdi-mailbox::before {\n  content: \"\\F06EE\";\n}\n\n.mdi-mailbox-open::before {\n  content: \"\\F0D88\";\n}\n\n.mdi-mailbox-open-outline::before {\n  content: \"\\F0D89\";\n}\n\n.mdi-mailbox-open-up::before {\n  content: \"\\F0D8A\";\n}\n\n.mdi-mailbox-open-up-outline::before {\n  content: \"\\F0D8B\";\n}\n\n.mdi-mailbox-outline::before {\n  content: \"\\F0D8C\";\n}\n\n.mdi-mailbox-up::before {\n  content: \"\\F0D8D\";\n}\n\n.mdi-mailbox-up-outline::before {\n  content: \"\\F0D8E\";\n}\n\n.mdi-manjaro::before {\n  content: \"\\F160A\";\n}\n\n.mdi-map::before {\n  content: \"\\F034D\";\n}\n\n.mdi-map-check::before {\n  content: \"\\F0EBC\";\n}\n\n.mdi-map-check-outline::before {\n  content: \"\\F0EBD\";\n}\n\n.mdi-map-clock::before {\n  content: \"\\F0D1E\";\n}\n\n.mdi-map-clock-outline::before {\n  content: \"\\F0D1F\";\n}\n\n.mdi-map-legend::before {\n  content: \"\\F0A01\";\n}\n\n.mdi-map-marker::before {\n  content: \"\\F034E\";\n}\n\n.mdi-map-marker-alert::before {\n  content: \"\\F0F05\";\n}\n\n.mdi-map-marker-alert-outline::before {\n  content: \"\\F0F06\";\n}\n\n.mdi-map-marker-check::before {\n  content: \"\\F0C95\";\n}\n\n.mdi-map-marker-check-outline::before {\n  content: \"\\F12FB\";\n}\n\n.mdi-map-marker-circle::before {\n  content: \"\\F034F\";\n}\n\n.mdi-map-marker-distance::before {\n  content: \"\\F08F0\";\n}\n\n.mdi-map-marker-down::before {\n  content: \"\\F1102\";\n}\n\n.mdi-map-marker-left::before {\n  content: \"\\F12DB\";\n}\n\n.mdi-map-marker-left-outline::before {\n  content: \"\\F12DD\";\n}\n\n.mdi-map-marker-minus::before {\n  content: \"\\F0650\";\n}\n\n.mdi-map-marker-minus-outline::before {\n  content: \"\\F12F9\";\n}\n\n.mdi-map-marker-multiple::before {\n  content: \"\\F0350\";\n}\n\n.mdi-map-marker-multiple-outline::before {\n  content: \"\\F1277\";\n}\n\n.mdi-map-marker-off::before {\n  content: \"\\F0351\";\n}\n\n.mdi-map-marker-off-outline::before {\n  content: \"\\F12FD\";\n}\n\n.mdi-map-marker-outline::before {\n  content: \"\\F07D9\";\n}\n\n.mdi-map-marker-path::before {\n  content: \"\\F0D20\";\n}\n\n.mdi-map-marker-plus::before {\n  content: \"\\F0651\";\n}\n\n.mdi-map-marker-plus-outline::before {\n  content: \"\\F12F8\";\n}\n\n.mdi-map-marker-question::before {\n  content: \"\\F0F07\";\n}\n\n.mdi-map-marker-question-outline::before {\n  content: \"\\F0F08\";\n}\n\n.mdi-map-marker-radius::before {\n  content: \"\\F0352\";\n}\n\n.mdi-map-marker-radius-outline::before {\n  content: \"\\F12FC\";\n}\n\n.mdi-map-marker-remove::before {\n  content: \"\\F0F09\";\n}\n\n.mdi-map-marker-remove-outline::before {\n  content: \"\\F12FA\";\n}\n\n.mdi-map-marker-remove-variant::before {\n  content: \"\\F0F0A\";\n}\n\n.mdi-map-marker-right::before {\n  content: \"\\F12DC\";\n}\n\n.mdi-map-marker-right-outline::before {\n  content: \"\\F12DE\";\n}\n\n.mdi-map-marker-star::before {\n  content: \"\\F1608\";\n}\n\n.mdi-map-marker-star-outline::before {\n  content: \"\\F1609\";\n}\n\n.mdi-map-marker-up::before {\n  content: \"\\F1103\";\n}\n\n.mdi-map-minus::before {\n  content: \"\\F0981\";\n}\n\n.mdi-map-outline::before {\n  content: \"\\F0982\";\n}\n\n.mdi-map-plus::before {\n  content: \"\\F0983\";\n}\n\n.mdi-map-search::before {\n  content: \"\\F0984\";\n}\n\n.mdi-map-search-outline::before {\n  content: \"\\F0985\";\n}\n\n.mdi-mapbox::before {\n  content: \"\\F0BAA\";\n}\n\n.mdi-margin::before {\n  content: \"\\F0353\";\n}\n\n.mdi-marker::before {\n  content: \"\\F0652\";\n}\n\n.mdi-marker-cancel::before {\n  content: \"\\F0DD9\";\n}\n\n.mdi-marker-check::before {\n  content: \"\\F0355\";\n}\n\n.mdi-mastodon::before {\n  content: \"\\F0AD1\";\n}\n\n.mdi-material-design::before {\n  content: \"\\F0986\";\n}\n\n.mdi-material-ui::before {\n  content: \"\\F0357\";\n}\n\n.mdi-math-compass::before {\n  content: \"\\F0358\";\n}\n\n.mdi-math-cos::before {\n  content: \"\\F0C96\";\n}\n\n.mdi-math-integral::before {\n  content: \"\\F0FC8\";\n}\n\n.mdi-math-integral-box::before {\n  content: \"\\F0FC9\";\n}\n\n.mdi-math-log::before {\n  content: \"\\F1085\";\n}\n\n.mdi-math-norm::before {\n  content: \"\\F0FCA\";\n}\n\n.mdi-math-norm-box::before {\n  content: \"\\F0FCB\";\n}\n\n.mdi-math-sin::before {\n  content: \"\\F0C97\";\n}\n\n.mdi-math-tan::before {\n  content: \"\\F0C98\";\n}\n\n.mdi-matrix::before {\n  content: \"\\F0628\";\n}\n\n.mdi-medal::before {\n  content: \"\\F0987\";\n}\n\n.mdi-medal-outline::before {\n  content: \"\\F1326\";\n}\n\n.mdi-medical-bag::before {\n  content: \"\\F06EF\";\n}\n\n.mdi-meditation::before {\n  content: \"\\F117B\";\n}\n\n.mdi-memory::before {\n  content: \"\\F035B\";\n}\n\n.mdi-menu::before {\n  content: \"\\F035C\";\n}\n\n.mdi-menu-down::before {\n  content: \"\\F035D\";\n}\n\n.mdi-menu-down-outline::before {\n  content: \"\\F06B6\";\n}\n\n.mdi-menu-left::before {\n  content: \"\\F035E\";\n}\n\n.mdi-menu-left-outline::before {\n  content: \"\\F0A02\";\n}\n\n.mdi-menu-open::before {\n  content: \"\\F0BAB\";\n}\n\n.mdi-menu-right::before {\n  content: \"\\F035F\";\n}\n\n.mdi-menu-right-outline::before {\n  content: \"\\F0A03\";\n}\n\n.mdi-menu-swap::before {\n  content: \"\\F0A64\";\n}\n\n.mdi-menu-swap-outline::before {\n  content: \"\\F0A65\";\n}\n\n.mdi-menu-up::before {\n  content: \"\\F0360\";\n}\n\n.mdi-menu-up-outline::before {\n  content: \"\\F06B7\";\n}\n\n.mdi-merge::before {\n  content: \"\\F0F5C\";\n}\n\n.mdi-message::before {\n  content: \"\\F0361\";\n}\n\n.mdi-message-alert::before {\n  content: \"\\F0362\";\n}\n\n.mdi-message-alert-outline::before {\n  content: \"\\F0A04\";\n}\n\n.mdi-message-arrow-left::before {\n  content: \"\\F12F2\";\n}\n\n.mdi-message-arrow-left-outline::before {\n  content: \"\\F12F3\";\n}\n\n.mdi-message-arrow-right::before {\n  content: \"\\F12F4\";\n}\n\n.mdi-message-arrow-right-outline::before {\n  content: \"\\F12F5\";\n}\n\n.mdi-message-bookmark::before {\n  content: \"\\F15AC\";\n}\n\n.mdi-message-bookmark-outline::before {\n  content: \"\\F15AD\";\n}\n\n.mdi-message-bulleted::before {\n  content: \"\\F06A2\";\n}\n\n.mdi-message-bulleted-off::before {\n  content: \"\\F06A3\";\n}\n\n.mdi-message-cog::before {\n  content: \"\\F06F1\";\n}\n\n.mdi-message-cog-outline::before {\n  content: \"\\F1172\";\n}\n\n.mdi-message-draw::before {\n  content: \"\\F0363\";\n}\n\n.mdi-message-flash::before {\n  content: \"\\F15A9\";\n}\n\n.mdi-message-flash-outline::before {\n  content: \"\\F15AA\";\n}\n\n.mdi-message-image::before {\n  content: \"\\F0364\";\n}\n\n.mdi-message-image-outline::before {\n  content: \"\\F116C\";\n}\n\n.mdi-message-lock::before {\n  content: \"\\F0FCC\";\n}\n\n.mdi-message-lock-outline::before {\n  content: \"\\F116D\";\n}\n\n.mdi-message-minus::before {\n  content: \"\\F116E\";\n}\n\n.mdi-message-minus-outline::before {\n  content: \"\\F116F\";\n}\n\n.mdi-message-off::before {\n  content: \"\\F164D\";\n}\n\n.mdi-message-off-outline::before {\n  content: \"\\F164E\";\n}\n\n.mdi-message-outline::before {\n  content: \"\\F0365\";\n}\n\n.mdi-message-plus::before {\n  content: \"\\F0653\";\n}\n\n.mdi-message-plus-outline::before {\n  content: \"\\F10BB\";\n}\n\n.mdi-message-processing::before {\n  content: \"\\F0366\";\n}\n\n.mdi-message-processing-outline::before {\n  content: \"\\F1170\";\n}\n\n.mdi-message-question::before {\n  content: \"\\F173A\";\n}\n\n.mdi-message-question-outline::before {\n  content: \"\\F173B\";\n}\n\n.mdi-message-reply::before {\n  content: \"\\F0367\";\n}\n\n.mdi-message-reply-outline::before {\n  content: \"\\F173D\";\n}\n\n.mdi-message-reply-text::before {\n  content: \"\\F0368\";\n}\n\n.mdi-message-reply-text-outline::before {\n  content: \"\\F173E\";\n}\n\n.mdi-message-settings::before {\n  content: \"\\F06F0\";\n}\n\n.mdi-message-settings-outline::before {\n  content: \"\\F1171\";\n}\n\n.mdi-message-text::before {\n  content: \"\\F0369\";\n}\n\n.mdi-message-text-clock::before {\n  content: \"\\F1173\";\n}\n\n.mdi-message-text-clock-outline::before {\n  content: \"\\F1174\";\n}\n\n.mdi-message-text-lock::before {\n  content: \"\\F0FCD\";\n}\n\n.mdi-message-text-lock-outline::before {\n  content: \"\\F1175\";\n}\n\n.mdi-message-text-outline::before {\n  content: \"\\F036A\";\n}\n\n.mdi-message-video::before {\n  content: \"\\F036B\";\n}\n\n.mdi-meteor::before {\n  content: \"\\F0629\";\n}\n\n.mdi-metronome::before {\n  content: \"\\F07DA\";\n}\n\n.mdi-metronome-tick::before {\n  content: \"\\F07DB\";\n}\n\n.mdi-micro-sd::before {\n  content: \"\\F07DC\";\n}\n\n.mdi-microphone::before {\n  content: \"\\F036C\";\n}\n\n.mdi-microphone-minus::before {\n  content: \"\\F08B3\";\n}\n\n.mdi-microphone-off::before {\n  content: \"\\F036D\";\n}\n\n.mdi-microphone-outline::before {\n  content: \"\\F036E\";\n}\n\n.mdi-microphone-plus::before {\n  content: \"\\F08B4\";\n}\n\n.mdi-microphone-settings::before {\n  content: \"\\F036F\";\n}\n\n.mdi-microphone-variant::before {\n  content: \"\\F0370\";\n}\n\n.mdi-microphone-variant-off::before {\n  content: \"\\F0371\";\n}\n\n.mdi-microscope::before {\n  content: \"\\F0654\";\n}\n\n.mdi-microsoft::before {\n  content: \"\\F0372\";\n}\n\n.mdi-microsoft-access::before {\n  content: \"\\F138E\";\n}\n\n.mdi-microsoft-azure::before {\n  content: \"\\F0805\";\n}\n\n.mdi-microsoft-azure-devops::before {\n  content: \"\\F0FD5\";\n}\n\n.mdi-microsoft-bing::before {\n  content: \"\\F00A4\";\n}\n\n.mdi-microsoft-dynamics-365::before {\n  content: \"\\F0988\";\n}\n\n.mdi-microsoft-edge::before {\n  content: \"\\F01E9\";\n}\n\n.mdi-microsoft-edge-legacy::before {\n  content: \"\\F1250\";\n}\n\n.mdi-microsoft-excel::before {\n  content: \"\\F138F\";\n}\n\n.mdi-microsoft-internet-explorer::before {\n  content: \"\\F0300\";\n}\n\n.mdi-microsoft-office::before {\n  content: \"\\F03C6\";\n}\n\n.mdi-microsoft-onedrive::before {\n  content: \"\\F03CA\";\n}\n\n.mdi-microsoft-onenote::before {\n  content: \"\\F0747\";\n}\n\n.mdi-microsoft-outlook::before {\n  content: \"\\F0D22\";\n}\n\n.mdi-microsoft-powerpoint::before {\n  content: \"\\F1390\";\n}\n\n.mdi-microsoft-sharepoint::before {\n  content: \"\\F1391\";\n}\n\n.mdi-microsoft-teams::before {\n  content: \"\\F02BB\";\n}\n\n.mdi-microsoft-visual-studio::before {\n  content: \"\\F0610\";\n}\n\n.mdi-microsoft-visual-studio-code::before {\n  content: \"\\F0A1E\";\n}\n\n.mdi-microsoft-windows::before {\n  content: \"\\F05B3\";\n}\n\n.mdi-microsoft-windows-classic::before {\n  content: \"\\F0A21\";\n}\n\n.mdi-microsoft-word::before {\n  content: \"\\F1392\";\n}\n\n.mdi-microsoft-xbox::before {\n  content: \"\\F05B9\";\n}\n\n.mdi-microsoft-xbox-controller::before {\n  content: \"\\F05BA\";\n}\n\n.mdi-microsoft-xbox-controller-battery-alert::before {\n  content: \"\\F074B\";\n}\n\n.mdi-microsoft-xbox-controller-battery-charging::before {\n  content: \"\\F0A22\";\n}\n\n.mdi-microsoft-xbox-controller-battery-empty::before {\n  content: \"\\F074C\";\n}\n\n.mdi-microsoft-xbox-controller-battery-full::before {\n  content: \"\\F074D\";\n}\n\n.mdi-microsoft-xbox-controller-battery-low::before {\n  content: \"\\F074E\";\n}\n\n.mdi-microsoft-xbox-controller-battery-medium::before {\n  content: \"\\F074F\";\n}\n\n.mdi-microsoft-xbox-controller-battery-unknown::before {\n  content: \"\\F0750\";\n}\n\n.mdi-microsoft-xbox-controller-menu::before {\n  content: \"\\F0E6F\";\n}\n\n.mdi-microsoft-xbox-controller-off::before {\n  content: \"\\F05BB\";\n}\n\n.mdi-microsoft-xbox-controller-view::before {\n  content: \"\\F0E70\";\n}\n\n.mdi-microsoft-yammer::before {\n  content: \"\\F0789\";\n}\n\n.mdi-microwave::before {\n  content: \"\\F0C99\";\n}\n\n.mdi-microwave-off::before {\n  content: \"\\F1423\";\n}\n\n.mdi-middleware::before {\n  content: \"\\F0F5D\";\n}\n\n.mdi-middleware-outline::before {\n  content: \"\\F0F5E\";\n}\n\n.mdi-midi::before {\n  content: \"\\F08F1\";\n}\n\n.mdi-midi-port::before {\n  content: \"\\F08F2\";\n}\n\n.mdi-mine::before {\n  content: \"\\F0DDA\";\n}\n\n.mdi-minecraft::before {\n  content: \"\\F0373\";\n}\n\n.mdi-mini-sd::before {\n  content: \"\\F0A05\";\n}\n\n.mdi-minidisc::before {\n  content: \"\\F0A06\";\n}\n\n.mdi-minus::before {\n  content: \"\\F0374\";\n}\n\n.mdi-minus-box::before {\n  content: \"\\F0375\";\n}\n\n.mdi-minus-box-multiple::before {\n  content: \"\\F1141\";\n}\n\n.mdi-minus-box-multiple-outline::before {\n  content: \"\\F1142\";\n}\n\n.mdi-minus-box-outline::before {\n  content: \"\\F06F2\";\n}\n\n.mdi-minus-circle::before {\n  content: \"\\F0376\";\n}\n\n.mdi-minus-circle-multiple::before {\n  content: \"\\F035A\";\n}\n\n.mdi-minus-circle-multiple-outline::before {\n  content: \"\\F0AD3\";\n}\n\n.mdi-minus-circle-off::before {\n  content: \"\\F1459\";\n}\n\n.mdi-minus-circle-off-outline::before {\n  content: \"\\F145A\";\n}\n\n.mdi-minus-circle-outline::before {\n  content: \"\\F0377\";\n}\n\n.mdi-minus-network::before {\n  content: \"\\F0378\";\n}\n\n.mdi-minus-network-outline::before {\n  content: \"\\F0C9A\";\n}\n\n.mdi-minus-thick::before {\n  content: \"\\F1639\";\n}\n\n.mdi-mirror::before {\n  content: \"\\F11FD\";\n}\n\n.mdi-mixed-martial-arts::before {\n  content: \"\\F0D8F\";\n}\n\n.mdi-mixed-reality::before {\n  content: \"\\F087F\";\n}\n\n.mdi-molecule::before {\n  content: \"\\F0BAC\";\n}\n\n.mdi-molecule-co::before {\n  content: \"\\F12FE\";\n}\n\n.mdi-molecule-co2::before {\n  content: \"\\F07E4\";\n}\n\n.mdi-monitor::before {\n  content: \"\\F0379\";\n}\n\n.mdi-monitor-cellphone::before {\n  content: \"\\F0989\";\n}\n\n.mdi-monitor-cellphone-star::before {\n  content: \"\\F098A\";\n}\n\n.mdi-monitor-clean::before {\n  content: \"\\F1104\";\n}\n\n.mdi-monitor-dashboard::before {\n  content: \"\\F0A07\";\n}\n\n.mdi-monitor-edit::before {\n  content: \"\\F12C6\";\n}\n\n.mdi-monitor-eye::before {\n  content: \"\\F13B4\";\n}\n\n.mdi-monitor-lock::before {\n  content: \"\\F0DDB\";\n}\n\n.mdi-monitor-multiple::before {\n  content: \"\\F037A\";\n}\n\n.mdi-monitor-off::before {\n  content: \"\\F0D90\";\n}\n\n.mdi-monitor-screenshot::before {\n  content: \"\\F0E51\";\n}\n\n.mdi-monitor-share::before {\n  content: \"\\F1483\";\n}\n\n.mdi-monitor-speaker::before {\n  content: \"\\F0F5F\";\n}\n\n.mdi-monitor-speaker-off::before {\n  content: \"\\F0F60\";\n}\n\n.mdi-monitor-star::before {\n  content: \"\\F0DDC\";\n}\n\n.mdi-moon-first-quarter::before {\n  content: \"\\F0F61\";\n}\n\n.mdi-moon-full::before {\n  content: \"\\F0F62\";\n}\n\n.mdi-moon-last-quarter::before {\n  content: \"\\F0F63\";\n}\n\n.mdi-moon-new::before {\n  content: \"\\F0F64\";\n}\n\n.mdi-moon-waning-crescent::before {\n  content: \"\\F0F65\";\n}\n\n.mdi-moon-waning-gibbous::before {\n  content: \"\\F0F66\";\n}\n\n.mdi-moon-waxing-crescent::before {\n  content: \"\\F0F67\";\n}\n\n.mdi-moon-waxing-gibbous::before {\n  content: \"\\F0F68\";\n}\n\n.mdi-moped::before {\n  content: \"\\F1086\";\n}\n\n.mdi-moped-electric::before {\n  content: \"\\F15B7\";\n}\n\n.mdi-moped-electric-outline::before {\n  content: \"\\F15B8\";\n}\n\n.mdi-moped-outline::before {\n  content: \"\\F15B9\";\n}\n\n.mdi-more::before {\n  content: \"\\F037B\";\n}\n\n.mdi-mother-heart::before {\n  content: \"\\F1314\";\n}\n\n.mdi-mother-nurse::before {\n  content: \"\\F0D21\";\n}\n\n.mdi-motion::before {\n  content: \"\\F15B2\";\n}\n\n.mdi-motion-outline::before {\n  content: \"\\F15B3\";\n}\n\n.mdi-motion-pause::before {\n  content: \"\\F1590\";\n}\n\n.mdi-motion-pause-outline::before {\n  content: \"\\F1592\";\n}\n\n.mdi-motion-play::before {\n  content: \"\\F158F\";\n}\n\n.mdi-motion-play-outline::before {\n  content: \"\\F1591\";\n}\n\n.mdi-motion-sensor::before {\n  content: \"\\F0D91\";\n}\n\n.mdi-motion-sensor-off::before {\n  content: \"\\F1435\";\n}\n\n.mdi-motorbike::before {\n  content: \"\\F037C\";\n}\n\n.mdi-motorbike-electric::before {\n  content: \"\\F15BA\";\n}\n\n.mdi-mouse::before {\n  content: \"\\F037D\";\n}\n\n.mdi-mouse-bluetooth::before {\n  content: \"\\F098B\";\n}\n\n.mdi-mouse-move-down::before {\n  content: \"\\F1550\";\n}\n\n.mdi-mouse-move-up::before {\n  content: \"\\F1551\";\n}\n\n.mdi-mouse-move-vertical::before {\n  content: \"\\F1552\";\n}\n\n.mdi-mouse-off::before {\n  content: \"\\F037E\";\n}\n\n.mdi-mouse-variant::before {\n  content: \"\\F037F\";\n}\n\n.mdi-mouse-variant-off::before {\n  content: \"\\F0380\";\n}\n\n.mdi-move-resize::before {\n  content: \"\\F0655\";\n}\n\n.mdi-move-resize-variant::before {\n  content: \"\\F0656\";\n}\n\n.mdi-movie::before {\n  content: \"\\F0381\";\n}\n\n.mdi-movie-check::before {\n  content: \"\\F16F3\";\n}\n\n.mdi-movie-check-outline::before {\n  content: \"\\F16F4\";\n}\n\n.mdi-movie-cog::before {\n  content: \"\\F16F5\";\n}\n\n.mdi-movie-cog-outline::before {\n  content: \"\\F16F6\";\n}\n\n.mdi-movie-edit::before {\n  content: \"\\F1122\";\n}\n\n.mdi-movie-edit-outline::before {\n  content: \"\\F1123\";\n}\n\n.mdi-movie-filter::before {\n  content: \"\\F1124\";\n}\n\n.mdi-movie-filter-outline::before {\n  content: \"\\F1125\";\n}\n\n.mdi-movie-minus::before {\n  content: \"\\F16F7\";\n}\n\n.mdi-movie-minus-outline::before {\n  content: \"\\F16F8\";\n}\n\n.mdi-movie-off::before {\n  content: \"\\F16F9\";\n}\n\n.mdi-movie-off-outline::before {\n  content: \"\\F16FA\";\n}\n\n.mdi-movie-open::before {\n  content: \"\\F0FCE\";\n}\n\n.mdi-movie-open-check::before {\n  content: \"\\F16FB\";\n}\n\n.mdi-movie-open-check-outline::before {\n  content: \"\\F16FC\";\n}\n\n.mdi-movie-open-cog::before {\n  content: \"\\F16FD\";\n}\n\n.mdi-movie-open-cog-outline::before {\n  content: \"\\F16FE\";\n}\n\n.mdi-movie-open-edit::before {\n  content: \"\\F16FF\";\n}\n\n.mdi-movie-open-edit-outline::before {\n  content: \"\\F1700\";\n}\n\n.mdi-movie-open-minus::before {\n  content: \"\\F1701\";\n}\n\n.mdi-movie-open-minus-outline::before {\n  content: \"\\F1702\";\n}\n\n.mdi-movie-open-off::before {\n  content: \"\\F1703\";\n}\n\n.mdi-movie-open-off-outline::before {\n  content: \"\\F1704\";\n}\n\n.mdi-movie-open-outline::before {\n  content: \"\\F0FCF\";\n}\n\n.mdi-movie-open-play::before {\n  content: \"\\F1705\";\n}\n\n.mdi-movie-open-play-outline::before {\n  content: \"\\F1706\";\n}\n\n.mdi-movie-open-plus::before {\n  content: \"\\F1707\";\n}\n\n.mdi-movie-open-plus-outline::before {\n  content: \"\\F1708\";\n}\n\n.mdi-movie-open-remove::before {\n  content: \"\\F1709\";\n}\n\n.mdi-movie-open-remove-outline::before {\n  content: \"\\F170A\";\n}\n\n.mdi-movie-open-settings::before {\n  content: \"\\F170B\";\n}\n\n.mdi-movie-open-settings-outline::before {\n  content: \"\\F170C\";\n}\n\n.mdi-movie-open-star::before {\n  content: \"\\F170D\";\n}\n\n.mdi-movie-open-star-outline::before {\n  content: \"\\F170E\";\n}\n\n.mdi-movie-outline::before {\n  content: \"\\F0DDD\";\n}\n\n.mdi-movie-play::before {\n  content: \"\\F170F\";\n}\n\n.mdi-movie-play-outline::before {\n  content: \"\\F1710\";\n}\n\n.mdi-movie-plus::before {\n  content: \"\\F1711\";\n}\n\n.mdi-movie-plus-outline::before {\n  content: \"\\F1712\";\n}\n\n.mdi-movie-remove::before {\n  content: \"\\F1713\";\n}\n\n.mdi-movie-remove-outline::before {\n  content: \"\\F1714\";\n}\n\n.mdi-movie-roll::before {\n  content: \"\\F07DE\";\n}\n\n.mdi-movie-search::before {\n  content: \"\\F11D2\";\n}\n\n.mdi-movie-search-outline::before {\n  content: \"\\F11D3\";\n}\n\n.mdi-movie-settings::before {\n  content: \"\\F1715\";\n}\n\n.mdi-movie-settings-outline::before {\n  content: \"\\F1716\";\n}\n\n.mdi-movie-star::before {\n  content: \"\\F1717\";\n}\n\n.mdi-movie-star-outline::before {\n  content: \"\\F1718\";\n}\n\n.mdi-mower::before {\n  content: \"\\F166F\";\n}\n\n.mdi-mower-bag::before {\n  content: \"\\F1670\";\n}\n\n.mdi-muffin::before {\n  content: \"\\F098C\";\n}\n\n.mdi-multiplication::before {\n  content: \"\\F0382\";\n}\n\n.mdi-multiplication-box::before {\n  content: \"\\F0383\";\n}\n\n.mdi-mushroom::before {\n  content: \"\\F07DF\";\n}\n\n.mdi-mushroom-off::before {\n  content: \"\\F13FA\";\n}\n\n.mdi-mushroom-off-outline::before {\n  content: \"\\F13FB\";\n}\n\n.mdi-mushroom-outline::before {\n  content: \"\\F07E0\";\n}\n\n.mdi-music::before {\n  content: \"\\F075A\";\n}\n\n.mdi-music-accidental-double-flat::before {\n  content: \"\\F0F69\";\n}\n\n.mdi-music-accidental-double-sharp::before {\n  content: \"\\F0F6A\";\n}\n\n.mdi-music-accidental-flat::before {\n  content: \"\\F0F6B\";\n}\n\n.mdi-music-accidental-natural::before {\n  content: \"\\F0F6C\";\n}\n\n.mdi-music-accidental-sharp::before {\n  content: \"\\F0F6D\";\n}\n\n.mdi-music-box::before {\n  content: \"\\F0384\";\n}\n\n.mdi-music-box-multiple::before {\n  content: \"\\F0333\";\n}\n\n.mdi-music-box-multiple-outline::before {\n  content: \"\\F0F04\";\n}\n\n.mdi-music-box-outline::before {\n  content: \"\\F0385\";\n}\n\n.mdi-music-circle::before {\n  content: \"\\F0386\";\n}\n\n.mdi-music-circle-outline::before {\n  content: \"\\F0AD4\";\n}\n\n.mdi-music-clef-alto::before {\n  content: \"\\F0F6E\";\n}\n\n.mdi-music-clef-bass::before {\n  content: \"\\F0F6F\";\n}\n\n.mdi-music-clef-treble::before {\n  content: \"\\F0F70\";\n}\n\n.mdi-music-note::before {\n  content: \"\\F0387\";\n}\n\n.mdi-music-note-bluetooth::before {\n  content: \"\\F05FE\";\n}\n\n.mdi-music-note-bluetooth-off::before {\n  content: \"\\F05FF\";\n}\n\n.mdi-music-note-eighth::before {\n  content: \"\\F0388\";\n}\n\n.mdi-music-note-eighth-dotted::before {\n  content: \"\\F0F71\";\n}\n\n.mdi-music-note-half::before {\n  content: \"\\F0389\";\n}\n\n.mdi-music-note-half-dotted::before {\n  content: \"\\F0F72\";\n}\n\n.mdi-music-note-off::before {\n  content: \"\\F038A\";\n}\n\n.mdi-music-note-off-outline::before {\n  content: \"\\F0F73\";\n}\n\n.mdi-music-note-outline::before {\n  content: \"\\F0F74\";\n}\n\n.mdi-music-note-plus::before {\n  content: \"\\F0DDE\";\n}\n\n.mdi-music-note-quarter::before {\n  content: \"\\F038B\";\n}\n\n.mdi-music-note-quarter-dotted::before {\n  content: \"\\F0F75\";\n}\n\n.mdi-music-note-sixteenth::before {\n  content: \"\\F038C\";\n}\n\n.mdi-music-note-sixteenth-dotted::before {\n  content: \"\\F0F76\";\n}\n\n.mdi-music-note-whole::before {\n  content: \"\\F038D\";\n}\n\n.mdi-music-note-whole-dotted::before {\n  content: \"\\F0F77\";\n}\n\n.mdi-music-off::before {\n  content: \"\\F075B\";\n}\n\n.mdi-music-rest-eighth::before {\n  content: \"\\F0F78\";\n}\n\n.mdi-music-rest-half::before {\n  content: \"\\F0F79\";\n}\n\n.mdi-music-rest-quarter::before {\n  content: \"\\F0F7A\";\n}\n\n.mdi-music-rest-sixteenth::before {\n  content: \"\\F0F7B\";\n}\n\n.mdi-music-rest-whole::before {\n  content: \"\\F0F7C\";\n}\n\n.mdi-mustache::before {\n  content: \"\\F15DE\";\n}\n\n.mdi-nail::before {\n  content: \"\\F0DDF\";\n}\n\n.mdi-nas::before {\n  content: \"\\F08F3\";\n}\n\n.mdi-nativescript::before {\n  content: \"\\F0880\";\n}\n\n.mdi-nature::before {\n  content: \"\\F038E\";\n}\n\n.mdi-nature-people::before {\n  content: \"\\F038F\";\n}\n\n.mdi-navigation::before {\n  content: \"\\F0390\";\n}\n\n.mdi-navigation-outline::before {\n  content: \"\\F1607\";\n}\n\n.mdi-near-me::before {\n  content: \"\\F05CD\";\n}\n\n.mdi-necklace::before {\n  content: \"\\F0F0B\";\n}\n\n.mdi-needle::before {\n  content: \"\\F0391\";\n}\n\n.mdi-netflix::before {\n  content: \"\\F0746\";\n}\n\n.mdi-network::before {\n  content: \"\\F06F3\";\n}\n\n.mdi-network-off::before {\n  content: \"\\F0C9B\";\n}\n\n.mdi-network-off-outline::before {\n  content: \"\\F0C9C\";\n}\n\n.mdi-network-outline::before {\n  content: \"\\F0C9D\";\n}\n\n.mdi-network-strength-1::before {\n  content: \"\\F08F4\";\n}\n\n.mdi-network-strength-1-alert::before {\n  content: \"\\F08F5\";\n}\n\n.mdi-network-strength-2::before {\n  content: \"\\F08F6\";\n}\n\n.mdi-network-strength-2-alert::before {\n  content: \"\\F08F7\";\n}\n\n.mdi-network-strength-3::before {\n  content: \"\\F08F8\";\n}\n\n.mdi-network-strength-3-alert::before {\n  content: \"\\F08F9\";\n}\n\n.mdi-network-strength-4::before {\n  content: \"\\F08FA\";\n}\n\n.mdi-network-strength-4-alert::before {\n  content: \"\\F08FB\";\n}\n\n.mdi-network-strength-off::before {\n  content: \"\\F08FC\";\n}\n\n.mdi-network-strength-off-outline::before {\n  content: \"\\F08FD\";\n}\n\n.mdi-network-strength-outline::before {\n  content: \"\\F08FE\";\n}\n\n.mdi-new-box::before {\n  content: \"\\F0394\";\n}\n\n.mdi-newspaper::before {\n  content: \"\\F0395\";\n}\n\n.mdi-newspaper-minus::before {\n  content: \"\\F0F0C\";\n}\n\n.mdi-newspaper-plus::before {\n  content: \"\\F0F0D\";\n}\n\n.mdi-newspaper-variant::before {\n  content: \"\\F1001\";\n}\n\n.mdi-newspaper-variant-multiple::before {\n  content: \"\\F1002\";\n}\n\n.mdi-newspaper-variant-multiple-outline::before {\n  content: \"\\F1003\";\n}\n\n.mdi-newspaper-variant-outline::before {\n  content: \"\\F1004\";\n}\n\n.mdi-nfc::before {\n  content: \"\\F0396\";\n}\n\n.mdi-nfc-search-variant::before {\n  content: \"\\F0E53\";\n}\n\n.mdi-nfc-tap::before {\n  content: \"\\F0397\";\n}\n\n.mdi-nfc-variant::before {\n  content: \"\\F0398\";\n}\n\n.mdi-nfc-variant-off::before {\n  content: \"\\F0E54\";\n}\n\n.mdi-ninja::before {\n  content: \"\\F0774\";\n}\n\n.mdi-nintendo-game-boy::before {\n  content: \"\\F1393\";\n}\n\n.mdi-nintendo-switch::before {\n  content: \"\\F07E1\";\n}\n\n.mdi-nintendo-wii::before {\n  content: \"\\F05AB\";\n}\n\n.mdi-nintendo-wiiu::before {\n  content: \"\\F072D\";\n}\n\n.mdi-nix::before {\n  content: \"\\F1105\";\n}\n\n.mdi-nodejs::before {\n  content: \"\\F0399\";\n}\n\n.mdi-noodles::before {\n  content: \"\\F117E\";\n}\n\n.mdi-not-equal::before {\n  content: \"\\F098D\";\n}\n\n.mdi-not-equal-variant::before {\n  content: \"\\F098E\";\n}\n\n.mdi-note::before {\n  content: \"\\F039A\";\n}\n\n.mdi-note-minus::before {\n  content: \"\\F164F\";\n}\n\n.mdi-note-minus-outline::before {\n  content: \"\\F1650\";\n}\n\n.mdi-note-multiple::before {\n  content: \"\\F06B8\";\n}\n\n.mdi-note-multiple-outline::before {\n  content: \"\\F06B9\";\n}\n\n.mdi-note-outline::before {\n  content: \"\\F039B\";\n}\n\n.mdi-note-plus::before {\n  content: \"\\F039C\";\n}\n\n.mdi-note-plus-outline::before {\n  content: \"\\F039D\";\n}\n\n.mdi-note-remove::before {\n  content: \"\\F1651\";\n}\n\n.mdi-note-remove-outline::before {\n  content: \"\\F1652\";\n}\n\n.mdi-note-search::before {\n  content: \"\\F1653\";\n}\n\n.mdi-note-search-outline::before {\n  content: \"\\F1654\";\n}\n\n.mdi-note-text::before {\n  content: \"\\F039E\";\n}\n\n.mdi-note-text-outline::before {\n  content: \"\\F11D7\";\n}\n\n.mdi-notebook::before {\n  content: \"\\F082E\";\n}\n\n.mdi-notebook-check::before {\n  content: \"\\F14F5\";\n}\n\n.mdi-notebook-check-outline::before {\n  content: \"\\F14F6\";\n}\n\n.mdi-notebook-edit::before {\n  content: \"\\F14E7\";\n}\n\n.mdi-notebook-edit-outline::before {\n  content: \"\\F14E9\";\n}\n\n.mdi-notebook-minus::before {\n  content: \"\\F1610\";\n}\n\n.mdi-notebook-minus-outline::before {\n  content: \"\\F1611\";\n}\n\n.mdi-notebook-multiple::before {\n  content: \"\\F0E55\";\n}\n\n.mdi-notebook-outline::before {\n  content: \"\\F0EBF\";\n}\n\n.mdi-notebook-plus::before {\n  content: \"\\F1612\";\n}\n\n.mdi-notebook-plus-outline::before {\n  content: \"\\F1613\";\n}\n\n.mdi-notebook-remove::before {\n  content: \"\\F1614\";\n}\n\n.mdi-notebook-remove-outline::before {\n  content: \"\\F1615\";\n}\n\n.mdi-notification-clear-all::before {\n  content: \"\\F039F\";\n}\n\n.mdi-npm::before {\n  content: \"\\F06F7\";\n}\n\n.mdi-nuke::before {\n  content: \"\\F06A4\";\n}\n\n.mdi-null::before {\n  content: \"\\F07E2\";\n}\n\n.mdi-numeric::before {\n  content: \"\\F03A0\";\n}\n\n.mdi-numeric-0::before {\n  content: \"\\F0B39\";\n}\n\n.mdi-numeric-0-box::before {\n  content: \"\\F03A1\";\n}\n\n.mdi-numeric-0-box-multiple::before {\n  content: \"\\F0F0E\";\n}\n\n.mdi-numeric-0-box-multiple-outline::before {\n  content: \"\\F03A2\";\n}\n\n.mdi-numeric-0-box-outline::before {\n  content: \"\\F03A3\";\n}\n\n.mdi-numeric-0-circle::before {\n  content: \"\\F0C9E\";\n}\n\n.mdi-numeric-0-circle-outline::before {\n  content: \"\\F0C9F\";\n}\n\n.mdi-numeric-1::before {\n  content: \"\\F0B3A\";\n}\n\n.mdi-numeric-1-box::before {\n  content: \"\\F03A4\";\n}\n\n.mdi-numeric-1-box-multiple::before {\n  content: \"\\F0F0F\";\n}\n\n.mdi-numeric-1-box-multiple-outline::before {\n  content: \"\\F03A5\";\n}\n\n.mdi-numeric-1-box-outline::before {\n  content: \"\\F03A6\";\n}\n\n.mdi-numeric-1-circle::before {\n  content: \"\\F0CA0\";\n}\n\n.mdi-numeric-1-circle-outline::before {\n  content: \"\\F0CA1\";\n}\n\n.mdi-numeric-10::before {\n  content: \"\\F0FE9\";\n}\n\n.mdi-numeric-10-box::before {\n  content: \"\\F0F7D\";\n}\n\n.mdi-numeric-10-box-multiple::before {\n  content: \"\\F0FEA\";\n}\n\n.mdi-numeric-10-box-multiple-outline::before {\n  content: \"\\F0FEB\";\n}\n\n.mdi-numeric-10-box-outline::before {\n  content: \"\\F0F7E\";\n}\n\n.mdi-numeric-10-circle::before {\n  content: \"\\F0FEC\";\n}\n\n.mdi-numeric-10-circle-outline::before {\n  content: \"\\F0FED\";\n}\n\n.mdi-numeric-2::before {\n  content: \"\\F0B3B\";\n}\n\n.mdi-numeric-2-box::before {\n  content: \"\\F03A7\";\n}\n\n.mdi-numeric-2-box-multiple::before {\n  content: \"\\F0F10\";\n}\n\n.mdi-numeric-2-box-multiple-outline::before {\n  content: \"\\F03A8\";\n}\n\n.mdi-numeric-2-box-outline::before {\n  content: \"\\F03A9\";\n}\n\n.mdi-numeric-2-circle::before {\n  content: \"\\F0CA2\";\n}\n\n.mdi-numeric-2-circle-outline::before {\n  content: \"\\F0CA3\";\n}\n\n.mdi-numeric-3::before {\n  content: \"\\F0B3C\";\n}\n\n.mdi-numeric-3-box::before {\n  content: \"\\F03AA\";\n}\n\n.mdi-numeric-3-box-multiple::before {\n  content: \"\\F0F11\";\n}\n\n.mdi-numeric-3-box-multiple-outline::before {\n  content: \"\\F03AB\";\n}\n\n.mdi-numeric-3-box-outline::before {\n  content: \"\\F03AC\";\n}\n\n.mdi-numeric-3-circle::before {\n  content: \"\\F0CA4\";\n}\n\n.mdi-numeric-3-circle-outline::before {\n  content: \"\\F0CA5\";\n}\n\n.mdi-numeric-4::before {\n  content: \"\\F0B3D\";\n}\n\n.mdi-numeric-4-box::before {\n  content: \"\\F03AD\";\n}\n\n.mdi-numeric-4-box-multiple::before {\n  content: \"\\F0F12\";\n}\n\n.mdi-numeric-4-box-multiple-outline::before {\n  content: \"\\F03B2\";\n}\n\n.mdi-numeric-4-box-outline::before {\n  content: \"\\F03AE\";\n}\n\n.mdi-numeric-4-circle::before {\n  content: \"\\F0CA6\";\n}\n\n.mdi-numeric-4-circle-outline::before {\n  content: \"\\F0CA7\";\n}\n\n.mdi-numeric-5::before {\n  content: \"\\F0B3E\";\n}\n\n.mdi-numeric-5-box::before {\n  content: \"\\F03B1\";\n}\n\n.mdi-numeric-5-box-multiple::before {\n  content: \"\\F0F13\";\n}\n\n.mdi-numeric-5-box-multiple-outline::before {\n  content: \"\\F03AF\";\n}\n\n.mdi-numeric-5-box-outline::before {\n  content: \"\\F03B0\";\n}\n\n.mdi-numeric-5-circle::before {\n  content: \"\\F0CA8\";\n}\n\n.mdi-numeric-5-circle-outline::before {\n  content: \"\\F0CA9\";\n}\n\n.mdi-numeric-6::before {\n  content: \"\\F0B3F\";\n}\n\n.mdi-numeric-6-box::before {\n  content: \"\\F03B3\";\n}\n\n.mdi-numeric-6-box-multiple::before {\n  content: \"\\F0F14\";\n}\n\n.mdi-numeric-6-box-multiple-outline::before {\n  content: \"\\F03B4\";\n}\n\n.mdi-numeric-6-box-outline::before {\n  content: \"\\F03B5\";\n}\n\n.mdi-numeric-6-circle::before {\n  content: \"\\F0CAA\";\n}\n\n.mdi-numeric-6-circle-outline::before {\n  content: \"\\F0CAB\";\n}\n\n.mdi-numeric-7::before {\n  content: \"\\F0B40\";\n}\n\n.mdi-numeric-7-box::before {\n  content: \"\\F03B6\";\n}\n\n.mdi-numeric-7-box-multiple::before {\n  content: \"\\F0F15\";\n}\n\n.mdi-numeric-7-box-multiple-outline::before {\n  content: \"\\F03B7\";\n}\n\n.mdi-numeric-7-box-outline::before {\n  content: \"\\F03B8\";\n}\n\n.mdi-numeric-7-circle::before {\n  content: \"\\F0CAC\";\n}\n\n.mdi-numeric-7-circle-outline::before {\n  content: \"\\F0CAD\";\n}\n\n.mdi-numeric-8::before {\n  content: \"\\F0B41\";\n}\n\n.mdi-numeric-8-box::before {\n  content: \"\\F03B9\";\n}\n\n.mdi-numeric-8-box-multiple::before {\n  content: \"\\F0F16\";\n}\n\n.mdi-numeric-8-box-multiple-outline::before {\n  content: \"\\F03BA\";\n}\n\n.mdi-numeric-8-box-outline::before {\n  content: \"\\F03BB\";\n}\n\n.mdi-numeric-8-circle::before {\n  content: \"\\F0CAE\";\n}\n\n.mdi-numeric-8-circle-outline::before {\n  content: \"\\F0CAF\";\n}\n\n.mdi-numeric-9::before {\n  content: \"\\F0B42\";\n}\n\n.mdi-numeric-9-box::before {\n  content: \"\\F03BC\";\n}\n\n.mdi-numeric-9-box-multiple::before {\n  content: \"\\F0F17\";\n}\n\n.mdi-numeric-9-box-multiple-outline::before {\n  content: \"\\F03BD\";\n}\n\n.mdi-numeric-9-box-outline::before {\n  content: \"\\F03BE\";\n}\n\n.mdi-numeric-9-circle::before {\n  content: \"\\F0CB0\";\n}\n\n.mdi-numeric-9-circle-outline::before {\n  content: \"\\F0CB1\";\n}\n\n.mdi-numeric-9-plus::before {\n  content: \"\\F0FEE\";\n}\n\n.mdi-numeric-9-plus-box::before {\n  content: \"\\F03BF\";\n}\n\n.mdi-numeric-9-plus-box-multiple::before {\n  content: \"\\F0F18\";\n}\n\n.mdi-numeric-9-plus-box-multiple-outline::before {\n  content: \"\\F03C0\";\n}\n\n.mdi-numeric-9-plus-box-outline::before {\n  content: \"\\F03C1\";\n}\n\n.mdi-numeric-9-plus-circle::before {\n  content: \"\\F0CB2\";\n}\n\n.mdi-numeric-9-plus-circle-outline::before {\n  content: \"\\F0CB3\";\n}\n\n.mdi-numeric-negative-1::before {\n  content: \"\\F1052\";\n}\n\n.mdi-numeric-positive-1::before {\n  content: \"\\F15CB\";\n}\n\n.mdi-nut::before {\n  content: \"\\F06F8\";\n}\n\n.mdi-nutrition::before {\n  content: \"\\F03C2\";\n}\n\n.mdi-nuxt::before {\n  content: \"\\F1106\";\n}\n\n.mdi-oar::before {\n  content: \"\\F067C\";\n}\n\n.mdi-ocarina::before {\n  content: \"\\F0DE0\";\n}\n\n.mdi-oci::before {\n  content: \"\\F12E9\";\n}\n\n.mdi-ocr::before {\n  content: \"\\F113A\";\n}\n\n.mdi-octagon::before {\n  content: \"\\F03C3\";\n}\n\n.mdi-octagon-outline::before {\n  content: \"\\F03C4\";\n}\n\n.mdi-octagram::before {\n  content: \"\\F06F9\";\n}\n\n.mdi-octagram-outline::before {\n  content: \"\\F0775\";\n}\n\n.mdi-odnoklassniki::before {\n  content: \"\\F03C5\";\n}\n\n.mdi-offer::before {\n  content: \"\\F121B\";\n}\n\n.mdi-office-building::before {\n  content: \"\\F0991\";\n}\n\n.mdi-office-building-marker::before {\n  content: \"\\F1520\";\n}\n\n.mdi-office-building-marker-outline::before {\n  content: \"\\F1521\";\n}\n\n.mdi-office-building-outline::before {\n  content: \"\\F151F\";\n}\n\n.mdi-oil::before {\n  content: \"\\F03C7\";\n}\n\n.mdi-oil-lamp::before {\n  content: \"\\F0F19\";\n}\n\n.mdi-oil-level::before {\n  content: \"\\F1053\";\n}\n\n.mdi-oil-temperature::before {\n  content: \"\\F0FF8\";\n}\n\n.mdi-omega::before {\n  content: \"\\F03C9\";\n}\n\n.mdi-one-up::before {\n  content: \"\\F0BAD\";\n}\n\n.mdi-onepassword::before {\n  content: \"\\F0881\";\n}\n\n.mdi-opacity::before {\n  content: \"\\F05CC\";\n}\n\n.mdi-open-in-app::before {\n  content: \"\\F03CB\";\n}\n\n.mdi-open-in-new::before {\n  content: \"\\F03CC\";\n}\n\n.mdi-open-source-initiative::before {\n  content: \"\\F0BAE\";\n}\n\n.mdi-openid::before {\n  content: \"\\F03CD\";\n}\n\n.mdi-opera::before {\n  content: \"\\F03CE\";\n}\n\n.mdi-orbit::before {\n  content: \"\\F0018\";\n}\n\n.mdi-orbit-variant::before {\n  content: \"\\F15DB\";\n}\n\n.mdi-order-alphabetical-ascending::before {\n  content: \"\\F020D\";\n}\n\n.mdi-order-alphabetical-descending::before {\n  content: \"\\F0D07\";\n}\n\n.mdi-order-bool-ascending::before {\n  content: \"\\F02BE\";\n}\n\n.mdi-order-bool-ascending-variant::before {\n  content: \"\\F098F\";\n}\n\n.mdi-order-bool-descending::before {\n  content: \"\\F1384\";\n}\n\n.mdi-order-bool-descending-variant::before {\n  content: \"\\F0990\";\n}\n\n.mdi-order-numeric-ascending::before {\n  content: \"\\F0545\";\n}\n\n.mdi-order-numeric-descending::before {\n  content: \"\\F0546\";\n}\n\n.mdi-origin::before {\n  content: \"\\F0B43\";\n}\n\n.mdi-ornament::before {\n  content: \"\\F03CF\";\n}\n\n.mdi-ornament-variant::before {\n  content: \"\\F03D0\";\n}\n\n.mdi-outdoor-lamp::before {\n  content: \"\\F1054\";\n}\n\n.mdi-overscan::before {\n  content: \"\\F1005\";\n}\n\n.mdi-owl::before {\n  content: \"\\F03D2\";\n}\n\n.mdi-pac-man::before {\n  content: \"\\F0BAF\";\n}\n\n.mdi-package::before {\n  content: \"\\F03D3\";\n}\n\n.mdi-package-down::before {\n  content: \"\\F03D4\";\n}\n\n.mdi-package-up::before {\n  content: \"\\F03D5\";\n}\n\n.mdi-package-variant::before {\n  content: \"\\F03D6\";\n}\n\n.mdi-package-variant-closed::before {\n  content: \"\\F03D7\";\n}\n\n.mdi-page-first::before {\n  content: \"\\F0600\";\n}\n\n.mdi-page-last::before {\n  content: \"\\F0601\";\n}\n\n.mdi-page-layout-body::before {\n  content: \"\\F06FA\";\n}\n\n.mdi-page-layout-footer::before {\n  content: \"\\F06FB\";\n}\n\n.mdi-page-layout-header::before {\n  content: \"\\F06FC\";\n}\n\n.mdi-page-layout-header-footer::before {\n  content: \"\\F0F7F\";\n}\n\n.mdi-page-layout-sidebar-left::before {\n  content: \"\\F06FD\";\n}\n\n.mdi-page-layout-sidebar-right::before {\n  content: \"\\F06FE\";\n}\n\n.mdi-page-next::before {\n  content: \"\\F0BB0\";\n}\n\n.mdi-page-next-outline::before {\n  content: \"\\F0BB1\";\n}\n\n.mdi-page-previous::before {\n  content: \"\\F0BB2\";\n}\n\n.mdi-page-previous-outline::before {\n  content: \"\\F0BB3\";\n}\n\n.mdi-pail::before {\n  content: \"\\F1417\";\n}\n\n.mdi-pail-minus::before {\n  content: \"\\F1437\";\n}\n\n.mdi-pail-minus-outline::before {\n  content: \"\\F143C\";\n}\n\n.mdi-pail-off::before {\n  content: \"\\F1439\";\n}\n\n.mdi-pail-off-outline::before {\n  content: \"\\F143E\";\n}\n\n.mdi-pail-outline::before {\n  content: \"\\F143A\";\n}\n\n.mdi-pail-plus::before {\n  content: \"\\F1436\";\n}\n\n.mdi-pail-plus-outline::before {\n  content: \"\\F143B\";\n}\n\n.mdi-pail-remove::before {\n  content: \"\\F1438\";\n}\n\n.mdi-pail-remove-outline::before {\n  content: \"\\F143D\";\n}\n\n.mdi-palette::before {\n  content: \"\\F03D8\";\n}\n\n.mdi-palette-advanced::before {\n  content: \"\\F03D9\";\n}\n\n.mdi-palette-outline::before {\n  content: \"\\F0E0C\";\n}\n\n.mdi-palette-swatch::before {\n  content: \"\\F08B5\";\n}\n\n.mdi-palette-swatch-outline::before {\n  content: \"\\F135C\";\n}\n\n.mdi-palm-tree::before {\n  content: \"\\F1055\";\n}\n\n.mdi-pan::before {\n  content: \"\\F0BB4\";\n}\n\n.mdi-pan-bottom-left::before {\n  content: \"\\F0BB5\";\n}\n\n.mdi-pan-bottom-right::before {\n  content: \"\\F0BB6\";\n}\n\n.mdi-pan-down::before {\n  content: \"\\F0BB7\";\n}\n\n.mdi-pan-horizontal::before {\n  content: \"\\F0BB8\";\n}\n\n.mdi-pan-left::before {\n  content: \"\\F0BB9\";\n}\n\n.mdi-pan-right::before {\n  content: \"\\F0BBA\";\n}\n\n.mdi-pan-top-left::before {\n  content: \"\\F0BBB\";\n}\n\n.mdi-pan-top-right::before {\n  content: \"\\F0BBC\";\n}\n\n.mdi-pan-up::before {\n  content: \"\\F0BBD\";\n}\n\n.mdi-pan-vertical::before {\n  content: \"\\F0BBE\";\n}\n\n.mdi-panda::before {\n  content: \"\\F03DA\";\n}\n\n.mdi-pandora::before {\n  content: \"\\F03DB\";\n}\n\n.mdi-panorama::before {\n  content: \"\\F03DC\";\n}\n\n.mdi-panorama-fisheye::before {\n  content: \"\\F03DD\";\n}\n\n.mdi-panorama-horizontal::before {\n  content: \"\\F03DE\";\n}\n\n.mdi-panorama-vertical::before {\n  content: \"\\F03DF\";\n}\n\n.mdi-panorama-wide-angle::before {\n  content: \"\\F03E0\";\n}\n\n.mdi-paper-cut-vertical::before {\n  content: \"\\F03E1\";\n}\n\n.mdi-paper-roll::before {\n  content: \"\\F1157\";\n}\n\n.mdi-paper-roll-outline::before {\n  content: \"\\F1158\";\n}\n\n.mdi-paperclip::before {\n  content: \"\\F03E2\";\n}\n\n.mdi-parachute::before {\n  content: \"\\F0CB4\";\n}\n\n.mdi-parachute-outline::before {\n  content: \"\\F0CB5\";\n}\n\n.mdi-parking::before {\n  content: \"\\F03E3\";\n}\n\n.mdi-party-popper::before {\n  content: \"\\F1056\";\n}\n\n.mdi-passport::before {\n  content: \"\\F07E3\";\n}\n\n.mdi-passport-biometric::before {\n  content: \"\\F0DE1\";\n}\n\n.mdi-pasta::before {\n  content: \"\\F1160\";\n}\n\n.mdi-patio-heater::before {\n  content: \"\\F0F80\";\n}\n\n.mdi-patreon::before {\n  content: \"\\F0882\";\n}\n\n.mdi-pause::before {\n  content: \"\\F03E4\";\n}\n\n.mdi-pause-circle::before {\n  content: \"\\F03E5\";\n}\n\n.mdi-pause-circle-outline::before {\n  content: \"\\F03E6\";\n}\n\n.mdi-pause-octagon::before {\n  content: \"\\F03E7\";\n}\n\n.mdi-pause-octagon-outline::before {\n  content: \"\\F03E8\";\n}\n\n.mdi-paw::before {\n  content: \"\\F03E9\";\n}\n\n.mdi-paw-off::before {\n  content: \"\\F0657\";\n}\n\n.mdi-paw-off-outline::before {\n  content: \"\\F1676\";\n}\n\n.mdi-paw-outline::before {\n  content: \"\\F1675\";\n}\n\n.mdi-pdf-box::before {\n  content: \"\\F0E56\";\n}\n\n.mdi-peace::before {\n  content: \"\\F0884\";\n}\n\n.mdi-peanut::before {\n  content: \"\\F0FFC\";\n}\n\n.mdi-peanut-off::before {\n  content: \"\\F0FFD\";\n}\n\n.mdi-peanut-off-outline::before {\n  content: \"\\F0FFF\";\n}\n\n.mdi-peanut-outline::before {\n  content: \"\\F0FFE\";\n}\n\n.mdi-pen::before {\n  content: \"\\F03EA\";\n}\n\n.mdi-pen-lock::before {\n  content: \"\\F0DE2\";\n}\n\n.mdi-pen-minus::before {\n  content: \"\\F0DE3\";\n}\n\n.mdi-pen-off::before {\n  content: \"\\F0DE4\";\n}\n\n.mdi-pen-plus::before {\n  content: \"\\F0DE5\";\n}\n\n.mdi-pen-remove::before {\n  content: \"\\F0DE6\";\n}\n\n.mdi-pencil::before {\n  content: \"\\F03EB\";\n}\n\n.mdi-pencil-box::before {\n  content: \"\\F03EC\";\n}\n\n.mdi-pencil-box-multiple::before {\n  content: \"\\F1144\";\n}\n\n.mdi-pencil-box-multiple-outline::before {\n  content: \"\\F1145\";\n}\n\n.mdi-pencil-box-outline::before {\n  content: \"\\F03ED\";\n}\n\n.mdi-pencil-circle::before {\n  content: \"\\F06FF\";\n}\n\n.mdi-pencil-circle-outline::before {\n  content: \"\\F0776\";\n}\n\n.mdi-pencil-lock::before {\n  content: \"\\F03EE\";\n}\n\n.mdi-pencil-lock-outline::before {\n  content: \"\\F0DE7\";\n}\n\n.mdi-pencil-minus::before {\n  content: \"\\F0DE8\";\n}\n\n.mdi-pencil-minus-outline::before {\n  content: \"\\F0DE9\";\n}\n\n.mdi-pencil-off::before {\n  content: \"\\F03EF\";\n}\n\n.mdi-pencil-off-outline::before {\n  content: \"\\F0DEA\";\n}\n\n.mdi-pencil-outline::before {\n  content: \"\\F0CB6\";\n}\n\n.mdi-pencil-plus::before {\n  content: \"\\F0DEB\";\n}\n\n.mdi-pencil-plus-outline::before {\n  content: \"\\F0DEC\";\n}\n\n.mdi-pencil-remove::before {\n  content: \"\\F0DED\";\n}\n\n.mdi-pencil-remove-outline::before {\n  content: \"\\F0DEE\";\n}\n\n.mdi-pencil-ruler::before {\n  content: \"\\F1353\";\n}\n\n.mdi-penguin::before {\n  content: \"\\F0EC0\";\n}\n\n.mdi-pentagon::before {\n  content: \"\\F0701\";\n}\n\n.mdi-pentagon-outline::before {\n  content: \"\\F0700\";\n}\n\n.mdi-pentagram::before {\n  content: \"\\F1667\";\n}\n\n.mdi-percent::before {\n  content: \"\\F03F0\";\n}\n\n.mdi-percent-outline::before {\n  content: \"\\F1278\";\n}\n\n.mdi-periodic-table::before {\n  content: \"\\F08B6\";\n}\n\n.mdi-perspective-less::before {\n  content: \"\\F0D23\";\n}\n\n.mdi-perspective-more::before {\n  content: \"\\F0D24\";\n}\n\n.mdi-pharmacy::before {\n  content: \"\\F03F1\";\n}\n\n.mdi-phone::before {\n  content: \"\\F03F2\";\n}\n\n.mdi-phone-alert::before {\n  content: \"\\F0F1A\";\n}\n\n.mdi-phone-alert-outline::before {\n  content: \"\\F118E\";\n}\n\n.mdi-phone-bluetooth::before {\n  content: \"\\F03F3\";\n}\n\n.mdi-phone-bluetooth-outline::before {\n  content: \"\\F118F\";\n}\n\n.mdi-phone-cancel::before {\n  content: \"\\F10BC\";\n}\n\n.mdi-phone-cancel-outline::before {\n  content: \"\\F1190\";\n}\n\n.mdi-phone-check::before {\n  content: \"\\F11A9\";\n}\n\n.mdi-phone-check-outline::before {\n  content: \"\\F11AA\";\n}\n\n.mdi-phone-classic::before {\n  content: \"\\F0602\";\n}\n\n.mdi-phone-classic-off::before {\n  content: \"\\F1279\";\n}\n\n.mdi-phone-dial::before {\n  content: \"\\F1559\";\n}\n\n.mdi-phone-dial-outline::before {\n  content: \"\\F155A\";\n}\n\n.mdi-phone-forward::before {\n  content: \"\\F03F4\";\n}\n\n.mdi-phone-forward-outline::before {\n  content: \"\\F1191\";\n}\n\n.mdi-phone-hangup::before {\n  content: \"\\F03F5\";\n}\n\n.mdi-phone-hangup-outline::before {\n  content: \"\\F1192\";\n}\n\n.mdi-phone-in-talk::before {\n  content: \"\\F03F6\";\n}\n\n.mdi-phone-in-talk-outline::before {\n  content: \"\\F1182\";\n}\n\n.mdi-phone-incoming::before {\n  content: \"\\F03F7\";\n}\n\n.mdi-phone-incoming-outline::before {\n  content: \"\\F1193\";\n}\n\n.mdi-phone-lock::before {\n  content: \"\\F03F8\";\n}\n\n.mdi-phone-lock-outline::before {\n  content: \"\\F1194\";\n}\n\n.mdi-phone-log::before {\n  content: \"\\F03F9\";\n}\n\n.mdi-phone-log-outline::before {\n  content: \"\\F1195\";\n}\n\n.mdi-phone-message::before {\n  content: \"\\F1196\";\n}\n\n.mdi-phone-message-outline::before {\n  content: \"\\F1197\";\n}\n\n.mdi-phone-minus::before {\n  content: \"\\F0658\";\n}\n\n.mdi-phone-minus-outline::before {\n  content: \"\\F1198\";\n}\n\n.mdi-phone-missed::before {\n  content: \"\\F03FA\";\n}\n\n.mdi-phone-missed-outline::before {\n  content: \"\\F11A5\";\n}\n\n.mdi-phone-off::before {\n  content: \"\\F0DEF\";\n}\n\n.mdi-phone-off-outline::before {\n  content: \"\\F11A6\";\n}\n\n.mdi-phone-outgoing::before {\n  content: \"\\F03FB\";\n}\n\n.mdi-phone-outgoing-outline::before {\n  content: \"\\F1199\";\n}\n\n.mdi-phone-outline::before {\n  content: \"\\F0DF0\";\n}\n\n.mdi-phone-paused::before {\n  content: \"\\F03FC\";\n}\n\n.mdi-phone-paused-outline::before {\n  content: \"\\F119A\";\n}\n\n.mdi-phone-plus::before {\n  content: \"\\F0659\";\n}\n\n.mdi-phone-plus-outline::before {\n  content: \"\\F119B\";\n}\n\n.mdi-phone-remove::before {\n  content: \"\\F152F\";\n}\n\n.mdi-phone-remove-outline::before {\n  content: \"\\F1530\";\n}\n\n.mdi-phone-return::before {\n  content: \"\\F082F\";\n}\n\n.mdi-phone-return-outline::before {\n  content: \"\\F119C\";\n}\n\n.mdi-phone-ring::before {\n  content: \"\\F11AB\";\n}\n\n.mdi-phone-ring-outline::before {\n  content: \"\\F11AC\";\n}\n\n.mdi-phone-rotate-landscape::before {\n  content: \"\\F0885\";\n}\n\n.mdi-phone-rotate-portrait::before {\n  content: \"\\F0886\";\n}\n\n.mdi-phone-settings::before {\n  content: \"\\F03FD\";\n}\n\n.mdi-phone-settings-outline::before {\n  content: \"\\F119D\";\n}\n\n.mdi-phone-voip::before {\n  content: \"\\F03FE\";\n}\n\n.mdi-pi::before {\n  content: \"\\F03FF\";\n}\n\n.mdi-pi-box::before {\n  content: \"\\F0400\";\n}\n\n.mdi-pi-hole::before {\n  content: \"\\F0DF1\";\n}\n\n.mdi-piano::before {\n  content: \"\\F067D\";\n}\n\n.mdi-pickaxe::before {\n  content: \"\\F08B7\";\n}\n\n.mdi-picture-in-picture-bottom-right::before {\n  content: \"\\F0E57\";\n}\n\n.mdi-picture-in-picture-bottom-right-outline::before {\n  content: \"\\F0E58\";\n}\n\n.mdi-picture-in-picture-top-right::before {\n  content: \"\\F0E59\";\n}\n\n.mdi-picture-in-picture-top-right-outline::before {\n  content: \"\\F0E5A\";\n}\n\n.mdi-pier::before {\n  content: \"\\F0887\";\n}\n\n.mdi-pier-crane::before {\n  content: \"\\F0888\";\n}\n\n.mdi-pig::before {\n  content: \"\\F0401\";\n}\n\n.mdi-pig-variant::before {\n  content: \"\\F1006\";\n}\n\n.mdi-pig-variant-outline::before {\n  content: \"\\F1678\";\n}\n\n.mdi-piggy-bank::before {\n  content: \"\\F1007\";\n}\n\n.mdi-piggy-bank-outline::before {\n  content: \"\\F1679\";\n}\n\n.mdi-pill::before {\n  content: \"\\F0402\";\n}\n\n.mdi-pillar::before {\n  content: \"\\F0702\";\n}\n\n.mdi-pin::before {\n  content: \"\\F0403\";\n}\n\n.mdi-pin-off::before {\n  content: \"\\F0404\";\n}\n\n.mdi-pin-off-outline::before {\n  content: \"\\F0930\";\n}\n\n.mdi-pin-outline::before {\n  content: \"\\F0931\";\n}\n\n.mdi-pine-tree::before {\n  content: \"\\F0405\";\n}\n\n.mdi-pine-tree-box::before {\n  content: \"\\F0406\";\n}\n\n.mdi-pine-tree-fire::before {\n  content: \"\\F141A\";\n}\n\n.mdi-pinterest::before {\n  content: \"\\F0407\";\n}\n\n.mdi-pinwheel::before {\n  content: \"\\F0AD5\";\n}\n\n.mdi-pinwheel-outline::before {\n  content: \"\\F0AD6\";\n}\n\n.mdi-pipe::before {\n  content: \"\\F07E5\";\n}\n\n.mdi-pipe-disconnected::before {\n  content: \"\\F07E6\";\n}\n\n.mdi-pipe-leak::before {\n  content: \"\\F0889\";\n}\n\n.mdi-pipe-wrench::before {\n  content: \"\\F1354\";\n}\n\n.mdi-pirate::before {\n  content: \"\\F0A08\";\n}\n\n.mdi-pistol::before {\n  content: \"\\F0703\";\n}\n\n.mdi-piston::before {\n  content: \"\\F088A\";\n}\n\n.mdi-pitchfork::before {\n  content: \"\\F1553\";\n}\n\n.mdi-pizza::before {\n  content: \"\\F0409\";\n}\n\n.mdi-play::before {\n  content: \"\\F040A\";\n}\n\n.mdi-play-box::before {\n  content: \"\\F127A\";\n}\n\n.mdi-play-box-multiple::before {\n  content: \"\\F0D19\";\n}\n\n.mdi-play-box-multiple-outline::before {\n  content: \"\\F13E6\";\n}\n\n.mdi-play-box-outline::before {\n  content: \"\\F040B\";\n}\n\n.mdi-play-circle::before {\n  content: \"\\F040C\";\n}\n\n.mdi-play-circle-outline::before {\n  content: \"\\F040D\";\n}\n\n.mdi-play-network::before {\n  content: \"\\F088B\";\n}\n\n.mdi-play-network-outline::before {\n  content: \"\\F0CB7\";\n}\n\n.mdi-play-outline::before {\n  content: \"\\F0F1B\";\n}\n\n.mdi-play-pause::before {\n  content: \"\\F040E\";\n}\n\n.mdi-play-protected-content::before {\n  content: \"\\F040F\";\n}\n\n.mdi-play-speed::before {\n  content: \"\\F08FF\";\n}\n\n.mdi-playlist-check::before {\n  content: \"\\F05C7\";\n}\n\n.mdi-playlist-edit::before {\n  content: \"\\F0900\";\n}\n\n.mdi-playlist-minus::before {\n  content: \"\\F0410\";\n}\n\n.mdi-playlist-music::before {\n  content: \"\\F0CB8\";\n}\n\n.mdi-playlist-music-outline::before {\n  content: \"\\F0CB9\";\n}\n\n.mdi-playlist-play::before {\n  content: \"\\F0411\";\n}\n\n.mdi-playlist-plus::before {\n  content: \"\\F0412\";\n}\n\n.mdi-playlist-remove::before {\n  content: \"\\F0413\";\n}\n\n.mdi-playlist-star::before {\n  content: \"\\F0DF2\";\n}\n\n.mdi-plex::before {\n  content: \"\\F06BA\";\n}\n\n.mdi-plus::before {\n  content: \"\\F0415\";\n}\n\n.mdi-plus-box::before {\n  content: \"\\F0416\";\n}\n\n.mdi-plus-box-multiple::before {\n  content: \"\\F0334\";\n}\n\n.mdi-plus-box-multiple-outline::before {\n  content: \"\\F1143\";\n}\n\n.mdi-plus-box-outline::before {\n  content: \"\\F0704\";\n}\n\n.mdi-plus-circle::before {\n  content: \"\\F0417\";\n}\n\n.mdi-plus-circle-multiple::before {\n  content: \"\\F034C\";\n}\n\n.mdi-plus-circle-multiple-outline::before {\n  content: \"\\F0418\";\n}\n\n.mdi-plus-circle-outline::before {\n  content: \"\\F0419\";\n}\n\n.mdi-plus-minus::before {\n  content: \"\\F0992\";\n}\n\n.mdi-plus-minus-box::before {\n  content: \"\\F0993\";\n}\n\n.mdi-plus-minus-variant::before {\n  content: \"\\F14C9\";\n}\n\n.mdi-plus-network::before {\n  content: \"\\F041A\";\n}\n\n.mdi-plus-network-outline::before {\n  content: \"\\F0CBA\";\n}\n\n.mdi-plus-one::before {\n  content: \"\\F041B\";\n}\n\n.mdi-plus-outline::before {\n  content: \"\\F0705\";\n}\n\n.mdi-plus-thick::before {\n  content: \"\\F11EC\";\n}\n\n.mdi-podcast::before {\n  content: \"\\F0994\";\n}\n\n.mdi-podium::before {\n  content: \"\\F0D25\";\n}\n\n.mdi-podium-bronze::before {\n  content: \"\\F0D26\";\n}\n\n.mdi-podium-gold::before {\n  content: \"\\F0D27\";\n}\n\n.mdi-podium-silver::before {\n  content: \"\\F0D28\";\n}\n\n.mdi-point-of-sale::before {\n  content: \"\\F0D92\";\n}\n\n.mdi-pokeball::before {\n  content: \"\\F041D\";\n}\n\n.mdi-pokemon-go::before {\n  content: \"\\F0A09\";\n}\n\n.mdi-poker-chip::before {\n  content: \"\\F0830\";\n}\n\n.mdi-polaroid::before {\n  content: \"\\F041E\";\n}\n\n.mdi-police-badge::before {\n  content: \"\\F1167\";\n}\n\n.mdi-police-badge-outline::before {\n  content: \"\\F1168\";\n}\n\n.mdi-poll::before {\n  content: \"\\F041F\";\n}\n\n.mdi-poll-box::before {\n  content: \"\\F0420\";\n}\n\n.mdi-poll-box-outline::before {\n  content: \"\\F127B\";\n}\n\n.mdi-polo::before {\n  content: \"\\F14C3\";\n}\n\n.mdi-polymer::before {\n  content: \"\\F0421\";\n}\n\n.mdi-pool::before {\n  content: \"\\F0606\";\n}\n\n.mdi-popcorn::before {\n  content: \"\\F0422\";\n}\n\n.mdi-post::before {\n  content: \"\\F1008\";\n}\n\n.mdi-post-outline::before {\n  content: \"\\F1009\";\n}\n\n.mdi-postage-stamp::before {\n  content: \"\\F0CBB\";\n}\n\n.mdi-pot::before {\n  content: \"\\F02E5\";\n}\n\n.mdi-pot-mix::before {\n  content: \"\\F065B\";\n}\n\n.mdi-pot-mix-outline::before {\n  content: \"\\F0677\";\n}\n\n.mdi-pot-outline::before {\n  content: \"\\F02FF\";\n}\n\n.mdi-pot-steam::before {\n  content: \"\\F065A\";\n}\n\n.mdi-pot-steam-outline::before {\n  content: \"\\F0326\";\n}\n\n.mdi-pound::before {\n  content: \"\\F0423\";\n}\n\n.mdi-pound-box::before {\n  content: \"\\F0424\";\n}\n\n.mdi-pound-box-outline::before {\n  content: \"\\F117F\";\n}\n\n.mdi-power::before {\n  content: \"\\F0425\";\n}\n\n.mdi-power-cycle::before {\n  content: \"\\F0901\";\n}\n\n.mdi-power-off::before {\n  content: \"\\F0902\";\n}\n\n.mdi-power-on::before {\n  content: \"\\F0903\";\n}\n\n.mdi-power-plug::before {\n  content: \"\\F06A5\";\n}\n\n.mdi-power-plug-off::before {\n  content: \"\\F06A6\";\n}\n\n.mdi-power-plug-off-outline::before {\n  content: \"\\F1424\";\n}\n\n.mdi-power-plug-outline::before {\n  content: \"\\F1425\";\n}\n\n.mdi-power-settings::before {\n  content: \"\\F0426\";\n}\n\n.mdi-power-sleep::before {\n  content: \"\\F0904\";\n}\n\n.mdi-power-socket::before {\n  content: \"\\F0427\";\n}\n\n.mdi-power-socket-au::before {\n  content: \"\\F0905\";\n}\n\n.mdi-power-socket-de::before {\n  content: \"\\F1107\";\n}\n\n.mdi-power-socket-eu::before {\n  content: \"\\F07E7\";\n}\n\n.mdi-power-socket-fr::before {\n  content: \"\\F1108\";\n}\n\n.mdi-power-socket-it::before {\n  content: \"\\F14FF\";\n}\n\n.mdi-power-socket-jp::before {\n  content: \"\\F1109\";\n}\n\n.mdi-power-socket-uk::before {\n  content: \"\\F07E8\";\n}\n\n.mdi-power-socket-us::before {\n  content: \"\\F07E9\";\n}\n\n.mdi-power-standby::before {\n  content: \"\\F0906\";\n}\n\n.mdi-powershell::before {\n  content: \"\\F0A0A\";\n}\n\n.mdi-prescription::before {\n  content: \"\\F0706\";\n}\n\n.mdi-presentation::before {\n  content: \"\\F0428\";\n}\n\n.mdi-presentation-play::before {\n  content: \"\\F0429\";\n}\n\n.mdi-pretzel::before {\n  content: \"\\F1562\";\n}\n\n.mdi-printer::before {\n  content: \"\\F042A\";\n}\n\n.mdi-printer-3d::before {\n  content: \"\\F042B\";\n}\n\n.mdi-printer-3d-nozzle::before {\n  content: \"\\F0E5B\";\n}\n\n.mdi-printer-3d-nozzle-alert::before {\n  content: \"\\F11C0\";\n}\n\n.mdi-printer-3d-nozzle-alert-outline::before {\n  content: \"\\F11C1\";\n}\n\n.mdi-printer-3d-nozzle-outline::before {\n  content: \"\\F0E5C\";\n}\n\n.mdi-printer-alert::before {\n  content: \"\\F042C\";\n}\n\n.mdi-printer-check::before {\n  content: \"\\F1146\";\n}\n\n.mdi-printer-eye::before {\n  content: \"\\F1458\";\n}\n\n.mdi-printer-off::before {\n  content: \"\\F0E5D\";\n}\n\n.mdi-printer-pos::before {\n  content: \"\\F1057\";\n}\n\n.mdi-printer-search::before {\n  content: \"\\F1457\";\n}\n\n.mdi-printer-settings::before {\n  content: \"\\F0707\";\n}\n\n.mdi-printer-wireless::before {\n  content: \"\\F0A0B\";\n}\n\n.mdi-priority-high::before {\n  content: \"\\F0603\";\n}\n\n.mdi-priority-low::before {\n  content: \"\\F0604\";\n}\n\n.mdi-professional-hexagon::before {\n  content: \"\\F042D\";\n}\n\n.mdi-progress-alert::before {\n  content: \"\\F0CBC\";\n}\n\n.mdi-progress-check::before {\n  content: \"\\F0995\";\n}\n\n.mdi-progress-clock::before {\n  content: \"\\F0996\";\n}\n\n.mdi-progress-close::before {\n  content: \"\\F110A\";\n}\n\n.mdi-progress-download::before {\n  content: \"\\F0997\";\n}\n\n.mdi-progress-question::before {\n  content: \"\\F1522\";\n}\n\n.mdi-progress-upload::before {\n  content: \"\\F0998\";\n}\n\n.mdi-progress-wrench::before {\n  content: \"\\F0CBD\";\n}\n\n.mdi-projector::before {\n  content: \"\\F042E\";\n}\n\n.mdi-projector-screen::before {\n  content: \"\\F042F\";\n}\n\n.mdi-projector-screen-outline::before {\n  content: \"\\F1724\";\n}\n\n.mdi-propane-tank::before {\n  content: \"\\F1357\";\n}\n\n.mdi-propane-tank-outline::before {\n  content: \"\\F1358\";\n}\n\n.mdi-protocol::before {\n  content: \"\\F0FD8\";\n}\n\n.mdi-publish::before {\n  content: \"\\F06A7\";\n}\n\n.mdi-pulse::before {\n  content: \"\\F0430\";\n}\n\n.mdi-pump::before {\n  content: \"\\F1402\";\n}\n\n.mdi-pumpkin::before {\n  content: \"\\F0BBF\";\n}\n\n.mdi-purse::before {\n  content: \"\\F0F1C\";\n}\n\n.mdi-purse-outline::before {\n  content: \"\\F0F1D\";\n}\n\n.mdi-puzzle::before {\n  content: \"\\F0431\";\n}\n\n.mdi-puzzle-check::before {\n  content: \"\\F1426\";\n}\n\n.mdi-puzzle-check-outline::before {\n  content: \"\\F1427\";\n}\n\n.mdi-puzzle-edit::before {\n  content: \"\\F14D3\";\n}\n\n.mdi-puzzle-edit-outline::before {\n  content: \"\\F14D9\";\n}\n\n.mdi-puzzle-heart::before {\n  content: \"\\F14D4\";\n}\n\n.mdi-puzzle-heart-outline::before {\n  content: \"\\F14DA\";\n}\n\n.mdi-puzzle-minus::before {\n  content: \"\\F14D1\";\n}\n\n.mdi-puzzle-minus-outline::before {\n  content: \"\\F14D7\";\n}\n\n.mdi-puzzle-outline::before {\n  content: \"\\F0A66\";\n}\n\n.mdi-puzzle-plus::before {\n  content: \"\\F14D0\";\n}\n\n.mdi-puzzle-plus-outline::before {\n  content: \"\\F14D6\";\n}\n\n.mdi-puzzle-remove::before {\n  content: \"\\F14D2\";\n}\n\n.mdi-puzzle-remove-outline::before {\n  content: \"\\F14D8\";\n}\n\n.mdi-puzzle-star::before {\n  content: \"\\F14D5\";\n}\n\n.mdi-puzzle-star-outline::before {\n  content: \"\\F14DB\";\n}\n\n.mdi-qi::before {\n  content: \"\\F0999\";\n}\n\n.mdi-qqchat::before {\n  content: \"\\F0605\";\n}\n\n.mdi-qrcode::before {\n  content: \"\\F0432\";\n}\n\n.mdi-qrcode-edit::before {\n  content: \"\\F08B8\";\n}\n\n.mdi-qrcode-minus::before {\n  content: \"\\F118C\";\n}\n\n.mdi-qrcode-plus::before {\n  content: \"\\F118B\";\n}\n\n.mdi-qrcode-remove::before {\n  content: \"\\F118D\";\n}\n\n.mdi-qrcode-scan::before {\n  content: \"\\F0433\";\n}\n\n.mdi-quadcopter::before {\n  content: \"\\F0434\";\n}\n\n.mdi-quality-high::before {\n  content: \"\\F0435\";\n}\n\n.mdi-quality-low::before {\n  content: \"\\F0A0C\";\n}\n\n.mdi-quality-medium::before {\n  content: \"\\F0A0D\";\n}\n\n.mdi-quora::before {\n  content: \"\\F0D29\";\n}\n\n.mdi-rabbit::before {\n  content: \"\\F0907\";\n}\n\n.mdi-racing-helmet::before {\n  content: \"\\F0D93\";\n}\n\n.mdi-racquetball::before {\n  content: \"\\F0D94\";\n}\n\n.mdi-radar::before {\n  content: \"\\F0437\";\n}\n\n.mdi-radiator::before {\n  content: \"\\F0438\";\n}\n\n.mdi-radiator-disabled::before {\n  content: \"\\F0AD7\";\n}\n\n.mdi-radiator-off::before {\n  content: \"\\F0AD8\";\n}\n\n.mdi-radio::before {\n  content: \"\\F0439\";\n}\n\n.mdi-radio-am::before {\n  content: \"\\F0CBE\";\n}\n\n.mdi-radio-fm::before {\n  content: \"\\F0CBF\";\n}\n\n.mdi-radio-handheld::before {\n  content: \"\\F043A\";\n}\n\n.mdi-radio-off::before {\n  content: \"\\F121C\";\n}\n\n.mdi-radio-tower::before {\n  content: \"\\F043B\";\n}\n\n.mdi-radioactive::before {\n  content: \"\\F043C\";\n}\n\n.mdi-radioactive-off::before {\n  content: \"\\F0EC1\";\n}\n\n.mdi-radiobox-blank::before {\n  content: \"\\F043D\";\n}\n\n.mdi-radiobox-marked::before {\n  content: \"\\F043E\";\n}\n\n.mdi-radiology-box::before {\n  content: \"\\F14C5\";\n}\n\n.mdi-radiology-box-outline::before {\n  content: \"\\F14C6\";\n}\n\n.mdi-radius::before {\n  content: \"\\F0CC0\";\n}\n\n.mdi-radius-outline::before {\n  content: \"\\F0CC1\";\n}\n\n.mdi-railroad-light::before {\n  content: \"\\F0F1E\";\n}\n\n.mdi-rake::before {\n  content: \"\\F1544\";\n}\n\n.mdi-raspberry-pi::before {\n  content: \"\\F043F\";\n}\n\n.mdi-ray-end::before {\n  content: \"\\F0440\";\n}\n\n.mdi-ray-end-arrow::before {\n  content: \"\\F0441\";\n}\n\n.mdi-ray-start::before {\n  content: \"\\F0442\";\n}\n\n.mdi-ray-start-arrow::before {\n  content: \"\\F0443\";\n}\n\n.mdi-ray-start-end::before {\n  content: \"\\F0444\";\n}\n\n.mdi-ray-start-vertex-end::before {\n  content: \"\\F15D8\";\n}\n\n.mdi-ray-vertex::before {\n  content: \"\\F0445\";\n}\n\n.mdi-react::before {\n  content: \"\\F0708\";\n}\n\n.mdi-read::before {\n  content: \"\\F0447\";\n}\n\n.mdi-receipt::before {\n  content: \"\\F0449\";\n}\n\n.mdi-record::before {\n  content: \"\\F044A\";\n}\n\n.mdi-record-circle::before {\n  content: \"\\F0EC2\";\n}\n\n.mdi-record-circle-outline::before {\n  content: \"\\F0EC3\";\n}\n\n.mdi-record-player::before {\n  content: \"\\F099A\";\n}\n\n.mdi-record-rec::before {\n  content: \"\\F044B\";\n}\n\n.mdi-rectangle::before {\n  content: \"\\F0E5E\";\n}\n\n.mdi-rectangle-outline::before {\n  content: \"\\F0E5F\";\n}\n\n.mdi-recycle::before {\n  content: \"\\F044C\";\n}\n\n.mdi-recycle-variant::before {\n  content: \"\\F139D\";\n}\n\n.mdi-reddit::before {\n  content: \"\\F044D\";\n}\n\n.mdi-redhat::before {\n  content: \"\\F111B\";\n}\n\n.mdi-redo::before {\n  content: \"\\F044E\";\n}\n\n.mdi-redo-variant::before {\n  content: \"\\F044F\";\n}\n\n.mdi-reflect-horizontal::before {\n  content: \"\\F0A0E\";\n}\n\n.mdi-reflect-vertical::before {\n  content: \"\\F0A0F\";\n}\n\n.mdi-refresh::before {\n  content: \"\\F0450\";\n}\n\n.mdi-refresh-circle::before {\n  content: \"\\F1377\";\n}\n\n.mdi-regex::before {\n  content: \"\\F0451\";\n}\n\n.mdi-registered-trademark::before {\n  content: \"\\F0A67\";\n}\n\n.mdi-reiterate::before {\n  content: \"\\F1588\";\n}\n\n.mdi-relation-many-to-many::before {\n  content: \"\\F1496\";\n}\n\n.mdi-relation-many-to-one::before {\n  content: \"\\F1497\";\n}\n\n.mdi-relation-many-to-one-or-many::before {\n  content: \"\\F1498\";\n}\n\n.mdi-relation-many-to-only-one::before {\n  content: \"\\F1499\";\n}\n\n.mdi-relation-many-to-zero-or-many::before {\n  content: \"\\F149A\";\n}\n\n.mdi-relation-many-to-zero-or-one::before {\n  content: \"\\F149B\";\n}\n\n.mdi-relation-one-or-many-to-many::before {\n  content: \"\\F149C\";\n}\n\n.mdi-relation-one-or-many-to-one::before {\n  content: \"\\F149D\";\n}\n\n.mdi-relation-one-or-many-to-one-or-many::before {\n  content: \"\\F149E\";\n}\n\n.mdi-relation-one-or-many-to-only-one::before {\n  content: \"\\F149F\";\n}\n\n.mdi-relation-one-or-many-to-zero-or-many::before {\n  content: \"\\F14A0\";\n}\n\n.mdi-relation-one-or-many-to-zero-or-one::before {\n  content: \"\\F14A1\";\n}\n\n.mdi-relation-one-to-many::before {\n  content: \"\\F14A2\";\n}\n\n.mdi-relation-one-to-one::before {\n  content: \"\\F14A3\";\n}\n\n.mdi-relation-one-to-one-or-many::before {\n  content: \"\\F14A4\";\n}\n\n.mdi-relation-one-to-only-one::before {\n  content: \"\\F14A5\";\n}\n\n.mdi-relation-one-to-zero-or-many::before {\n  content: \"\\F14A6\";\n}\n\n.mdi-relation-one-to-zero-or-one::before {\n  content: \"\\F14A7\";\n}\n\n.mdi-relation-only-one-to-many::before {\n  content: \"\\F14A8\";\n}\n\n.mdi-relation-only-one-to-one::before {\n  content: \"\\F14A9\";\n}\n\n.mdi-relation-only-one-to-one-or-many::before {\n  content: \"\\F14AA\";\n}\n\n.mdi-relation-only-one-to-only-one::before {\n  content: \"\\F14AB\";\n}\n\n.mdi-relation-only-one-to-zero-or-many::before {\n  content: \"\\F14AC\";\n}\n\n.mdi-relation-only-one-to-zero-or-one::before {\n  content: \"\\F14AD\";\n}\n\n.mdi-relation-zero-or-many-to-many::before {\n  content: \"\\F14AE\";\n}\n\n.mdi-relation-zero-or-many-to-one::before {\n  content: \"\\F14AF\";\n}\n\n.mdi-relation-zero-or-many-to-one-or-many::before {\n  content: \"\\F14B0\";\n}\n\n.mdi-relation-zero-or-many-to-only-one::before {\n  content: \"\\F14B1\";\n}\n\n.mdi-relation-zero-or-many-to-zero-or-many::before {\n  content: \"\\F14B2\";\n}\n\n.mdi-relation-zero-or-many-to-zero-or-one::before {\n  content: \"\\F14B3\";\n}\n\n.mdi-relation-zero-or-one-to-many::before {\n  content: \"\\F14B4\";\n}\n\n.mdi-relation-zero-or-one-to-one::before {\n  content: \"\\F14B5\";\n}\n\n.mdi-relation-zero-or-one-to-one-or-many::before {\n  content: \"\\F14B6\";\n}\n\n.mdi-relation-zero-or-one-to-only-one::before {\n  content: \"\\F14B7\";\n}\n\n.mdi-relation-zero-or-one-to-zero-or-many::before {\n  content: \"\\F14B8\";\n}\n\n.mdi-relation-zero-or-one-to-zero-or-one::before {\n  content: \"\\F14B9\";\n}\n\n.mdi-relative-scale::before {\n  content: \"\\F0452\";\n}\n\n.mdi-reload::before {\n  content: \"\\F0453\";\n}\n\n.mdi-reload-alert::before {\n  content: \"\\F110B\";\n}\n\n.mdi-reminder::before {\n  content: \"\\F088C\";\n}\n\n.mdi-remote::before {\n  content: \"\\F0454\";\n}\n\n.mdi-remote-desktop::before {\n  content: \"\\F08B9\";\n}\n\n.mdi-remote-off::before {\n  content: \"\\F0EC4\";\n}\n\n.mdi-remote-tv::before {\n  content: \"\\F0EC5\";\n}\n\n.mdi-remote-tv-off::before {\n  content: \"\\F0EC6\";\n}\n\n.mdi-rename-box::before {\n  content: \"\\F0455\";\n}\n\n.mdi-reorder-horizontal::before {\n  content: \"\\F0688\";\n}\n\n.mdi-reorder-vertical::before {\n  content: \"\\F0689\";\n}\n\n.mdi-repeat::before {\n  content: \"\\F0456\";\n}\n\n.mdi-repeat-off::before {\n  content: \"\\F0457\";\n}\n\n.mdi-repeat-once::before {\n  content: \"\\F0458\";\n}\n\n.mdi-replay::before {\n  content: \"\\F0459\";\n}\n\n.mdi-reply::before {\n  content: \"\\F045A\";\n}\n\n.mdi-reply-all::before {\n  content: \"\\F045B\";\n}\n\n.mdi-reply-all-outline::before {\n  content: \"\\F0F1F\";\n}\n\n.mdi-reply-circle::before {\n  content: \"\\F11AE\";\n}\n\n.mdi-reply-outline::before {\n  content: \"\\F0F20\";\n}\n\n.mdi-reproduction::before {\n  content: \"\\F045C\";\n}\n\n.mdi-resistor::before {\n  content: \"\\F0B44\";\n}\n\n.mdi-resistor-nodes::before {\n  content: \"\\F0B45\";\n}\n\n.mdi-resize::before {\n  content: \"\\F0A68\";\n}\n\n.mdi-resize-bottom-right::before {\n  content: \"\\F045D\";\n}\n\n.mdi-responsive::before {\n  content: \"\\F045E\";\n}\n\n.mdi-restart::before {\n  content: \"\\F0709\";\n}\n\n.mdi-restart-alert::before {\n  content: \"\\F110C\";\n}\n\n.mdi-restart-off::before {\n  content: \"\\F0D95\";\n}\n\n.mdi-restore::before {\n  content: \"\\F099B\";\n}\n\n.mdi-restore-alert::before {\n  content: \"\\F110D\";\n}\n\n.mdi-rewind::before {\n  content: \"\\F045F\";\n}\n\n.mdi-rewind-10::before {\n  content: \"\\F0D2A\";\n}\n\n.mdi-rewind-30::before {\n  content: \"\\F0D96\";\n}\n\n.mdi-rewind-5::before {\n  content: \"\\F11F9\";\n}\n\n.mdi-rewind-60::before {\n  content: \"\\F160C\";\n}\n\n.mdi-rewind-outline::before {\n  content: \"\\F070A\";\n}\n\n.mdi-rhombus::before {\n  content: \"\\F070B\";\n}\n\n.mdi-rhombus-medium::before {\n  content: \"\\F0A10\";\n}\n\n.mdi-rhombus-medium-outline::before {\n  content: \"\\F14DC\";\n}\n\n.mdi-rhombus-outline::before {\n  content: \"\\F070C\";\n}\n\n.mdi-rhombus-split::before {\n  content: \"\\F0A11\";\n}\n\n.mdi-rhombus-split-outline::before {\n  content: \"\\F14DD\";\n}\n\n.mdi-ribbon::before {\n  content: \"\\F0460\";\n}\n\n.mdi-rice::before {\n  content: \"\\F07EA\";\n}\n\n.mdi-rickshaw::before {\n  content: \"\\F15BB\";\n}\n\n.mdi-rickshaw-electric::before {\n  content: \"\\F15BC\";\n}\n\n.mdi-ring::before {\n  content: \"\\F07EB\";\n}\n\n.mdi-rivet::before {\n  content: \"\\F0E60\";\n}\n\n.mdi-road::before {\n  content: \"\\F0461\";\n}\n\n.mdi-road-variant::before {\n  content: \"\\F0462\";\n}\n\n.mdi-robber::before {\n  content: \"\\F1058\";\n}\n\n.mdi-robot::before {\n  content: \"\\F06A9\";\n}\n\n.mdi-robot-angry::before {\n  content: \"\\F169D\";\n}\n\n.mdi-robot-angry-outline::before {\n  content: \"\\F169E\";\n}\n\n.mdi-robot-confused::before {\n  content: \"\\F169F\";\n}\n\n.mdi-robot-confused-outline::before {\n  content: \"\\F16A0\";\n}\n\n.mdi-robot-dead::before {\n  content: \"\\F16A1\";\n}\n\n.mdi-robot-dead-outline::before {\n  content: \"\\F16A2\";\n}\n\n.mdi-robot-excited::before {\n  content: \"\\F16A3\";\n}\n\n.mdi-robot-excited-outline::before {\n  content: \"\\F16A4\";\n}\n\n.mdi-robot-happy::before {\n  content: \"\\F1719\";\n}\n\n.mdi-robot-happy-outline::before {\n  content: \"\\F171A\";\n}\n\n.mdi-robot-industrial::before {\n  content: \"\\F0B46\";\n}\n\n.mdi-robot-love::before {\n  content: \"\\F16A5\";\n}\n\n.mdi-robot-love-outline::before {\n  content: \"\\F16A6\";\n}\n\n.mdi-robot-mower::before {\n  content: \"\\F11F7\";\n}\n\n.mdi-robot-mower-outline::before {\n  content: \"\\F11F3\";\n}\n\n.mdi-robot-off::before {\n  content: \"\\F16A7\";\n}\n\n.mdi-robot-off-outline::before {\n  content: \"\\F167B\";\n}\n\n.mdi-robot-outline::before {\n  content: \"\\F167A\";\n}\n\n.mdi-robot-vacuum::before {\n  content: \"\\F070D\";\n}\n\n.mdi-robot-vacuum-variant::before {\n  content: \"\\F0908\";\n}\n\n.mdi-rocket::before {\n  content: \"\\F0463\";\n}\n\n.mdi-rocket-launch::before {\n  content: \"\\F14DE\";\n}\n\n.mdi-rocket-launch-outline::before {\n  content: \"\\F14DF\";\n}\n\n.mdi-rocket-outline::before {\n  content: \"\\F13AF\";\n}\n\n.mdi-rodent::before {\n  content: \"\\F1327\";\n}\n\n.mdi-roller-skate::before {\n  content: \"\\F0D2B\";\n}\n\n.mdi-roller-skate-off::before {\n  content: \"\\F0145\";\n}\n\n.mdi-rollerblade::before {\n  content: \"\\F0D2C\";\n}\n\n.mdi-rollerblade-off::before {\n  content: \"\\F002E\";\n}\n\n.mdi-rollupjs::before {\n  content: \"\\F0BC0\";\n}\n\n.mdi-roman-numeral-1::before {\n  content: \"\\F1088\";\n}\n\n.mdi-roman-numeral-10::before {\n  content: \"\\F1091\";\n}\n\n.mdi-roman-numeral-2::before {\n  content: \"\\F1089\";\n}\n\n.mdi-roman-numeral-3::before {\n  content: \"\\F108A\";\n}\n\n.mdi-roman-numeral-4::before {\n  content: \"\\F108B\";\n}\n\n.mdi-roman-numeral-5::before {\n  content: \"\\F108C\";\n}\n\n.mdi-roman-numeral-6::before {\n  content: \"\\F108D\";\n}\n\n.mdi-roman-numeral-7::before {\n  content: \"\\F108E\";\n}\n\n.mdi-roman-numeral-8::before {\n  content: \"\\F108F\";\n}\n\n.mdi-roman-numeral-9::before {\n  content: \"\\F1090\";\n}\n\n.mdi-room-service::before {\n  content: \"\\F088D\";\n}\n\n.mdi-room-service-outline::before {\n  content: \"\\F0D97\";\n}\n\n.mdi-rotate-3d::before {\n  content: \"\\F0EC7\";\n}\n\n.mdi-rotate-3d-variant::before {\n  content: \"\\F0464\";\n}\n\n.mdi-rotate-left::before {\n  content: \"\\F0465\";\n}\n\n.mdi-rotate-left-variant::before {\n  content: \"\\F0466\";\n}\n\n.mdi-rotate-orbit::before {\n  content: \"\\F0D98\";\n}\n\n.mdi-rotate-right::before {\n  content: \"\\F0467\";\n}\n\n.mdi-rotate-right-variant::before {\n  content: \"\\F0468\";\n}\n\n.mdi-rounded-corner::before {\n  content: \"\\F0607\";\n}\n\n.mdi-router::before {\n  content: \"\\F11E2\";\n}\n\n.mdi-router-network::before {\n  content: \"\\F1087\";\n}\n\n.mdi-router-wireless::before {\n  content: \"\\F0469\";\n}\n\n.mdi-router-wireless-off::before {\n  content: \"\\F15A3\";\n}\n\n.mdi-router-wireless-settings::before {\n  content: \"\\F0A69\";\n}\n\n.mdi-routes::before {\n  content: \"\\F046A\";\n}\n\n.mdi-routes-clock::before {\n  content: \"\\F1059\";\n}\n\n.mdi-rowing::before {\n  content: \"\\F0608\";\n}\n\n.mdi-rss::before {\n  content: \"\\F046B\";\n}\n\n.mdi-rss-box::before {\n  content: \"\\F046C\";\n}\n\n.mdi-rss-off::before {\n  content: \"\\F0F21\";\n}\n\n.mdi-rug::before {\n  content: \"\\F1475\";\n}\n\n.mdi-rugby::before {\n  content: \"\\F0D99\";\n}\n\n.mdi-ruler::before {\n  content: \"\\F046D\";\n}\n\n.mdi-ruler-square::before {\n  content: \"\\F0CC2\";\n}\n\n.mdi-ruler-square-compass::before {\n  content: \"\\F0EBE\";\n}\n\n.mdi-run::before {\n  content: \"\\F070E\";\n}\n\n.mdi-run-fast::before {\n  content: \"\\F046E\";\n}\n\n.mdi-rv-truck::before {\n  content: \"\\F11D4\";\n}\n\n.mdi-sack::before {\n  content: \"\\F0D2E\";\n}\n\n.mdi-sack-percent::before {\n  content: \"\\F0D2F\";\n}\n\n.mdi-safe::before {\n  content: \"\\F0A6A\";\n}\n\n.mdi-safe-square::before {\n  content: \"\\F127C\";\n}\n\n.mdi-safe-square-outline::before {\n  content: \"\\F127D\";\n}\n\n.mdi-safety-goggles::before {\n  content: \"\\F0D30\";\n}\n\n.mdi-sail-boat::before {\n  content: \"\\F0EC8\";\n}\n\n.mdi-sale::before {\n  content: \"\\F046F\";\n}\n\n.mdi-salesforce::before {\n  content: \"\\F088E\";\n}\n\n.mdi-sass::before {\n  content: \"\\F07EC\";\n}\n\n.mdi-satellite::before {\n  content: \"\\F0470\";\n}\n\n.mdi-satellite-uplink::before {\n  content: \"\\F0909\";\n}\n\n.mdi-satellite-variant::before {\n  content: \"\\F0471\";\n}\n\n.mdi-sausage::before {\n  content: \"\\F08BA\";\n}\n\n.mdi-saw-blade::before {\n  content: \"\\F0E61\";\n}\n\n.mdi-sawtooth-wave::before {\n  content: \"\\F147A\";\n}\n\n.mdi-saxophone::before {\n  content: \"\\F0609\";\n}\n\n.mdi-scale::before {\n  content: \"\\F0472\";\n}\n\n.mdi-scale-balance::before {\n  content: \"\\F05D1\";\n}\n\n.mdi-scale-bathroom::before {\n  content: \"\\F0473\";\n}\n\n.mdi-scale-off::before {\n  content: \"\\F105A\";\n}\n\n.mdi-scan-helper::before {\n  content: \"\\F13D8\";\n}\n\n.mdi-scanner::before {\n  content: \"\\F06AB\";\n}\n\n.mdi-scanner-off::before {\n  content: \"\\F090A\";\n}\n\n.mdi-scatter-plot::before {\n  content: \"\\F0EC9\";\n}\n\n.mdi-scatter-plot-outline::before {\n  content: \"\\F0ECA\";\n}\n\n.mdi-school::before {\n  content: \"\\F0474\";\n}\n\n.mdi-school-outline::before {\n  content: \"\\F1180\";\n}\n\n.mdi-scissors-cutting::before {\n  content: \"\\F0A6B\";\n}\n\n.mdi-scooter::before {\n  content: \"\\F15BD\";\n}\n\n.mdi-scooter-electric::before {\n  content: \"\\F15BE\";\n}\n\n.mdi-scoreboard::before {\n  content: \"\\F127E\";\n}\n\n.mdi-scoreboard-outline::before {\n  content: \"\\F127F\";\n}\n\n.mdi-screen-rotation::before {\n  content: \"\\F0475\";\n}\n\n.mdi-screen-rotation-lock::before {\n  content: \"\\F0478\";\n}\n\n.mdi-screw-flat-top::before {\n  content: \"\\F0DF3\";\n}\n\n.mdi-screw-lag::before {\n  content: \"\\F0DF4\";\n}\n\n.mdi-screw-machine-flat-top::before {\n  content: \"\\F0DF5\";\n}\n\n.mdi-screw-machine-round-top::before {\n  content: \"\\F0DF6\";\n}\n\n.mdi-screw-round-top::before {\n  content: \"\\F0DF7\";\n}\n\n.mdi-screwdriver::before {\n  content: \"\\F0476\";\n}\n\n.mdi-script::before {\n  content: \"\\F0BC1\";\n}\n\n.mdi-script-outline::before {\n  content: \"\\F0477\";\n}\n\n.mdi-script-text::before {\n  content: \"\\F0BC2\";\n}\n\n.mdi-script-text-key::before {\n  content: \"\\F1725\";\n}\n\n.mdi-script-text-key-outline::before {\n  content: \"\\F1726\";\n}\n\n.mdi-script-text-outline::before {\n  content: \"\\F0BC3\";\n}\n\n.mdi-script-text-play::before {\n  content: \"\\F1727\";\n}\n\n.mdi-script-text-play-outline::before {\n  content: \"\\F1728\";\n}\n\n.mdi-sd::before {\n  content: \"\\F0479\";\n}\n\n.mdi-seal::before {\n  content: \"\\F047A\";\n}\n\n.mdi-seal-variant::before {\n  content: \"\\F0FD9\";\n}\n\n.mdi-search-web::before {\n  content: \"\\F070F\";\n}\n\n.mdi-seat::before {\n  content: \"\\F0CC3\";\n}\n\n.mdi-seat-flat::before {\n  content: \"\\F047B\";\n}\n\n.mdi-seat-flat-angled::before {\n  content: \"\\F047C\";\n}\n\n.mdi-seat-individual-suite::before {\n  content: \"\\F047D\";\n}\n\n.mdi-seat-legroom-extra::before {\n  content: \"\\F047E\";\n}\n\n.mdi-seat-legroom-normal::before {\n  content: \"\\F047F\";\n}\n\n.mdi-seat-legroom-reduced::before {\n  content: \"\\F0480\";\n}\n\n.mdi-seat-outline::before {\n  content: \"\\F0CC4\";\n}\n\n.mdi-seat-passenger::before {\n  content: \"\\F1249\";\n}\n\n.mdi-seat-recline-extra::before {\n  content: \"\\F0481\";\n}\n\n.mdi-seat-recline-normal::before {\n  content: \"\\F0482\";\n}\n\n.mdi-seatbelt::before {\n  content: \"\\F0CC5\";\n}\n\n.mdi-security::before {\n  content: \"\\F0483\";\n}\n\n.mdi-security-network::before {\n  content: \"\\F0484\";\n}\n\n.mdi-seed::before {\n  content: \"\\F0E62\";\n}\n\n.mdi-seed-off::before {\n  content: \"\\F13FD\";\n}\n\n.mdi-seed-off-outline::before {\n  content: \"\\F13FE\";\n}\n\n.mdi-seed-outline::before {\n  content: \"\\F0E63\";\n}\n\n.mdi-seesaw::before {\n  content: \"\\F15A4\";\n}\n\n.mdi-segment::before {\n  content: \"\\F0ECB\";\n}\n\n.mdi-select::before {\n  content: \"\\F0485\";\n}\n\n.mdi-select-all::before {\n  content: \"\\F0486\";\n}\n\n.mdi-select-color::before {\n  content: \"\\F0D31\";\n}\n\n.mdi-select-compare::before {\n  content: \"\\F0AD9\";\n}\n\n.mdi-select-drag::before {\n  content: \"\\F0A6C\";\n}\n\n.mdi-select-group::before {\n  content: \"\\F0F82\";\n}\n\n.mdi-select-inverse::before {\n  content: \"\\F0487\";\n}\n\n.mdi-select-marker::before {\n  content: \"\\F1280\";\n}\n\n.mdi-select-multiple::before {\n  content: \"\\F1281\";\n}\n\n.mdi-select-multiple-marker::before {\n  content: \"\\F1282\";\n}\n\n.mdi-select-off::before {\n  content: \"\\F0488\";\n}\n\n.mdi-select-place::before {\n  content: \"\\F0FDA\";\n}\n\n.mdi-select-search::before {\n  content: \"\\F1204\";\n}\n\n.mdi-selection::before {\n  content: \"\\F0489\";\n}\n\n.mdi-selection-drag::before {\n  content: \"\\F0A6D\";\n}\n\n.mdi-selection-ellipse::before {\n  content: \"\\F0D32\";\n}\n\n.mdi-selection-ellipse-arrow-inside::before {\n  content: \"\\F0F22\";\n}\n\n.mdi-selection-marker::before {\n  content: \"\\F1283\";\n}\n\n.mdi-selection-multiple::before {\n  content: \"\\F1285\";\n}\n\n.mdi-selection-multiple-marker::before {\n  content: \"\\F1284\";\n}\n\n.mdi-selection-off::before {\n  content: \"\\F0777\";\n}\n\n.mdi-selection-search::before {\n  content: \"\\F1205\";\n}\n\n.mdi-semantic-web::before {\n  content: \"\\F1316\";\n}\n\n.mdi-send::before {\n  content: \"\\F048A\";\n}\n\n.mdi-send-check::before {\n  content: \"\\F1161\";\n}\n\n.mdi-send-check-outline::before {\n  content: \"\\F1162\";\n}\n\n.mdi-send-circle::before {\n  content: \"\\F0DF8\";\n}\n\n.mdi-send-circle-outline::before {\n  content: \"\\F0DF9\";\n}\n\n.mdi-send-clock::before {\n  content: \"\\F1163\";\n}\n\n.mdi-send-clock-outline::before {\n  content: \"\\F1164\";\n}\n\n.mdi-send-lock::before {\n  content: \"\\F07ED\";\n}\n\n.mdi-send-lock-outline::before {\n  content: \"\\F1166\";\n}\n\n.mdi-send-outline::before {\n  content: \"\\F1165\";\n}\n\n.mdi-serial-port::before {\n  content: \"\\F065C\";\n}\n\n.mdi-server::before {\n  content: \"\\F048B\";\n}\n\n.mdi-server-minus::before {\n  content: \"\\F048C\";\n}\n\n.mdi-server-network::before {\n  content: \"\\F048D\";\n}\n\n.mdi-server-network-off::before {\n  content: \"\\F048E\";\n}\n\n.mdi-server-off::before {\n  content: \"\\F048F\";\n}\n\n.mdi-server-plus::before {\n  content: \"\\F0490\";\n}\n\n.mdi-server-remove::before {\n  content: \"\\F0491\";\n}\n\n.mdi-server-security::before {\n  content: \"\\F0492\";\n}\n\n.mdi-set-all::before {\n  content: \"\\F0778\";\n}\n\n.mdi-set-center::before {\n  content: \"\\F0779\";\n}\n\n.mdi-set-center-right::before {\n  content: \"\\F077A\";\n}\n\n.mdi-set-left::before {\n  content: \"\\F077B\";\n}\n\n.mdi-set-left-center::before {\n  content: \"\\F077C\";\n}\n\n.mdi-set-left-right::before {\n  content: \"\\F077D\";\n}\n\n.mdi-set-merge::before {\n  content: \"\\F14E0\";\n}\n\n.mdi-set-none::before {\n  content: \"\\F077E\";\n}\n\n.mdi-set-right::before {\n  content: \"\\F077F\";\n}\n\n.mdi-set-split::before {\n  content: \"\\F14E1\";\n}\n\n.mdi-set-square::before {\n  content: \"\\F145D\";\n}\n\n.mdi-set-top-box::before {\n  content: \"\\F099F\";\n}\n\n.mdi-settings-helper::before {\n  content: \"\\F0A6E\";\n}\n\n.mdi-shaker::before {\n  content: \"\\F110E\";\n}\n\n.mdi-shaker-outline::before {\n  content: \"\\F110F\";\n}\n\n.mdi-shape::before {\n  content: \"\\F0831\";\n}\n\n.mdi-shape-circle-plus::before {\n  content: \"\\F065D\";\n}\n\n.mdi-shape-outline::before {\n  content: \"\\F0832\";\n}\n\n.mdi-shape-oval-plus::before {\n  content: \"\\F11FA\";\n}\n\n.mdi-shape-plus::before {\n  content: \"\\F0495\";\n}\n\n.mdi-shape-polygon-plus::before {\n  content: \"\\F065E\";\n}\n\n.mdi-shape-rectangle-plus::before {\n  content: \"\\F065F\";\n}\n\n.mdi-shape-square-plus::before {\n  content: \"\\F0660\";\n}\n\n.mdi-shape-square-rounded-plus::before {\n  content: \"\\F14FA\";\n}\n\n.mdi-share::before {\n  content: \"\\F0496\";\n}\n\n.mdi-share-all::before {\n  content: \"\\F11F4\";\n}\n\n.mdi-share-all-outline::before {\n  content: \"\\F11F5\";\n}\n\n.mdi-share-circle::before {\n  content: \"\\F11AD\";\n}\n\n.mdi-share-off::before {\n  content: \"\\F0F23\";\n}\n\n.mdi-share-off-outline::before {\n  content: \"\\F0F24\";\n}\n\n.mdi-share-outline::before {\n  content: \"\\F0932\";\n}\n\n.mdi-share-variant::before {\n  content: \"\\F0497\";\n}\n\n.mdi-share-variant-outline::before {\n  content: \"\\F1514\";\n}\n\n.mdi-shark-fin::before {\n  content: \"\\F1673\";\n}\n\n.mdi-shark-fin-outline::before {\n  content: \"\\F1674\";\n}\n\n.mdi-sheep::before {\n  content: \"\\F0CC6\";\n}\n\n.mdi-shield::before {\n  content: \"\\F0498\";\n}\n\n.mdi-shield-account::before {\n  content: \"\\F088F\";\n}\n\n.mdi-shield-account-outline::before {\n  content: \"\\F0A12\";\n}\n\n.mdi-shield-account-variant::before {\n  content: \"\\F15A7\";\n}\n\n.mdi-shield-account-variant-outline::before {\n  content: \"\\F15A8\";\n}\n\n.mdi-shield-airplane::before {\n  content: \"\\F06BB\";\n}\n\n.mdi-shield-airplane-outline::before {\n  content: \"\\F0CC7\";\n}\n\n.mdi-shield-alert::before {\n  content: \"\\F0ECC\";\n}\n\n.mdi-shield-alert-outline::before {\n  content: \"\\F0ECD\";\n}\n\n.mdi-shield-bug::before {\n  content: \"\\F13DA\";\n}\n\n.mdi-shield-bug-outline::before {\n  content: \"\\F13DB\";\n}\n\n.mdi-shield-car::before {\n  content: \"\\F0F83\";\n}\n\n.mdi-shield-check::before {\n  content: \"\\F0565\";\n}\n\n.mdi-shield-check-outline::before {\n  content: \"\\F0CC8\";\n}\n\n.mdi-shield-cross::before {\n  content: \"\\F0CC9\";\n}\n\n.mdi-shield-cross-outline::before {\n  content: \"\\F0CCA\";\n}\n\n.mdi-shield-edit::before {\n  content: \"\\F11A0\";\n}\n\n.mdi-shield-edit-outline::before {\n  content: \"\\F11A1\";\n}\n\n.mdi-shield-half::before {\n  content: \"\\F1360\";\n}\n\n.mdi-shield-half-full::before {\n  content: \"\\F0780\";\n}\n\n.mdi-shield-home::before {\n  content: \"\\F068A\";\n}\n\n.mdi-shield-home-outline::before {\n  content: \"\\F0CCB\";\n}\n\n.mdi-shield-key::before {\n  content: \"\\F0BC4\";\n}\n\n.mdi-shield-key-outline::before {\n  content: \"\\F0BC5\";\n}\n\n.mdi-shield-link-variant::before {\n  content: \"\\F0D33\";\n}\n\n.mdi-shield-link-variant-outline::before {\n  content: \"\\F0D34\";\n}\n\n.mdi-shield-lock::before {\n  content: \"\\F099D\";\n}\n\n.mdi-shield-lock-outline::before {\n  content: \"\\F0CCC\";\n}\n\n.mdi-shield-off::before {\n  content: \"\\F099E\";\n}\n\n.mdi-shield-off-outline::before {\n  content: \"\\F099C\";\n}\n\n.mdi-shield-outline::before {\n  content: \"\\F0499\";\n}\n\n.mdi-shield-plus::before {\n  content: \"\\F0ADA\";\n}\n\n.mdi-shield-plus-outline::before {\n  content: \"\\F0ADB\";\n}\n\n.mdi-shield-refresh::before {\n  content: \"\\F00AA\";\n}\n\n.mdi-shield-refresh-outline::before {\n  content: \"\\F01E0\";\n}\n\n.mdi-shield-remove::before {\n  content: \"\\F0ADC\";\n}\n\n.mdi-shield-remove-outline::before {\n  content: \"\\F0ADD\";\n}\n\n.mdi-shield-search::before {\n  content: \"\\F0D9A\";\n}\n\n.mdi-shield-star::before {\n  content: \"\\F113B\";\n}\n\n.mdi-shield-star-outline::before {\n  content: \"\\F113C\";\n}\n\n.mdi-shield-sun::before {\n  content: \"\\F105D\";\n}\n\n.mdi-shield-sun-outline::before {\n  content: \"\\F105E\";\n}\n\n.mdi-shield-sync::before {\n  content: \"\\F11A2\";\n}\n\n.mdi-shield-sync-outline::before {\n  content: \"\\F11A3\";\n}\n\n.mdi-ship-wheel::before {\n  content: \"\\F0833\";\n}\n\n.mdi-shoe-ballet::before {\n  content: \"\\F15CA\";\n}\n\n.mdi-shoe-cleat::before {\n  content: \"\\F15C7\";\n}\n\n.mdi-shoe-formal::before {\n  content: \"\\F0B47\";\n}\n\n.mdi-shoe-heel::before {\n  content: \"\\F0B48\";\n}\n\n.mdi-shoe-print::before {\n  content: \"\\F0DFA\";\n}\n\n.mdi-shoe-sneaker::before {\n  content: \"\\F15C8\";\n}\n\n.mdi-shopping::before {\n  content: \"\\F049A\";\n}\n\n.mdi-shopping-music::before {\n  content: \"\\F049B\";\n}\n\n.mdi-shopping-outline::before {\n  content: \"\\F11D5\";\n}\n\n.mdi-shopping-search::before {\n  content: \"\\F0F84\";\n}\n\n.mdi-shore::before {\n  content: \"\\F14F9\";\n}\n\n.mdi-shovel::before {\n  content: \"\\F0710\";\n}\n\n.mdi-shovel-off::before {\n  content: \"\\F0711\";\n}\n\n.mdi-shower::before {\n  content: \"\\F09A0\";\n}\n\n.mdi-shower-head::before {\n  content: \"\\F09A1\";\n}\n\n.mdi-shredder::before {\n  content: \"\\F049C\";\n}\n\n.mdi-shuffle::before {\n  content: \"\\F049D\";\n}\n\n.mdi-shuffle-disabled::before {\n  content: \"\\F049E\";\n}\n\n.mdi-shuffle-variant::before {\n  content: \"\\F049F\";\n}\n\n.mdi-shuriken::before {\n  content: \"\\F137F\";\n}\n\n.mdi-sigma::before {\n  content: \"\\F04A0\";\n}\n\n.mdi-sigma-lower::before {\n  content: \"\\F062B\";\n}\n\n.mdi-sign-caution::before {\n  content: \"\\F04A1\";\n}\n\n.mdi-sign-direction::before {\n  content: \"\\F0781\";\n}\n\n.mdi-sign-direction-minus::before {\n  content: \"\\F1000\";\n}\n\n.mdi-sign-direction-plus::before {\n  content: \"\\F0FDC\";\n}\n\n.mdi-sign-direction-remove::before {\n  content: \"\\F0FDD\";\n}\n\n.mdi-sign-pole::before {\n  content: \"\\F14F8\";\n}\n\n.mdi-sign-real-estate::before {\n  content: \"\\F1118\";\n}\n\n.mdi-sign-text::before {\n  content: \"\\F0782\";\n}\n\n.mdi-signal::before {\n  content: \"\\F04A2\";\n}\n\n.mdi-signal-2g::before {\n  content: \"\\F0712\";\n}\n\n.mdi-signal-3g::before {\n  content: \"\\F0713\";\n}\n\n.mdi-signal-4g::before {\n  content: \"\\F0714\";\n}\n\n.mdi-signal-5g::before {\n  content: \"\\F0A6F\";\n}\n\n.mdi-signal-cellular-1::before {\n  content: \"\\F08BC\";\n}\n\n.mdi-signal-cellular-2::before {\n  content: \"\\F08BD\";\n}\n\n.mdi-signal-cellular-3::before {\n  content: \"\\F08BE\";\n}\n\n.mdi-signal-cellular-outline::before {\n  content: \"\\F08BF\";\n}\n\n.mdi-signal-distance-variant::before {\n  content: \"\\F0E64\";\n}\n\n.mdi-signal-hspa::before {\n  content: \"\\F0715\";\n}\n\n.mdi-signal-hspa-plus::before {\n  content: \"\\F0716\";\n}\n\n.mdi-signal-off::before {\n  content: \"\\F0783\";\n}\n\n.mdi-signal-variant::before {\n  content: \"\\F060A\";\n}\n\n.mdi-signature::before {\n  content: \"\\F0DFB\";\n}\n\n.mdi-signature-freehand::before {\n  content: \"\\F0DFC\";\n}\n\n.mdi-signature-image::before {\n  content: \"\\F0DFD\";\n}\n\n.mdi-signature-text::before {\n  content: \"\\F0DFE\";\n}\n\n.mdi-silo::before {\n  content: \"\\F0B49\";\n}\n\n.mdi-silverware::before {\n  content: \"\\F04A3\";\n}\n\n.mdi-silverware-clean::before {\n  content: \"\\F0FDE\";\n}\n\n.mdi-silverware-fork::before {\n  content: \"\\F04A4\";\n}\n\n.mdi-silverware-fork-knife::before {\n  content: \"\\F0A70\";\n}\n\n.mdi-silverware-spoon::before {\n  content: \"\\F04A5\";\n}\n\n.mdi-silverware-variant::before {\n  content: \"\\F04A6\";\n}\n\n.mdi-sim::before {\n  content: \"\\F04A7\";\n}\n\n.mdi-sim-alert::before {\n  content: \"\\F04A8\";\n}\n\n.mdi-sim-alert-outline::before {\n  content: \"\\F15D3\";\n}\n\n.mdi-sim-off::before {\n  content: \"\\F04A9\";\n}\n\n.mdi-sim-off-outline::before {\n  content: \"\\F15D4\";\n}\n\n.mdi-sim-outline::before {\n  content: \"\\F15D5\";\n}\n\n.mdi-simple-icons::before {\n  content: \"\\F131D\";\n}\n\n.mdi-sina-weibo::before {\n  content: \"\\F0ADF\";\n}\n\n.mdi-sine-wave::before {\n  content: \"\\F095B\";\n}\n\n.mdi-sitemap::before {\n  content: \"\\F04AA\";\n}\n\n.mdi-size-l::before {\n  content: \"\\F13A6\";\n}\n\n.mdi-size-m::before {\n  content: \"\\F13A5\";\n}\n\n.mdi-size-s::before {\n  content: \"\\F13A4\";\n}\n\n.mdi-size-xl::before {\n  content: \"\\F13A7\";\n}\n\n.mdi-size-xs::before {\n  content: \"\\F13A3\";\n}\n\n.mdi-size-xxl::before {\n  content: \"\\F13A8\";\n}\n\n.mdi-size-xxs::before {\n  content: \"\\F13A2\";\n}\n\n.mdi-size-xxxl::before {\n  content: \"\\F13A9\";\n}\n\n.mdi-skate::before {\n  content: \"\\F0D35\";\n}\n\n.mdi-skateboard::before {\n  content: \"\\F14C2\";\n}\n\n.mdi-skew-less::before {\n  content: \"\\F0D36\";\n}\n\n.mdi-skew-more::before {\n  content: \"\\F0D37\";\n}\n\n.mdi-ski::before {\n  content: \"\\F1304\";\n}\n\n.mdi-ski-cross-country::before {\n  content: \"\\F1305\";\n}\n\n.mdi-ski-water::before {\n  content: \"\\F1306\";\n}\n\n.mdi-skip-backward::before {\n  content: \"\\F04AB\";\n}\n\n.mdi-skip-backward-outline::before {\n  content: \"\\F0F25\";\n}\n\n.mdi-skip-forward::before {\n  content: \"\\F04AC\";\n}\n\n.mdi-skip-forward-outline::before {\n  content: \"\\F0F26\";\n}\n\n.mdi-skip-next::before {\n  content: \"\\F04AD\";\n}\n\n.mdi-skip-next-circle::before {\n  content: \"\\F0661\";\n}\n\n.mdi-skip-next-circle-outline::before {\n  content: \"\\F0662\";\n}\n\n.mdi-skip-next-outline::before {\n  content: \"\\F0F27\";\n}\n\n.mdi-skip-previous::before {\n  content: \"\\F04AE\";\n}\n\n.mdi-skip-previous-circle::before {\n  content: \"\\F0663\";\n}\n\n.mdi-skip-previous-circle-outline::before {\n  content: \"\\F0664\";\n}\n\n.mdi-skip-previous-outline::before {\n  content: \"\\F0F28\";\n}\n\n.mdi-skull::before {\n  content: \"\\F068C\";\n}\n\n.mdi-skull-crossbones::before {\n  content: \"\\F0BC6\";\n}\n\n.mdi-skull-crossbones-outline::before {\n  content: \"\\F0BC7\";\n}\n\n.mdi-skull-outline::before {\n  content: \"\\F0BC8\";\n}\n\n.mdi-skull-scan::before {\n  content: \"\\F14C7\";\n}\n\n.mdi-skull-scan-outline::before {\n  content: \"\\F14C8\";\n}\n\n.mdi-skype::before {\n  content: \"\\F04AF\";\n}\n\n.mdi-skype-business::before {\n  content: \"\\F04B0\";\n}\n\n.mdi-slack::before {\n  content: \"\\F04B1\";\n}\n\n.mdi-slash-forward::before {\n  content: \"\\F0FDF\";\n}\n\n.mdi-slash-forward-box::before {\n  content: \"\\F0FE0\";\n}\n\n.mdi-sleep::before {\n  content: \"\\F04B2\";\n}\n\n.mdi-sleep-off::before {\n  content: \"\\F04B3\";\n}\n\n.mdi-slide::before {\n  content: \"\\F15A5\";\n}\n\n.mdi-slope-downhill::before {\n  content: \"\\F0DFF\";\n}\n\n.mdi-slope-uphill::before {\n  content: \"\\F0E00\";\n}\n\n.mdi-slot-machine::before {\n  content: \"\\F1114\";\n}\n\n.mdi-slot-machine-outline::before {\n  content: \"\\F1115\";\n}\n\n.mdi-smart-card::before {\n  content: \"\\F10BD\";\n}\n\n.mdi-smart-card-outline::before {\n  content: \"\\F10BE\";\n}\n\n.mdi-smart-card-reader::before {\n  content: \"\\F10BF\";\n}\n\n.mdi-smart-card-reader-outline::before {\n  content: \"\\F10C0\";\n}\n\n.mdi-smog::before {\n  content: \"\\F0A71\";\n}\n\n.mdi-smoke-detector::before {\n  content: \"\\F0392\";\n}\n\n.mdi-smoking::before {\n  content: \"\\F04B4\";\n}\n\n.mdi-smoking-off::before {\n  content: \"\\F04B5\";\n}\n\n.mdi-smoking-pipe::before {\n  content: \"\\F140D\";\n}\n\n.mdi-smoking-pipe-off::before {\n  content: \"\\F1428\";\n}\n\n.mdi-snail::before {\n  content: \"\\F1677\";\n}\n\n.mdi-snake::before {\n  content: \"\\F150E\";\n}\n\n.mdi-snapchat::before {\n  content: \"\\F04B6\";\n}\n\n.mdi-snowboard::before {\n  content: \"\\F1307\";\n}\n\n.mdi-snowflake::before {\n  content: \"\\F0717\";\n}\n\n.mdi-snowflake-alert::before {\n  content: \"\\F0F29\";\n}\n\n.mdi-snowflake-melt::before {\n  content: \"\\F12CB\";\n}\n\n.mdi-snowflake-off::before {\n  content: \"\\F14E3\";\n}\n\n.mdi-snowflake-variant::before {\n  content: \"\\F0F2A\";\n}\n\n.mdi-snowman::before {\n  content: \"\\F04B7\";\n}\n\n.mdi-soccer::before {\n  content: \"\\F04B8\";\n}\n\n.mdi-soccer-field::before {\n  content: \"\\F0834\";\n}\n\n.mdi-social-distance-2-meters::before {\n  content: \"\\F1579\";\n}\n\n.mdi-social-distance-6-feet::before {\n  content: \"\\F157A\";\n}\n\n.mdi-sofa::before {\n  content: \"\\F04B9\";\n}\n\n.mdi-sofa-outline::before {\n  content: \"\\F156D\";\n}\n\n.mdi-sofa-single::before {\n  content: \"\\F156E\";\n}\n\n.mdi-sofa-single-outline::before {\n  content: \"\\F156F\";\n}\n\n.mdi-solar-panel::before {\n  content: \"\\F0D9B\";\n}\n\n.mdi-solar-panel-large::before {\n  content: \"\\F0D9C\";\n}\n\n.mdi-solar-power::before {\n  content: \"\\F0A72\";\n}\n\n.mdi-soldering-iron::before {\n  content: \"\\F1092\";\n}\n\n.mdi-solid::before {\n  content: \"\\F068D\";\n}\n\n.mdi-sony-playstation::before {\n  content: \"\\F0414\";\n}\n\n.mdi-sort::before {\n  content: \"\\F04BA\";\n}\n\n.mdi-sort-alphabetical-ascending::before {\n  content: \"\\F05BD\";\n}\n\n.mdi-sort-alphabetical-ascending-variant::before {\n  content: \"\\F1148\";\n}\n\n.mdi-sort-alphabetical-descending::before {\n  content: \"\\F05BF\";\n}\n\n.mdi-sort-alphabetical-descending-variant::before {\n  content: \"\\F1149\";\n}\n\n.mdi-sort-alphabetical-variant::before {\n  content: \"\\F04BB\";\n}\n\n.mdi-sort-ascending::before {\n  content: \"\\F04BC\";\n}\n\n.mdi-sort-bool-ascending::before {\n  content: \"\\F1385\";\n}\n\n.mdi-sort-bool-ascending-variant::before {\n  content: \"\\F1386\";\n}\n\n.mdi-sort-bool-descending::before {\n  content: \"\\F1387\";\n}\n\n.mdi-sort-bool-descending-variant::before {\n  content: \"\\F1388\";\n}\n\n.mdi-sort-calendar-ascending::before {\n  content: \"\\F1547\";\n}\n\n.mdi-sort-calendar-descending::before {\n  content: \"\\F1548\";\n}\n\n.mdi-sort-clock-ascending::before {\n  content: \"\\F1549\";\n}\n\n.mdi-sort-clock-ascending-outline::before {\n  content: \"\\F154A\";\n}\n\n.mdi-sort-clock-descending::before {\n  content: \"\\F154B\";\n}\n\n.mdi-sort-clock-descending-outline::before {\n  content: \"\\F154C\";\n}\n\n.mdi-sort-descending::before {\n  content: \"\\F04BD\";\n}\n\n.mdi-sort-numeric-ascending::before {\n  content: \"\\F1389\";\n}\n\n.mdi-sort-numeric-ascending-variant::before {\n  content: \"\\F090D\";\n}\n\n.mdi-sort-numeric-descending::before {\n  content: \"\\F138A\";\n}\n\n.mdi-sort-numeric-descending-variant::before {\n  content: \"\\F0AD2\";\n}\n\n.mdi-sort-numeric-variant::before {\n  content: \"\\F04BE\";\n}\n\n.mdi-sort-reverse-variant::before {\n  content: \"\\F033C\";\n}\n\n.mdi-sort-variant::before {\n  content: \"\\F04BF\";\n}\n\n.mdi-sort-variant-lock::before {\n  content: \"\\F0CCD\";\n}\n\n.mdi-sort-variant-lock-open::before {\n  content: \"\\F0CCE\";\n}\n\n.mdi-sort-variant-remove::before {\n  content: \"\\F1147\";\n}\n\n.mdi-soundcloud::before {\n  content: \"\\F04C0\";\n}\n\n.mdi-source-branch::before {\n  content: \"\\F062C\";\n}\n\n.mdi-source-branch-check::before {\n  content: \"\\F14CF\";\n}\n\n.mdi-source-branch-minus::before {\n  content: \"\\F14CB\";\n}\n\n.mdi-source-branch-plus::before {\n  content: \"\\F14CA\";\n}\n\n.mdi-source-branch-refresh::before {\n  content: \"\\F14CD\";\n}\n\n.mdi-source-branch-remove::before {\n  content: \"\\F14CC\";\n}\n\n.mdi-source-branch-sync::before {\n  content: \"\\F14CE\";\n}\n\n.mdi-source-commit::before {\n  content: \"\\F0718\";\n}\n\n.mdi-source-commit-end::before {\n  content: \"\\F0719\";\n}\n\n.mdi-source-commit-end-local::before {\n  content: \"\\F071A\";\n}\n\n.mdi-source-commit-local::before {\n  content: \"\\F071B\";\n}\n\n.mdi-source-commit-next-local::before {\n  content: \"\\F071C\";\n}\n\n.mdi-source-commit-start::before {\n  content: \"\\F071D\";\n}\n\n.mdi-source-commit-start-next-local::before {\n  content: \"\\F071E\";\n}\n\n.mdi-source-fork::before {\n  content: \"\\F04C1\";\n}\n\n.mdi-source-merge::before {\n  content: \"\\F062D\";\n}\n\n.mdi-source-pull::before {\n  content: \"\\F04C2\";\n}\n\n.mdi-source-repository::before {\n  content: \"\\F0CCF\";\n}\n\n.mdi-source-repository-multiple::before {\n  content: \"\\F0CD0\";\n}\n\n.mdi-soy-sauce::before {\n  content: \"\\F07EE\";\n}\n\n.mdi-soy-sauce-off::before {\n  content: \"\\F13FC\";\n}\n\n.mdi-spa::before {\n  content: \"\\F0CD1\";\n}\n\n.mdi-spa-outline::before {\n  content: \"\\F0CD2\";\n}\n\n.mdi-space-invaders::before {\n  content: \"\\F0BC9\";\n}\n\n.mdi-space-station::before {\n  content: \"\\F1383\";\n}\n\n.mdi-spade::before {\n  content: \"\\F0E65\";\n}\n\n.mdi-sparkles::before {\n  content: \"\\F1545\";\n}\n\n.mdi-speaker::before {\n  content: \"\\F04C3\";\n}\n\n.mdi-speaker-bluetooth::before {\n  content: \"\\F09A2\";\n}\n\n.mdi-speaker-multiple::before {\n  content: \"\\F0D38\";\n}\n\n.mdi-speaker-off::before {\n  content: \"\\F04C4\";\n}\n\n.mdi-speaker-wireless::before {\n  content: \"\\F071F\";\n}\n\n.mdi-speedometer::before {\n  content: \"\\F04C5\";\n}\n\n.mdi-speedometer-medium::before {\n  content: \"\\F0F85\";\n}\n\n.mdi-speedometer-slow::before {\n  content: \"\\F0F86\";\n}\n\n.mdi-spellcheck::before {\n  content: \"\\F04C6\";\n}\n\n.mdi-spider::before {\n  content: \"\\F11EA\";\n}\n\n.mdi-spider-thread::before {\n  content: \"\\F11EB\";\n}\n\n.mdi-spider-web::before {\n  content: \"\\F0BCA\";\n}\n\n.mdi-spirit-level::before {\n  content: \"\\F14F1\";\n}\n\n.mdi-spoon-sugar::before {\n  content: \"\\F1429\";\n}\n\n.mdi-spotify::before {\n  content: \"\\F04C7\";\n}\n\n.mdi-spotlight::before {\n  content: \"\\F04C8\";\n}\n\n.mdi-spotlight-beam::before {\n  content: \"\\F04C9\";\n}\n\n.mdi-spray::before {\n  content: \"\\F0665\";\n}\n\n.mdi-spray-bottle::before {\n  content: \"\\F0AE0\";\n}\n\n.mdi-sprinkler::before {\n  content: \"\\F105F\";\n}\n\n.mdi-sprinkler-variant::before {\n  content: \"\\F1060\";\n}\n\n.mdi-sprout::before {\n  content: \"\\F0E66\";\n}\n\n.mdi-sprout-outline::before {\n  content: \"\\F0E67\";\n}\n\n.mdi-square::before {\n  content: \"\\F0764\";\n}\n\n.mdi-square-circle::before {\n  content: \"\\F1500\";\n}\n\n.mdi-square-edit-outline::before {\n  content: \"\\F090C\";\n}\n\n.mdi-square-medium::before {\n  content: \"\\F0A13\";\n}\n\n.mdi-square-medium-outline::before {\n  content: \"\\F0A14\";\n}\n\n.mdi-square-off::before {\n  content: \"\\F12EE\";\n}\n\n.mdi-square-off-outline::before {\n  content: \"\\F12EF\";\n}\n\n.mdi-square-outline::before {\n  content: \"\\F0763\";\n}\n\n.mdi-square-root::before {\n  content: \"\\F0784\";\n}\n\n.mdi-square-root-box::before {\n  content: \"\\F09A3\";\n}\n\n.mdi-square-rounded::before {\n  content: \"\\F14FB\";\n}\n\n.mdi-square-rounded-outline::before {\n  content: \"\\F14FC\";\n}\n\n.mdi-square-small::before {\n  content: \"\\F0A15\";\n}\n\n.mdi-square-wave::before {\n  content: \"\\F147B\";\n}\n\n.mdi-squeegee::before {\n  content: \"\\F0AE1\";\n}\n\n.mdi-ssh::before {\n  content: \"\\F08C0\";\n}\n\n.mdi-stack-exchange::before {\n  content: \"\\F060B\";\n}\n\n.mdi-stack-overflow::before {\n  content: \"\\F04CC\";\n}\n\n.mdi-stackpath::before {\n  content: \"\\F0359\";\n}\n\n.mdi-stadium::before {\n  content: \"\\F0FF9\";\n}\n\n.mdi-stadium-variant::before {\n  content: \"\\F0720\";\n}\n\n.mdi-stairs::before {\n  content: \"\\F04CD\";\n}\n\n.mdi-stairs-box::before {\n  content: \"\\F139E\";\n}\n\n.mdi-stairs-down::before {\n  content: \"\\F12BE\";\n}\n\n.mdi-stairs-up::before {\n  content: \"\\F12BD\";\n}\n\n.mdi-stamper::before {\n  content: \"\\F0D39\";\n}\n\n.mdi-standard-definition::before {\n  content: \"\\F07EF\";\n}\n\n.mdi-star::before {\n  content: \"\\F04CE\";\n}\n\n.mdi-star-box::before {\n  content: \"\\F0A73\";\n}\n\n.mdi-star-box-multiple::before {\n  content: \"\\F1286\";\n}\n\n.mdi-star-box-multiple-outline::before {\n  content: \"\\F1287\";\n}\n\n.mdi-star-box-outline::before {\n  content: \"\\F0A74\";\n}\n\n.mdi-star-check::before {\n  content: \"\\F1566\";\n}\n\n.mdi-star-check-outline::before {\n  content: \"\\F156A\";\n}\n\n.mdi-star-circle::before {\n  content: \"\\F04CF\";\n}\n\n.mdi-star-circle-outline::before {\n  content: \"\\F09A4\";\n}\n\n.mdi-star-cog::before {\n  content: \"\\F1668\";\n}\n\n.mdi-star-cog-outline::before {\n  content: \"\\F1669\";\n}\n\n.mdi-star-face::before {\n  content: \"\\F09A5\";\n}\n\n.mdi-star-four-points::before {\n  content: \"\\F0AE2\";\n}\n\n.mdi-star-four-points-outline::before {\n  content: \"\\F0AE3\";\n}\n\n.mdi-star-half::before {\n  content: \"\\F0246\";\n}\n\n.mdi-star-half-full::before {\n  content: \"\\F04D0\";\n}\n\n.mdi-star-minus::before {\n  content: \"\\F1564\";\n}\n\n.mdi-star-minus-outline::before {\n  content: \"\\F1568\";\n}\n\n.mdi-star-off::before {\n  content: \"\\F04D1\";\n}\n\n.mdi-star-off-outline::before {\n  content: \"\\F155B\";\n}\n\n.mdi-star-outline::before {\n  content: \"\\F04D2\";\n}\n\n.mdi-star-plus::before {\n  content: \"\\F1563\";\n}\n\n.mdi-star-plus-outline::before {\n  content: \"\\F1567\";\n}\n\n.mdi-star-remove::before {\n  content: \"\\F1565\";\n}\n\n.mdi-star-remove-outline::before {\n  content: \"\\F1569\";\n}\n\n.mdi-star-settings::before {\n  content: \"\\F166A\";\n}\n\n.mdi-star-settings-outline::before {\n  content: \"\\F166B\";\n}\n\n.mdi-star-shooting::before {\n  content: \"\\F1741\";\n}\n\n.mdi-star-shooting-outline::before {\n  content: \"\\F1742\";\n}\n\n.mdi-star-three-points::before {\n  content: \"\\F0AE4\";\n}\n\n.mdi-star-three-points-outline::before {\n  content: \"\\F0AE5\";\n}\n\n.mdi-state-machine::before {\n  content: \"\\F11EF\";\n}\n\n.mdi-steam::before {\n  content: \"\\F04D3\";\n}\n\n.mdi-steering::before {\n  content: \"\\F04D4\";\n}\n\n.mdi-steering-off::before {\n  content: \"\\F090E\";\n}\n\n.mdi-step-backward::before {\n  content: \"\\F04D5\";\n}\n\n.mdi-step-backward-2::before {\n  content: \"\\F04D6\";\n}\n\n.mdi-step-forward::before {\n  content: \"\\F04D7\";\n}\n\n.mdi-step-forward-2::before {\n  content: \"\\F04D8\";\n}\n\n.mdi-stethoscope::before {\n  content: \"\\F04D9\";\n}\n\n.mdi-sticker::before {\n  content: \"\\F1364\";\n}\n\n.mdi-sticker-alert::before {\n  content: \"\\F1365\";\n}\n\n.mdi-sticker-alert-outline::before {\n  content: \"\\F1366\";\n}\n\n.mdi-sticker-check::before {\n  content: \"\\F1367\";\n}\n\n.mdi-sticker-check-outline::before {\n  content: \"\\F1368\";\n}\n\n.mdi-sticker-circle-outline::before {\n  content: \"\\F05D0\";\n}\n\n.mdi-sticker-emoji::before {\n  content: \"\\F0785\";\n}\n\n.mdi-sticker-minus::before {\n  content: \"\\F1369\";\n}\n\n.mdi-sticker-minus-outline::before {\n  content: \"\\F136A\";\n}\n\n.mdi-sticker-outline::before {\n  content: \"\\F136B\";\n}\n\n.mdi-sticker-plus::before {\n  content: \"\\F136C\";\n}\n\n.mdi-sticker-plus-outline::before {\n  content: \"\\F136D\";\n}\n\n.mdi-sticker-remove::before {\n  content: \"\\F136E\";\n}\n\n.mdi-sticker-remove-outline::before {\n  content: \"\\F136F\";\n}\n\n.mdi-stocking::before {\n  content: \"\\F04DA\";\n}\n\n.mdi-stomach::before {\n  content: \"\\F1093\";\n}\n\n.mdi-stop::before {\n  content: \"\\F04DB\";\n}\n\n.mdi-stop-circle::before {\n  content: \"\\F0666\";\n}\n\n.mdi-stop-circle-outline::before {\n  content: \"\\F0667\";\n}\n\n.mdi-store::before {\n  content: \"\\F04DC\";\n}\n\n.mdi-store-24-hour::before {\n  content: \"\\F04DD\";\n}\n\n.mdi-store-minus::before {\n  content: \"\\F165E\";\n}\n\n.mdi-store-outline::before {\n  content: \"\\F1361\";\n}\n\n.mdi-store-plus::before {\n  content: \"\\F165F\";\n}\n\n.mdi-store-remove::before {\n  content: \"\\F1660\";\n}\n\n.mdi-storefront::before {\n  content: \"\\F07C7\";\n}\n\n.mdi-storefront-outline::before {\n  content: \"\\F10C1\";\n}\n\n.mdi-stove::before {\n  content: \"\\F04DE\";\n}\n\n.mdi-strategy::before {\n  content: \"\\F11D6\";\n}\n\n.mdi-stretch-to-page::before {\n  content: \"\\F0F2B\";\n}\n\n.mdi-stretch-to-page-outline::before {\n  content: \"\\F0F2C\";\n}\n\n.mdi-string-lights::before {\n  content: \"\\F12BA\";\n}\n\n.mdi-string-lights-off::before {\n  content: \"\\F12BB\";\n}\n\n.mdi-subdirectory-arrow-left::before {\n  content: \"\\F060C\";\n}\n\n.mdi-subdirectory-arrow-right::before {\n  content: \"\\F060D\";\n}\n\n.mdi-submarine::before {\n  content: \"\\F156C\";\n}\n\n.mdi-subtitles::before {\n  content: \"\\F0A16\";\n}\n\n.mdi-subtitles-outline::before {\n  content: \"\\F0A17\";\n}\n\n.mdi-subway::before {\n  content: \"\\F06AC\";\n}\n\n.mdi-subway-alert-variant::before {\n  content: \"\\F0D9D\";\n}\n\n.mdi-subway-variant::before {\n  content: \"\\F04DF\";\n}\n\n.mdi-summit::before {\n  content: \"\\F0786\";\n}\n\n.mdi-sunglasses::before {\n  content: \"\\F04E0\";\n}\n\n.mdi-surround-sound::before {\n  content: \"\\F05C5\";\n}\n\n.mdi-surround-sound-2-0::before {\n  content: \"\\F07F0\";\n}\n\n.mdi-surround-sound-2-1::before {\n  content: \"\\F1729\";\n}\n\n.mdi-surround-sound-3-1::before {\n  content: \"\\F07F1\";\n}\n\n.mdi-surround-sound-5-1::before {\n  content: \"\\F07F2\";\n}\n\n.mdi-surround-sound-5-1-2::before {\n  content: \"\\F172A\";\n}\n\n.mdi-surround-sound-7-1::before {\n  content: \"\\F07F3\";\n}\n\n.mdi-svg::before {\n  content: \"\\F0721\";\n}\n\n.mdi-swap-horizontal::before {\n  content: \"\\F04E1\";\n}\n\n.mdi-swap-horizontal-bold::before {\n  content: \"\\F0BCD\";\n}\n\n.mdi-swap-horizontal-circle::before {\n  content: \"\\F0FE1\";\n}\n\n.mdi-swap-horizontal-circle-outline::before {\n  content: \"\\F0FE2\";\n}\n\n.mdi-swap-horizontal-variant::before {\n  content: \"\\F08C1\";\n}\n\n.mdi-swap-vertical::before {\n  content: \"\\F04E2\";\n}\n\n.mdi-swap-vertical-bold::before {\n  content: \"\\F0BCE\";\n}\n\n.mdi-swap-vertical-circle::before {\n  content: \"\\F0FE3\";\n}\n\n.mdi-swap-vertical-circle-outline::before {\n  content: \"\\F0FE4\";\n}\n\n.mdi-swap-vertical-variant::before {\n  content: \"\\F08C2\";\n}\n\n.mdi-swim::before {\n  content: \"\\F04E3\";\n}\n\n.mdi-switch::before {\n  content: \"\\F04E4\";\n}\n\n.mdi-sword::before {\n  content: \"\\F04E5\";\n}\n\n.mdi-sword-cross::before {\n  content: \"\\F0787\";\n}\n\n.mdi-syllabary-hangul::before {\n  content: \"\\F1333\";\n}\n\n.mdi-syllabary-hiragana::before {\n  content: \"\\F1334\";\n}\n\n.mdi-syllabary-katakana::before {\n  content: \"\\F1335\";\n}\n\n.mdi-syllabary-katakana-halfwidth::before {\n  content: \"\\F1336\";\n}\n\n.mdi-symbol::before {\n  content: \"\\F1501\";\n}\n\n.mdi-symfony::before {\n  content: \"\\F0AE6\";\n}\n\n.mdi-sync::before {\n  content: \"\\F04E6\";\n}\n\n.mdi-sync-alert::before {\n  content: \"\\F04E7\";\n}\n\n.mdi-sync-circle::before {\n  content: \"\\F1378\";\n}\n\n.mdi-sync-off::before {\n  content: \"\\F04E8\";\n}\n\n.mdi-tab::before {\n  content: \"\\F04E9\";\n}\n\n.mdi-tab-minus::before {\n  content: \"\\F0B4B\";\n}\n\n.mdi-tab-plus::before {\n  content: \"\\F075C\";\n}\n\n.mdi-tab-remove::before {\n  content: \"\\F0B4C\";\n}\n\n.mdi-tab-unselected::before {\n  content: \"\\F04EA\";\n}\n\n.mdi-table::before {\n  content: \"\\F04EB\";\n}\n\n.mdi-table-account::before {\n  content: \"\\F13B9\";\n}\n\n.mdi-table-alert::before {\n  content: \"\\F13BA\";\n}\n\n.mdi-table-arrow-down::before {\n  content: \"\\F13BB\";\n}\n\n.mdi-table-arrow-left::before {\n  content: \"\\F13BC\";\n}\n\n.mdi-table-arrow-right::before {\n  content: \"\\F13BD\";\n}\n\n.mdi-table-arrow-up::before {\n  content: \"\\F13BE\";\n}\n\n.mdi-table-border::before {\n  content: \"\\F0A18\";\n}\n\n.mdi-table-cancel::before {\n  content: \"\\F13BF\";\n}\n\n.mdi-table-chair::before {\n  content: \"\\F1061\";\n}\n\n.mdi-table-check::before {\n  content: \"\\F13C0\";\n}\n\n.mdi-table-clock::before {\n  content: \"\\F13C1\";\n}\n\n.mdi-table-cog::before {\n  content: \"\\F13C2\";\n}\n\n.mdi-table-column::before {\n  content: \"\\F0835\";\n}\n\n.mdi-table-column-plus-after::before {\n  content: \"\\F04EC\";\n}\n\n.mdi-table-column-plus-before::before {\n  content: \"\\F04ED\";\n}\n\n.mdi-table-column-remove::before {\n  content: \"\\F04EE\";\n}\n\n.mdi-table-column-width::before {\n  content: \"\\F04EF\";\n}\n\n.mdi-table-edit::before {\n  content: \"\\F04F0\";\n}\n\n.mdi-table-eye::before {\n  content: \"\\F1094\";\n}\n\n.mdi-table-eye-off::before {\n  content: \"\\F13C3\";\n}\n\n.mdi-table-furniture::before {\n  content: \"\\F05BC\";\n}\n\n.mdi-table-headers-eye::before {\n  content: \"\\F121D\";\n}\n\n.mdi-table-headers-eye-off::before {\n  content: \"\\F121E\";\n}\n\n.mdi-table-heart::before {\n  content: \"\\F13C4\";\n}\n\n.mdi-table-key::before {\n  content: \"\\F13C5\";\n}\n\n.mdi-table-large::before {\n  content: \"\\F04F1\";\n}\n\n.mdi-table-large-plus::before {\n  content: \"\\F0F87\";\n}\n\n.mdi-table-large-remove::before {\n  content: \"\\F0F88\";\n}\n\n.mdi-table-lock::before {\n  content: \"\\F13C6\";\n}\n\n.mdi-table-merge-cells::before {\n  content: \"\\F09A6\";\n}\n\n.mdi-table-minus::before {\n  content: \"\\F13C7\";\n}\n\n.mdi-table-multiple::before {\n  content: \"\\F13C8\";\n}\n\n.mdi-table-network::before {\n  content: \"\\F13C9\";\n}\n\n.mdi-table-of-contents::before {\n  content: \"\\F0836\";\n}\n\n.mdi-table-off::before {\n  content: \"\\F13CA\";\n}\n\n.mdi-table-picnic::before {\n  content: \"\\F1743\";\n}\n\n.mdi-table-plus::before {\n  content: \"\\F0A75\";\n}\n\n.mdi-table-refresh::before {\n  content: \"\\F13A0\";\n}\n\n.mdi-table-remove::before {\n  content: \"\\F0A76\";\n}\n\n.mdi-table-row::before {\n  content: \"\\F0837\";\n}\n\n.mdi-table-row-height::before {\n  content: \"\\F04F2\";\n}\n\n.mdi-table-row-plus-after::before {\n  content: \"\\F04F3\";\n}\n\n.mdi-table-row-plus-before::before {\n  content: \"\\F04F4\";\n}\n\n.mdi-table-row-remove::before {\n  content: \"\\F04F5\";\n}\n\n.mdi-table-search::before {\n  content: \"\\F090F\";\n}\n\n.mdi-table-settings::before {\n  content: \"\\F0838\";\n}\n\n.mdi-table-split-cell::before {\n  content: \"\\F142A\";\n}\n\n.mdi-table-star::before {\n  content: \"\\F13CB\";\n}\n\n.mdi-table-sync::before {\n  content: \"\\F13A1\";\n}\n\n.mdi-table-tennis::before {\n  content: \"\\F0E68\";\n}\n\n.mdi-tablet::before {\n  content: \"\\F04F6\";\n}\n\n.mdi-tablet-android::before {\n  content: \"\\F04F7\";\n}\n\n.mdi-tablet-cellphone::before {\n  content: \"\\F09A7\";\n}\n\n.mdi-tablet-dashboard::before {\n  content: \"\\F0ECE\";\n}\n\n.mdi-tablet-ipad::before {\n  content: \"\\F04F8\";\n}\n\n.mdi-taco::before {\n  content: \"\\F0762\";\n}\n\n.mdi-tag::before {\n  content: \"\\F04F9\";\n}\n\n.mdi-tag-arrow-down::before {\n  content: \"\\F172B\";\n}\n\n.mdi-tag-arrow-down-outline::before {\n  content: \"\\F172C\";\n}\n\n.mdi-tag-arrow-left::before {\n  content: \"\\F172D\";\n}\n\n.mdi-tag-arrow-left-outline::before {\n  content: \"\\F172E\";\n}\n\n.mdi-tag-arrow-right::before {\n  content: \"\\F172F\";\n}\n\n.mdi-tag-arrow-right-outline::before {\n  content: \"\\F1730\";\n}\n\n.mdi-tag-arrow-up::before {\n  content: \"\\F1731\";\n}\n\n.mdi-tag-arrow-up-outline::before {\n  content: \"\\F1732\";\n}\n\n.mdi-tag-faces::before {\n  content: \"\\F04FA\";\n}\n\n.mdi-tag-heart::before {\n  content: \"\\F068B\";\n}\n\n.mdi-tag-heart-outline::before {\n  content: \"\\F0BCF\";\n}\n\n.mdi-tag-minus::before {\n  content: \"\\F0910\";\n}\n\n.mdi-tag-minus-outline::before {\n  content: \"\\F121F\";\n}\n\n.mdi-tag-multiple::before {\n  content: \"\\F04FB\";\n}\n\n.mdi-tag-multiple-outline::before {\n  content: \"\\F12F7\";\n}\n\n.mdi-tag-off::before {\n  content: \"\\F1220\";\n}\n\n.mdi-tag-off-outline::before {\n  content: \"\\F1221\";\n}\n\n.mdi-tag-outline::before {\n  content: \"\\F04FC\";\n}\n\n.mdi-tag-plus::before {\n  content: \"\\F0722\";\n}\n\n.mdi-tag-plus-outline::before {\n  content: \"\\F1222\";\n}\n\n.mdi-tag-remove::before {\n  content: \"\\F0723\";\n}\n\n.mdi-tag-remove-outline::before {\n  content: \"\\F1223\";\n}\n\n.mdi-tag-text::before {\n  content: \"\\F1224\";\n}\n\n.mdi-tag-text-outline::before {\n  content: \"\\F04FD\";\n}\n\n.mdi-tailwind::before {\n  content: \"\\F13FF\";\n}\n\n.mdi-tank::before {\n  content: \"\\F0D3A\";\n}\n\n.mdi-tanker-truck::before {\n  content: \"\\F0FE5\";\n}\n\n.mdi-tape-drive::before {\n  content: \"\\F16DF\";\n}\n\n.mdi-tape-measure::before {\n  content: \"\\F0B4D\";\n}\n\n.mdi-target::before {\n  content: \"\\F04FE\";\n}\n\n.mdi-target-account::before {\n  content: \"\\F0BD0\";\n}\n\n.mdi-target-variant::before {\n  content: \"\\F0A77\";\n}\n\n.mdi-taxi::before {\n  content: \"\\F04FF\";\n}\n\n.mdi-tea::before {\n  content: \"\\F0D9E\";\n}\n\n.mdi-tea-outline::before {\n  content: \"\\F0D9F\";\n}\n\n.mdi-teach::before {\n  content: \"\\F0890\";\n}\n\n.mdi-teamviewer::before {\n  content: \"\\F0500\";\n}\n\n.mdi-telegram::before {\n  content: \"\\F0501\";\n}\n\n.mdi-telescope::before {\n  content: \"\\F0B4E\";\n}\n\n.mdi-television::before {\n  content: \"\\F0502\";\n}\n\n.mdi-television-ambient-light::before {\n  content: \"\\F1356\";\n}\n\n.mdi-television-box::before {\n  content: \"\\F0839\";\n}\n\n.mdi-television-classic::before {\n  content: \"\\F07F4\";\n}\n\n.mdi-television-classic-off::before {\n  content: \"\\F083A\";\n}\n\n.mdi-television-clean::before {\n  content: \"\\F1110\";\n}\n\n.mdi-television-guide::before {\n  content: \"\\F0503\";\n}\n\n.mdi-television-off::before {\n  content: \"\\F083B\";\n}\n\n.mdi-television-pause::before {\n  content: \"\\F0F89\";\n}\n\n.mdi-television-play::before {\n  content: \"\\F0ECF\";\n}\n\n.mdi-television-stop::before {\n  content: \"\\F0F8A\";\n}\n\n.mdi-temperature-celsius::before {\n  content: \"\\F0504\";\n}\n\n.mdi-temperature-fahrenheit::before {\n  content: \"\\F0505\";\n}\n\n.mdi-temperature-kelvin::before {\n  content: \"\\F0506\";\n}\n\n.mdi-tennis::before {\n  content: \"\\F0DA0\";\n}\n\n.mdi-tennis-ball::before {\n  content: \"\\F0507\";\n}\n\n.mdi-tent::before {\n  content: \"\\F0508\";\n}\n\n.mdi-terraform::before {\n  content: \"\\F1062\";\n}\n\n.mdi-terrain::before {\n  content: \"\\F0509\";\n}\n\n.mdi-test-tube::before {\n  content: \"\\F0668\";\n}\n\n.mdi-test-tube-empty::before {\n  content: \"\\F0911\";\n}\n\n.mdi-test-tube-off::before {\n  content: \"\\F0912\";\n}\n\n.mdi-text::before {\n  content: \"\\F09A8\";\n}\n\n.mdi-text-account::before {\n  content: \"\\F1570\";\n}\n\n.mdi-text-box::before {\n  content: \"\\F021A\";\n}\n\n.mdi-text-box-check::before {\n  content: \"\\F0EA6\";\n}\n\n.mdi-text-box-check-outline::before {\n  content: \"\\F0EA7\";\n}\n\n.mdi-text-box-minus::before {\n  content: \"\\F0EA8\";\n}\n\n.mdi-text-box-minus-outline::before {\n  content: \"\\F0EA9\";\n}\n\n.mdi-text-box-multiple::before {\n  content: \"\\F0AB7\";\n}\n\n.mdi-text-box-multiple-outline::before {\n  content: \"\\F0AB8\";\n}\n\n.mdi-text-box-outline::before {\n  content: \"\\F09ED\";\n}\n\n.mdi-text-box-plus::before {\n  content: \"\\F0EAA\";\n}\n\n.mdi-text-box-plus-outline::before {\n  content: \"\\F0EAB\";\n}\n\n.mdi-text-box-remove::before {\n  content: \"\\F0EAC\";\n}\n\n.mdi-text-box-remove-outline::before {\n  content: \"\\F0EAD\";\n}\n\n.mdi-text-box-search::before {\n  content: \"\\F0EAE\";\n}\n\n.mdi-text-box-search-outline::before {\n  content: \"\\F0EAF\";\n}\n\n.mdi-text-recognition::before {\n  content: \"\\F113D\";\n}\n\n.mdi-text-search::before {\n  content: \"\\F13B8\";\n}\n\n.mdi-text-shadow::before {\n  content: \"\\F0669\";\n}\n\n.mdi-text-short::before {\n  content: \"\\F09A9\";\n}\n\n.mdi-text-subject::before {\n  content: \"\\F09AA\";\n}\n\n.mdi-text-to-speech::before {\n  content: \"\\F050A\";\n}\n\n.mdi-text-to-speech-off::before {\n  content: \"\\F050B\";\n}\n\n.mdi-texture::before {\n  content: \"\\F050C\";\n}\n\n.mdi-texture-box::before {\n  content: \"\\F0FE6\";\n}\n\n.mdi-theater::before {\n  content: \"\\F050D\";\n}\n\n.mdi-theme-light-dark::before {\n  content: \"\\F050E\";\n}\n\n.mdi-thermometer::before {\n  content: \"\\F050F\";\n}\n\n.mdi-thermometer-alert::before {\n  content: \"\\F0E01\";\n}\n\n.mdi-thermometer-chevron-down::before {\n  content: \"\\F0E02\";\n}\n\n.mdi-thermometer-chevron-up::before {\n  content: \"\\F0E03\";\n}\n\n.mdi-thermometer-high::before {\n  content: \"\\F10C2\";\n}\n\n.mdi-thermometer-lines::before {\n  content: \"\\F0510\";\n}\n\n.mdi-thermometer-low::before {\n  content: \"\\F10C3\";\n}\n\n.mdi-thermometer-minus::before {\n  content: \"\\F0E04\";\n}\n\n.mdi-thermometer-off::before {\n  content: \"\\F1531\";\n}\n\n.mdi-thermometer-plus::before {\n  content: \"\\F0E05\";\n}\n\n.mdi-thermostat::before {\n  content: \"\\F0393\";\n}\n\n.mdi-thermostat-box::before {\n  content: \"\\F0891\";\n}\n\n.mdi-thought-bubble::before {\n  content: \"\\F07F6\";\n}\n\n.mdi-thought-bubble-outline::before {\n  content: \"\\F07F7\";\n}\n\n.mdi-thumb-down::before {\n  content: \"\\F0511\";\n}\n\n.mdi-thumb-down-outline::before {\n  content: \"\\F0512\";\n}\n\n.mdi-thumb-up::before {\n  content: \"\\F0513\";\n}\n\n.mdi-thumb-up-outline::before {\n  content: \"\\F0514\";\n}\n\n.mdi-thumbs-up-down::before {\n  content: \"\\F0515\";\n}\n\n.mdi-ticket::before {\n  content: \"\\F0516\";\n}\n\n.mdi-ticket-account::before {\n  content: \"\\F0517\";\n}\n\n.mdi-ticket-confirmation::before {\n  content: \"\\F0518\";\n}\n\n.mdi-ticket-confirmation-outline::before {\n  content: \"\\F13AA\";\n}\n\n.mdi-ticket-outline::before {\n  content: \"\\F0913\";\n}\n\n.mdi-ticket-percent::before {\n  content: \"\\F0724\";\n}\n\n.mdi-ticket-percent-outline::before {\n  content: \"\\F142B\";\n}\n\n.mdi-tie::before {\n  content: \"\\F0519\";\n}\n\n.mdi-tilde::before {\n  content: \"\\F0725\";\n}\n\n.mdi-timelapse::before {\n  content: \"\\F051A\";\n}\n\n.mdi-timeline::before {\n  content: \"\\F0BD1\";\n}\n\n.mdi-timeline-alert::before {\n  content: \"\\F0F95\";\n}\n\n.mdi-timeline-alert-outline::before {\n  content: \"\\F0F98\";\n}\n\n.mdi-timeline-check::before {\n  content: \"\\F1532\";\n}\n\n.mdi-timeline-check-outline::before {\n  content: \"\\F1533\";\n}\n\n.mdi-timeline-clock::before {\n  content: \"\\F11FB\";\n}\n\n.mdi-timeline-clock-outline::before {\n  content: \"\\F11FC\";\n}\n\n.mdi-timeline-help::before {\n  content: \"\\F0F99\";\n}\n\n.mdi-timeline-help-outline::before {\n  content: \"\\F0F9A\";\n}\n\n.mdi-timeline-minus::before {\n  content: \"\\F1534\";\n}\n\n.mdi-timeline-minus-outline::before {\n  content: \"\\F1535\";\n}\n\n.mdi-timeline-outline::before {\n  content: \"\\F0BD2\";\n}\n\n.mdi-timeline-plus::before {\n  content: \"\\F0F96\";\n}\n\n.mdi-timeline-plus-outline::before {\n  content: \"\\F0F97\";\n}\n\n.mdi-timeline-remove::before {\n  content: \"\\F1536\";\n}\n\n.mdi-timeline-remove-outline::before {\n  content: \"\\F1537\";\n}\n\n.mdi-timeline-text::before {\n  content: \"\\F0BD3\";\n}\n\n.mdi-timeline-text-outline::before {\n  content: \"\\F0BD4\";\n}\n\n.mdi-timer::before {\n  content: \"\\F13AB\";\n}\n\n.mdi-timer-10::before {\n  content: \"\\F051C\";\n}\n\n.mdi-timer-3::before {\n  content: \"\\F051D\";\n}\n\n.mdi-timer-off::before {\n  content: \"\\F13AC\";\n}\n\n.mdi-timer-off-outline::before {\n  content: \"\\F051E\";\n}\n\n.mdi-timer-outline::before {\n  content: \"\\F051B\";\n}\n\n.mdi-timer-sand::before {\n  content: \"\\F051F\";\n}\n\n.mdi-timer-sand-empty::before {\n  content: \"\\F06AD\";\n}\n\n.mdi-timer-sand-full::before {\n  content: \"\\F078C\";\n}\n\n.mdi-timetable::before {\n  content: \"\\F0520\";\n}\n\n.mdi-toaster::before {\n  content: \"\\F1063\";\n}\n\n.mdi-toaster-off::before {\n  content: \"\\F11B7\";\n}\n\n.mdi-toaster-oven::before {\n  content: \"\\F0CD3\";\n}\n\n.mdi-toggle-switch::before {\n  content: \"\\F0521\";\n}\n\n.mdi-toggle-switch-off::before {\n  content: \"\\F0522\";\n}\n\n.mdi-toggle-switch-off-outline::before {\n  content: \"\\F0A19\";\n}\n\n.mdi-toggle-switch-outline::before {\n  content: \"\\F0A1A\";\n}\n\n.mdi-toilet::before {\n  content: \"\\F09AB\";\n}\n\n.mdi-toolbox::before {\n  content: \"\\F09AC\";\n}\n\n.mdi-toolbox-outline::before {\n  content: \"\\F09AD\";\n}\n\n.mdi-tools::before {\n  content: \"\\F1064\";\n}\n\n.mdi-tooltip::before {\n  content: \"\\F0523\";\n}\n\n.mdi-tooltip-account::before {\n  content: \"\\F000C\";\n}\n\n.mdi-tooltip-check::before {\n  content: \"\\F155C\";\n}\n\n.mdi-tooltip-check-outline::before {\n  content: \"\\F155D\";\n}\n\n.mdi-tooltip-edit::before {\n  content: \"\\F0524\";\n}\n\n.mdi-tooltip-edit-outline::before {\n  content: \"\\F12C5\";\n}\n\n.mdi-tooltip-image::before {\n  content: \"\\F0525\";\n}\n\n.mdi-tooltip-image-outline::before {\n  content: \"\\F0BD5\";\n}\n\n.mdi-tooltip-minus::before {\n  content: \"\\F155E\";\n}\n\n.mdi-tooltip-minus-outline::before {\n  content: \"\\F155F\";\n}\n\n.mdi-tooltip-outline::before {\n  content: \"\\F0526\";\n}\n\n.mdi-tooltip-plus::before {\n  content: \"\\F0BD6\";\n}\n\n.mdi-tooltip-plus-outline::before {\n  content: \"\\F0527\";\n}\n\n.mdi-tooltip-remove::before {\n  content: \"\\F1560\";\n}\n\n.mdi-tooltip-remove-outline::before {\n  content: \"\\F1561\";\n}\n\n.mdi-tooltip-text::before {\n  content: \"\\F0528\";\n}\n\n.mdi-tooltip-text-outline::before {\n  content: \"\\F0BD7\";\n}\n\n.mdi-tooth::before {\n  content: \"\\F08C3\";\n}\n\n.mdi-tooth-outline::before {\n  content: \"\\F0529\";\n}\n\n.mdi-toothbrush::before {\n  content: \"\\F1129\";\n}\n\n.mdi-toothbrush-electric::before {\n  content: \"\\F112C\";\n}\n\n.mdi-toothbrush-paste::before {\n  content: \"\\F112A\";\n}\n\n.mdi-torch::before {\n  content: \"\\F1606\";\n}\n\n.mdi-tortoise::before {\n  content: \"\\F0D3B\";\n}\n\n.mdi-toslink::before {\n  content: \"\\F12B8\";\n}\n\n.mdi-tournament::before {\n  content: \"\\F09AE\";\n}\n\n.mdi-tow-truck::before {\n  content: \"\\F083C\";\n}\n\n.mdi-tower-beach::before {\n  content: \"\\F0681\";\n}\n\n.mdi-tower-fire::before {\n  content: \"\\F0682\";\n}\n\n.mdi-toy-brick::before {\n  content: \"\\F1288\";\n}\n\n.mdi-toy-brick-marker::before {\n  content: \"\\F1289\";\n}\n\n.mdi-toy-brick-marker-outline::before {\n  content: \"\\F128A\";\n}\n\n.mdi-toy-brick-minus::before {\n  content: \"\\F128B\";\n}\n\n.mdi-toy-brick-minus-outline::before {\n  content: \"\\F128C\";\n}\n\n.mdi-toy-brick-outline::before {\n  content: \"\\F128D\";\n}\n\n.mdi-toy-brick-plus::before {\n  content: \"\\F128E\";\n}\n\n.mdi-toy-brick-plus-outline::before {\n  content: \"\\F128F\";\n}\n\n.mdi-toy-brick-remove::before {\n  content: \"\\F1290\";\n}\n\n.mdi-toy-brick-remove-outline::before {\n  content: \"\\F1291\";\n}\n\n.mdi-toy-brick-search::before {\n  content: \"\\F1292\";\n}\n\n.mdi-toy-brick-search-outline::before {\n  content: \"\\F1293\";\n}\n\n.mdi-track-light::before {\n  content: \"\\F0914\";\n}\n\n.mdi-trackpad::before {\n  content: \"\\F07F8\";\n}\n\n.mdi-trackpad-lock::before {\n  content: \"\\F0933\";\n}\n\n.mdi-tractor::before {\n  content: \"\\F0892\";\n}\n\n.mdi-tractor-variant::before {\n  content: \"\\F14C4\";\n}\n\n.mdi-trademark::before {\n  content: \"\\F0A78\";\n}\n\n.mdi-traffic-cone::before {\n  content: \"\\F137C\";\n}\n\n.mdi-traffic-light::before {\n  content: \"\\F052B\";\n}\n\n.mdi-train::before {\n  content: \"\\F052C\";\n}\n\n.mdi-train-car::before {\n  content: \"\\F0BD8\";\n}\n\n.mdi-train-car-passenger::before {\n  content: \"\\F1733\";\n}\n\n.mdi-train-car-passenger-door::before {\n  content: \"\\F1734\";\n}\n\n.mdi-train-car-passenger-door-open::before {\n  content: \"\\F1735\";\n}\n\n.mdi-train-car-passenger-variant::before {\n  content: \"\\F1736\";\n}\n\n.mdi-train-variant::before {\n  content: \"\\F08C4\";\n}\n\n.mdi-tram::before {\n  content: \"\\F052D\";\n}\n\n.mdi-tram-side::before {\n  content: \"\\F0FE7\";\n}\n\n.mdi-transcribe::before {\n  content: \"\\F052E\";\n}\n\n.mdi-transcribe-close::before {\n  content: \"\\F052F\";\n}\n\n.mdi-transfer::before {\n  content: \"\\F1065\";\n}\n\n.mdi-transfer-down::before {\n  content: \"\\F0DA1\";\n}\n\n.mdi-transfer-left::before {\n  content: \"\\F0DA2\";\n}\n\n.mdi-transfer-right::before {\n  content: \"\\F0530\";\n}\n\n.mdi-transfer-up::before {\n  content: \"\\F0DA3\";\n}\n\n.mdi-transit-connection::before {\n  content: \"\\F0D3C\";\n}\n\n.mdi-transit-connection-horizontal::before {\n  content: \"\\F1546\";\n}\n\n.mdi-transit-connection-variant::before {\n  content: \"\\F0D3D\";\n}\n\n.mdi-transit-detour::before {\n  content: \"\\F0F8B\";\n}\n\n.mdi-transit-skip::before {\n  content: \"\\F1515\";\n}\n\n.mdi-transit-transfer::before {\n  content: \"\\F06AE\";\n}\n\n.mdi-transition::before {\n  content: \"\\F0915\";\n}\n\n.mdi-transition-masked::before {\n  content: \"\\F0916\";\n}\n\n.mdi-translate::before {\n  content: \"\\F05CA\";\n}\n\n.mdi-translate-off::before {\n  content: \"\\F0E06\";\n}\n\n.mdi-transmission-tower::before {\n  content: \"\\F0D3E\";\n}\n\n.mdi-trash-can::before {\n  content: \"\\F0A79\";\n}\n\n.mdi-trash-can-outline::before {\n  content: \"\\F0A7A\";\n}\n\n.mdi-tray::before {\n  content: \"\\F1294\";\n}\n\n.mdi-tray-alert::before {\n  content: \"\\F1295\";\n}\n\n.mdi-tray-full::before {\n  content: \"\\F1296\";\n}\n\n.mdi-tray-minus::before {\n  content: \"\\F1297\";\n}\n\n.mdi-tray-plus::before {\n  content: \"\\F1298\";\n}\n\n.mdi-tray-remove::before {\n  content: \"\\F1299\";\n}\n\n.mdi-treasure-chest::before {\n  content: \"\\F0726\";\n}\n\n.mdi-tree::before {\n  content: \"\\F0531\";\n}\n\n.mdi-tree-outline::before {\n  content: \"\\F0E69\";\n}\n\n.mdi-trello::before {\n  content: \"\\F0532\";\n}\n\n.mdi-trending-down::before {\n  content: \"\\F0533\";\n}\n\n.mdi-trending-neutral::before {\n  content: \"\\F0534\";\n}\n\n.mdi-trending-up::before {\n  content: \"\\F0535\";\n}\n\n.mdi-triangle::before {\n  content: \"\\F0536\";\n}\n\n.mdi-triangle-outline::before {\n  content: \"\\F0537\";\n}\n\n.mdi-triangle-wave::before {\n  content: \"\\F147C\";\n}\n\n.mdi-triforce::before {\n  content: \"\\F0BD9\";\n}\n\n.mdi-trophy::before {\n  content: \"\\F0538\";\n}\n\n.mdi-trophy-award::before {\n  content: \"\\F0539\";\n}\n\n.mdi-trophy-broken::before {\n  content: \"\\F0DA4\";\n}\n\n.mdi-trophy-outline::before {\n  content: \"\\F053A\";\n}\n\n.mdi-trophy-variant::before {\n  content: \"\\F053B\";\n}\n\n.mdi-trophy-variant-outline::before {\n  content: \"\\F053C\";\n}\n\n.mdi-truck::before {\n  content: \"\\F053D\";\n}\n\n.mdi-truck-check::before {\n  content: \"\\F0CD4\";\n}\n\n.mdi-truck-check-outline::before {\n  content: \"\\F129A\";\n}\n\n.mdi-truck-delivery::before {\n  content: \"\\F053E\";\n}\n\n.mdi-truck-delivery-outline::before {\n  content: \"\\F129B\";\n}\n\n.mdi-truck-fast::before {\n  content: \"\\F0788\";\n}\n\n.mdi-truck-fast-outline::before {\n  content: \"\\F129C\";\n}\n\n.mdi-truck-outline::before {\n  content: \"\\F129D\";\n}\n\n.mdi-truck-trailer::before {\n  content: \"\\F0727\";\n}\n\n.mdi-trumpet::before {\n  content: \"\\F1096\";\n}\n\n.mdi-tshirt-crew::before {\n  content: \"\\F0A7B\";\n}\n\n.mdi-tshirt-crew-outline::before {\n  content: \"\\F053F\";\n}\n\n.mdi-tshirt-v::before {\n  content: \"\\F0A7C\";\n}\n\n.mdi-tshirt-v-outline::before {\n  content: \"\\F0540\";\n}\n\n.mdi-tumble-dryer::before {\n  content: \"\\F0917\";\n}\n\n.mdi-tumble-dryer-alert::before {\n  content: \"\\F11BA\";\n}\n\n.mdi-tumble-dryer-off::before {\n  content: \"\\F11BB\";\n}\n\n.mdi-tune::before {\n  content: \"\\F062E\";\n}\n\n.mdi-tune-variant::before {\n  content: \"\\F1542\";\n}\n\n.mdi-tune-vertical::before {\n  content: \"\\F066A\";\n}\n\n.mdi-tune-vertical-variant::before {\n  content: \"\\F1543\";\n}\n\n.mdi-turkey::before {\n  content: \"\\F171B\";\n}\n\n.mdi-turnstile::before {\n  content: \"\\F0CD5\";\n}\n\n.mdi-turnstile-outline::before {\n  content: \"\\F0CD6\";\n}\n\n.mdi-turtle::before {\n  content: \"\\F0CD7\";\n}\n\n.mdi-twitch::before {\n  content: \"\\F0543\";\n}\n\n.mdi-twitter::before {\n  content: \"\\F0544\";\n}\n\n.mdi-twitter-retweet::before {\n  content: \"\\F0547\";\n}\n\n.mdi-two-factor-authentication::before {\n  content: \"\\F09AF\";\n}\n\n.mdi-typewriter::before {\n  content: \"\\F0F2D\";\n}\n\n.mdi-ubisoft::before {\n  content: \"\\F0BDA\";\n}\n\n.mdi-ubuntu::before {\n  content: \"\\F0548\";\n}\n\n.mdi-ufo::before {\n  content: \"\\F10C4\";\n}\n\n.mdi-ufo-outline::before {\n  content: \"\\F10C5\";\n}\n\n.mdi-ultra-high-definition::before {\n  content: \"\\F07F9\";\n}\n\n.mdi-umbraco::before {\n  content: \"\\F0549\";\n}\n\n.mdi-umbrella::before {\n  content: \"\\F054A\";\n}\n\n.mdi-umbrella-closed::before {\n  content: \"\\F09B0\";\n}\n\n.mdi-umbrella-closed-outline::before {\n  content: \"\\F13E2\";\n}\n\n.mdi-umbrella-closed-variant::before {\n  content: \"\\F13E1\";\n}\n\n.mdi-umbrella-outline::before {\n  content: \"\\F054B\";\n}\n\n.mdi-undo::before {\n  content: \"\\F054C\";\n}\n\n.mdi-undo-variant::before {\n  content: \"\\F054D\";\n}\n\n.mdi-unfold-less-horizontal::before {\n  content: \"\\F054E\";\n}\n\n.mdi-unfold-less-vertical::before {\n  content: \"\\F0760\";\n}\n\n.mdi-unfold-more-horizontal::before {\n  content: \"\\F054F\";\n}\n\n.mdi-unfold-more-vertical::before {\n  content: \"\\F0761\";\n}\n\n.mdi-ungroup::before {\n  content: \"\\F0550\";\n}\n\n.mdi-unicode::before {\n  content: \"\\F0ED0\";\n}\n\n.mdi-unicorn::before {\n  content: \"\\F15C2\";\n}\n\n.mdi-unicorn-variant::before {\n  content: \"\\F15C3\";\n}\n\n.mdi-unicycle::before {\n  content: \"\\F15E5\";\n}\n\n.mdi-unity::before {\n  content: \"\\F06AF\";\n}\n\n.mdi-unreal::before {\n  content: \"\\F09B1\";\n}\n\n.mdi-untappd::before {\n  content: \"\\F0551\";\n}\n\n.mdi-update::before {\n  content: \"\\F06B0\";\n}\n\n.mdi-upload::before {\n  content: \"\\F0552\";\n}\n\n.mdi-upload-lock::before {\n  content: \"\\F1373\";\n}\n\n.mdi-upload-lock-outline::before {\n  content: \"\\F1374\";\n}\n\n.mdi-upload-multiple::before {\n  content: \"\\F083D\";\n}\n\n.mdi-upload-network::before {\n  content: \"\\F06F6\";\n}\n\n.mdi-upload-network-outline::before {\n  content: \"\\F0CD8\";\n}\n\n.mdi-upload-off::before {\n  content: \"\\F10C6\";\n}\n\n.mdi-upload-off-outline::before {\n  content: \"\\F10C7\";\n}\n\n.mdi-upload-outline::before {\n  content: \"\\F0E07\";\n}\n\n.mdi-usb::before {\n  content: \"\\F0553\";\n}\n\n.mdi-usb-flash-drive::before {\n  content: \"\\F129E\";\n}\n\n.mdi-usb-flash-drive-outline::before {\n  content: \"\\F129F\";\n}\n\n.mdi-usb-port::before {\n  content: \"\\F11F0\";\n}\n\n.mdi-valve::before {\n  content: \"\\F1066\";\n}\n\n.mdi-valve-closed::before {\n  content: \"\\F1067\";\n}\n\n.mdi-valve-open::before {\n  content: \"\\F1068\";\n}\n\n.mdi-van-passenger::before {\n  content: \"\\F07FA\";\n}\n\n.mdi-van-utility::before {\n  content: \"\\F07FB\";\n}\n\n.mdi-vanish::before {\n  content: \"\\F07FC\";\n}\n\n.mdi-vanish-quarter::before {\n  content: \"\\F1554\";\n}\n\n.mdi-vanity-light::before {\n  content: \"\\F11E1\";\n}\n\n.mdi-variable::before {\n  content: \"\\F0AE7\";\n}\n\n.mdi-variable-box::before {\n  content: \"\\F1111\";\n}\n\n.mdi-vector-arrange-above::before {\n  content: \"\\F0554\";\n}\n\n.mdi-vector-arrange-below::before {\n  content: \"\\F0555\";\n}\n\n.mdi-vector-bezier::before {\n  content: \"\\F0AE8\";\n}\n\n.mdi-vector-circle::before {\n  content: \"\\F0556\";\n}\n\n.mdi-vector-circle-variant::before {\n  content: \"\\F0557\";\n}\n\n.mdi-vector-combine::before {\n  content: \"\\F0558\";\n}\n\n.mdi-vector-curve::before {\n  content: \"\\F0559\";\n}\n\n.mdi-vector-difference::before {\n  content: \"\\F055A\";\n}\n\n.mdi-vector-difference-ab::before {\n  content: \"\\F055B\";\n}\n\n.mdi-vector-difference-ba::before {\n  content: \"\\F055C\";\n}\n\n.mdi-vector-ellipse::before {\n  content: \"\\F0893\";\n}\n\n.mdi-vector-intersection::before {\n  content: \"\\F055D\";\n}\n\n.mdi-vector-line::before {\n  content: \"\\F055E\";\n}\n\n.mdi-vector-link::before {\n  content: \"\\F0FE8\";\n}\n\n.mdi-vector-point::before {\n  content: \"\\F055F\";\n}\n\n.mdi-vector-polygon::before {\n  content: \"\\F0560\";\n}\n\n.mdi-vector-polyline::before {\n  content: \"\\F0561\";\n}\n\n.mdi-vector-polyline-edit::before {\n  content: \"\\F1225\";\n}\n\n.mdi-vector-polyline-minus::before {\n  content: \"\\F1226\";\n}\n\n.mdi-vector-polyline-plus::before {\n  content: \"\\F1227\";\n}\n\n.mdi-vector-polyline-remove::before {\n  content: \"\\F1228\";\n}\n\n.mdi-vector-radius::before {\n  content: \"\\F074A\";\n}\n\n.mdi-vector-rectangle::before {\n  content: \"\\F05C6\";\n}\n\n.mdi-vector-selection::before {\n  content: \"\\F0562\";\n}\n\n.mdi-vector-square::before {\n  content: \"\\F0001\";\n}\n\n.mdi-vector-triangle::before {\n  content: \"\\F0563\";\n}\n\n.mdi-vector-union::before {\n  content: \"\\F0564\";\n}\n\n.mdi-vhs::before {\n  content: \"\\F0A1B\";\n}\n\n.mdi-vibrate::before {\n  content: \"\\F0566\";\n}\n\n.mdi-vibrate-off::before {\n  content: \"\\F0CD9\";\n}\n\n.mdi-video::before {\n  content: \"\\F0567\";\n}\n\n.mdi-video-3d::before {\n  content: \"\\F07FD\";\n}\n\n.mdi-video-3d-off::before {\n  content: \"\\F13D9\";\n}\n\n.mdi-video-3d-variant::before {\n  content: \"\\F0ED1\";\n}\n\n.mdi-video-4k-box::before {\n  content: \"\\F083E\";\n}\n\n.mdi-video-account::before {\n  content: \"\\F0919\";\n}\n\n.mdi-video-box::before {\n  content: \"\\F00FD\";\n}\n\n.mdi-video-box-off::before {\n  content: \"\\F00FE\";\n}\n\n.mdi-video-check::before {\n  content: \"\\F1069\";\n}\n\n.mdi-video-check-outline::before {\n  content: \"\\F106A\";\n}\n\n.mdi-video-high-definition::before {\n  content: \"\\F152E\";\n}\n\n.mdi-video-image::before {\n  content: \"\\F091A\";\n}\n\n.mdi-video-input-antenna::before {\n  content: \"\\F083F\";\n}\n\n.mdi-video-input-component::before {\n  content: \"\\F0840\";\n}\n\n.mdi-video-input-hdmi::before {\n  content: \"\\F0841\";\n}\n\n.mdi-video-input-scart::before {\n  content: \"\\F0F8C\";\n}\n\n.mdi-video-input-svideo::before {\n  content: \"\\F0842\";\n}\n\n.mdi-video-minus::before {\n  content: \"\\F09B2\";\n}\n\n.mdi-video-minus-outline::before {\n  content: \"\\F02BA\";\n}\n\n.mdi-video-off::before {\n  content: \"\\F0568\";\n}\n\n.mdi-video-off-outline::before {\n  content: \"\\F0BDB\";\n}\n\n.mdi-video-outline::before {\n  content: \"\\F0BDC\";\n}\n\n.mdi-video-plus::before {\n  content: \"\\F09B3\";\n}\n\n.mdi-video-plus-outline::before {\n  content: \"\\F01D3\";\n}\n\n.mdi-video-stabilization::before {\n  content: \"\\F091B\";\n}\n\n.mdi-video-switch::before {\n  content: \"\\F0569\";\n}\n\n.mdi-video-switch-outline::before {\n  content: \"\\F0790\";\n}\n\n.mdi-video-vintage::before {\n  content: \"\\F0A1C\";\n}\n\n.mdi-video-wireless::before {\n  content: \"\\F0ED2\";\n}\n\n.mdi-video-wireless-outline::before {\n  content: \"\\F0ED3\";\n}\n\n.mdi-view-agenda::before {\n  content: \"\\F056A\";\n}\n\n.mdi-view-agenda-outline::before {\n  content: \"\\F11D8\";\n}\n\n.mdi-view-array::before {\n  content: \"\\F056B\";\n}\n\n.mdi-view-array-outline::before {\n  content: \"\\F1485\";\n}\n\n.mdi-view-carousel::before {\n  content: \"\\F056C\";\n}\n\n.mdi-view-carousel-outline::before {\n  content: \"\\F1486\";\n}\n\n.mdi-view-column::before {\n  content: \"\\F056D\";\n}\n\n.mdi-view-column-outline::before {\n  content: \"\\F1487\";\n}\n\n.mdi-view-comfy::before {\n  content: \"\\F0E6A\";\n}\n\n.mdi-view-comfy-outline::before {\n  content: \"\\F1488\";\n}\n\n.mdi-view-compact::before {\n  content: \"\\F0E6B\";\n}\n\n.mdi-view-compact-outline::before {\n  content: \"\\F0E6C\";\n}\n\n.mdi-view-dashboard::before {\n  content: \"\\F056E\";\n}\n\n.mdi-view-dashboard-outline::before {\n  content: \"\\F0A1D\";\n}\n\n.mdi-view-dashboard-variant::before {\n  content: \"\\F0843\";\n}\n\n.mdi-view-dashboard-variant-outline::before {\n  content: \"\\F1489\";\n}\n\n.mdi-view-day::before {\n  content: \"\\F056F\";\n}\n\n.mdi-view-day-outline::before {\n  content: \"\\F148A\";\n}\n\n.mdi-view-grid::before {\n  content: \"\\F0570\";\n}\n\n.mdi-view-grid-outline::before {\n  content: \"\\F11D9\";\n}\n\n.mdi-view-grid-plus::before {\n  content: \"\\F0F8D\";\n}\n\n.mdi-view-grid-plus-outline::before {\n  content: \"\\F11DA\";\n}\n\n.mdi-view-headline::before {\n  content: \"\\F0571\";\n}\n\n.mdi-view-list::before {\n  content: \"\\F0572\";\n}\n\n.mdi-view-list-outline::before {\n  content: \"\\F148B\";\n}\n\n.mdi-view-module::before {\n  content: \"\\F0573\";\n}\n\n.mdi-view-module-outline::before {\n  content: \"\\F148C\";\n}\n\n.mdi-view-parallel::before {\n  content: \"\\F0728\";\n}\n\n.mdi-view-parallel-outline::before {\n  content: \"\\F148D\";\n}\n\n.mdi-view-quilt::before {\n  content: \"\\F0574\";\n}\n\n.mdi-view-quilt-outline::before {\n  content: \"\\F148E\";\n}\n\n.mdi-view-sequential::before {\n  content: \"\\F0729\";\n}\n\n.mdi-view-sequential-outline::before {\n  content: \"\\F148F\";\n}\n\n.mdi-view-split-horizontal::before {\n  content: \"\\F0BCB\";\n}\n\n.mdi-view-split-vertical::before {\n  content: \"\\F0BCC\";\n}\n\n.mdi-view-stream::before {\n  content: \"\\F0575\";\n}\n\n.mdi-view-stream-outline::before {\n  content: \"\\F1490\";\n}\n\n.mdi-view-week::before {\n  content: \"\\F0576\";\n}\n\n.mdi-view-week-outline::before {\n  content: \"\\F1491\";\n}\n\n.mdi-vimeo::before {\n  content: \"\\F0577\";\n}\n\n.mdi-violin::before {\n  content: \"\\F060F\";\n}\n\n.mdi-virtual-reality::before {\n  content: \"\\F0894\";\n}\n\n.mdi-virus::before {\n  content: \"\\F13B6\";\n}\n\n.mdi-virus-outline::before {\n  content: \"\\F13B7\";\n}\n\n.mdi-vk::before {\n  content: \"\\F0579\";\n}\n\n.mdi-vlc::before {\n  content: \"\\F057C\";\n}\n\n.mdi-voice-off::before {\n  content: \"\\F0ED4\";\n}\n\n.mdi-voicemail::before {\n  content: \"\\F057D\";\n}\n\n.mdi-volleyball::before {\n  content: \"\\F09B4\";\n}\n\n.mdi-volume-high::before {\n  content: \"\\F057E\";\n}\n\n.mdi-volume-low::before {\n  content: \"\\F057F\";\n}\n\n.mdi-volume-medium::before {\n  content: \"\\F0580\";\n}\n\n.mdi-volume-minus::before {\n  content: \"\\F075E\";\n}\n\n.mdi-volume-mute::before {\n  content: \"\\F075F\";\n}\n\n.mdi-volume-off::before {\n  content: \"\\F0581\";\n}\n\n.mdi-volume-plus::before {\n  content: \"\\F075D\";\n}\n\n.mdi-volume-source::before {\n  content: \"\\F1120\";\n}\n\n.mdi-volume-variant-off::before {\n  content: \"\\F0E08\";\n}\n\n.mdi-volume-vibrate::before {\n  content: \"\\F1121\";\n}\n\n.mdi-vote::before {\n  content: \"\\F0A1F\";\n}\n\n.mdi-vote-outline::before {\n  content: \"\\F0A20\";\n}\n\n.mdi-vpn::before {\n  content: \"\\F0582\";\n}\n\n.mdi-vuejs::before {\n  content: \"\\F0844\";\n}\n\n.mdi-vuetify::before {\n  content: \"\\F0E6D\";\n}\n\n.mdi-walk::before {\n  content: \"\\F0583\";\n}\n\n.mdi-wall::before {\n  content: \"\\F07FE\";\n}\n\n.mdi-wall-sconce::before {\n  content: \"\\F091C\";\n}\n\n.mdi-wall-sconce-flat::before {\n  content: \"\\F091D\";\n}\n\n.mdi-wall-sconce-flat-variant::before {\n  content: \"\\F041C\";\n}\n\n.mdi-wall-sconce-round::before {\n  content: \"\\F0748\";\n}\n\n.mdi-wall-sconce-round-variant::before {\n  content: \"\\F091E\";\n}\n\n.mdi-wallet::before {\n  content: \"\\F0584\";\n}\n\n.mdi-wallet-giftcard::before {\n  content: \"\\F0585\";\n}\n\n.mdi-wallet-membership::before {\n  content: \"\\F0586\";\n}\n\n.mdi-wallet-outline::before {\n  content: \"\\F0BDD\";\n}\n\n.mdi-wallet-plus::before {\n  content: \"\\F0F8E\";\n}\n\n.mdi-wallet-plus-outline::before {\n  content: \"\\F0F8F\";\n}\n\n.mdi-wallet-travel::before {\n  content: \"\\F0587\";\n}\n\n.mdi-wallpaper::before {\n  content: \"\\F0E09\";\n}\n\n.mdi-wan::before {\n  content: \"\\F0588\";\n}\n\n.mdi-wardrobe::before {\n  content: \"\\F0F90\";\n}\n\n.mdi-wardrobe-outline::before {\n  content: \"\\F0F91\";\n}\n\n.mdi-warehouse::before {\n  content: \"\\F0F81\";\n}\n\n.mdi-washing-machine::before {\n  content: \"\\F072A\";\n}\n\n.mdi-washing-machine-alert::before {\n  content: \"\\F11BC\";\n}\n\n.mdi-washing-machine-off::before {\n  content: \"\\F11BD\";\n}\n\n.mdi-watch::before {\n  content: \"\\F0589\";\n}\n\n.mdi-watch-export::before {\n  content: \"\\F058A\";\n}\n\n.mdi-watch-export-variant::before {\n  content: \"\\F0895\";\n}\n\n.mdi-watch-import::before {\n  content: \"\\F058B\";\n}\n\n.mdi-watch-import-variant::before {\n  content: \"\\F0896\";\n}\n\n.mdi-watch-variant::before {\n  content: \"\\F0897\";\n}\n\n.mdi-watch-vibrate::before {\n  content: \"\\F06B1\";\n}\n\n.mdi-watch-vibrate-off::before {\n  content: \"\\F0CDA\";\n}\n\n.mdi-water::before {\n  content: \"\\F058C\";\n}\n\n.mdi-water-alert::before {\n  content: \"\\F1502\";\n}\n\n.mdi-water-alert-outline::before {\n  content: \"\\F1503\";\n}\n\n.mdi-water-boiler::before {\n  content: \"\\F0F92\";\n}\n\n.mdi-water-boiler-alert::before {\n  content: \"\\F11B3\";\n}\n\n.mdi-water-boiler-off::before {\n  content: \"\\F11B4\";\n}\n\n.mdi-water-check::before {\n  content: \"\\F1504\";\n}\n\n.mdi-water-check-outline::before {\n  content: \"\\F1505\";\n}\n\n.mdi-water-minus::before {\n  content: \"\\F1506\";\n}\n\n.mdi-water-minus-outline::before {\n  content: \"\\F1507\";\n}\n\n.mdi-water-off::before {\n  content: \"\\F058D\";\n}\n\n.mdi-water-off-outline::before {\n  content: \"\\F1508\";\n}\n\n.mdi-water-outline::before {\n  content: \"\\F0E0A\";\n}\n\n.mdi-water-percent::before {\n  content: \"\\F058E\";\n}\n\n.mdi-water-percent-alert::before {\n  content: \"\\F1509\";\n}\n\n.mdi-water-plus::before {\n  content: \"\\F150A\";\n}\n\n.mdi-water-plus-outline::before {\n  content: \"\\F150B\";\n}\n\n.mdi-water-polo::before {\n  content: \"\\F12A0\";\n}\n\n.mdi-water-pump::before {\n  content: \"\\F058F\";\n}\n\n.mdi-water-pump-off::before {\n  content: \"\\F0F93\";\n}\n\n.mdi-water-remove::before {\n  content: \"\\F150C\";\n}\n\n.mdi-water-remove-outline::before {\n  content: \"\\F150D\";\n}\n\n.mdi-water-well::before {\n  content: \"\\F106B\";\n}\n\n.mdi-water-well-outline::before {\n  content: \"\\F106C\";\n}\n\n.mdi-watering-can::before {\n  content: \"\\F1481\";\n}\n\n.mdi-watering-can-outline::before {\n  content: \"\\F1482\";\n}\n\n.mdi-watermark::before {\n  content: \"\\F0612\";\n}\n\n.mdi-wave::before {\n  content: \"\\F0F2E\";\n}\n\n.mdi-waveform::before {\n  content: \"\\F147D\";\n}\n\n.mdi-waves::before {\n  content: \"\\F078D\";\n}\n\n.mdi-waze::before {\n  content: \"\\F0BDE\";\n}\n\n.mdi-weather-cloudy::before {\n  content: \"\\F0590\";\n}\n\n.mdi-weather-cloudy-alert::before {\n  content: \"\\F0F2F\";\n}\n\n.mdi-weather-cloudy-arrow-right::before {\n  content: \"\\F0E6E\";\n}\n\n.mdi-weather-fog::before {\n  content: \"\\F0591\";\n}\n\n.mdi-weather-hail::before {\n  content: \"\\F0592\";\n}\n\n.mdi-weather-hazy::before {\n  content: \"\\F0F30\";\n}\n\n.mdi-weather-hurricane::before {\n  content: \"\\F0898\";\n}\n\n.mdi-weather-lightning::before {\n  content: \"\\F0593\";\n}\n\n.mdi-weather-lightning-rainy::before {\n  content: \"\\F067E\";\n}\n\n.mdi-weather-night::before {\n  content: \"\\F0594\";\n}\n\n.mdi-weather-night-partly-cloudy::before {\n  content: \"\\F0F31\";\n}\n\n.mdi-weather-partly-cloudy::before {\n  content: \"\\F0595\";\n}\n\n.mdi-weather-partly-lightning::before {\n  content: \"\\F0F32\";\n}\n\n.mdi-weather-partly-rainy::before {\n  content: \"\\F0F33\";\n}\n\n.mdi-weather-partly-snowy::before {\n  content: \"\\F0F34\";\n}\n\n.mdi-weather-partly-snowy-rainy::before {\n  content: \"\\F0F35\";\n}\n\n.mdi-weather-pouring::before {\n  content: \"\\F0596\";\n}\n\n.mdi-weather-rainy::before {\n  content: \"\\F0597\";\n}\n\n.mdi-weather-snowy::before {\n  content: \"\\F0598\";\n}\n\n.mdi-weather-snowy-heavy::before {\n  content: \"\\F0F36\";\n}\n\n.mdi-weather-snowy-rainy::before {\n  content: \"\\F067F\";\n}\n\n.mdi-weather-sunny::before {\n  content: \"\\F0599\";\n}\n\n.mdi-weather-sunny-alert::before {\n  content: \"\\F0F37\";\n}\n\n.mdi-weather-sunny-off::before {\n  content: \"\\F14E4\";\n}\n\n.mdi-weather-sunset::before {\n  content: \"\\F059A\";\n}\n\n.mdi-weather-sunset-down::before {\n  content: \"\\F059B\";\n}\n\n.mdi-weather-sunset-up::before {\n  content: \"\\F059C\";\n}\n\n.mdi-weather-tornado::before {\n  content: \"\\F0F38\";\n}\n\n.mdi-weather-windy::before {\n  content: \"\\F059D\";\n}\n\n.mdi-weather-windy-variant::before {\n  content: \"\\F059E\";\n}\n\n.mdi-web::before {\n  content: \"\\F059F\";\n}\n\n.mdi-web-box::before {\n  content: \"\\F0F94\";\n}\n\n.mdi-web-clock::before {\n  content: \"\\F124A\";\n}\n\n.mdi-webcam::before {\n  content: \"\\F05A0\";\n}\n\n.mdi-webcam-off::before {\n  content: \"\\F1737\";\n}\n\n.mdi-webhook::before {\n  content: \"\\F062F\";\n}\n\n.mdi-webpack::before {\n  content: \"\\F072B\";\n}\n\n.mdi-webrtc::before {\n  content: \"\\F1248\";\n}\n\n.mdi-wechat::before {\n  content: \"\\F0611\";\n}\n\n.mdi-weight::before {\n  content: \"\\F05A1\";\n}\n\n.mdi-weight-gram::before {\n  content: \"\\F0D3F\";\n}\n\n.mdi-weight-kilogram::before {\n  content: \"\\F05A2\";\n}\n\n.mdi-weight-lifter::before {\n  content: \"\\F115D\";\n}\n\n.mdi-weight-pound::before {\n  content: \"\\F09B5\";\n}\n\n.mdi-whatsapp::before {\n  content: \"\\F05A3\";\n}\n\n.mdi-wheel-barrow::before {\n  content: \"\\F14F2\";\n}\n\n.mdi-wheelchair-accessibility::before {\n  content: \"\\F05A4\";\n}\n\n.mdi-whistle::before {\n  content: \"\\F09B6\";\n}\n\n.mdi-whistle-outline::before {\n  content: \"\\F12BC\";\n}\n\n.mdi-white-balance-auto::before {\n  content: \"\\F05A5\";\n}\n\n.mdi-white-balance-incandescent::before {\n  content: \"\\F05A6\";\n}\n\n.mdi-white-balance-iridescent::before {\n  content: \"\\F05A7\";\n}\n\n.mdi-white-balance-sunny::before {\n  content: \"\\F05A8\";\n}\n\n.mdi-widgets::before {\n  content: \"\\F072C\";\n}\n\n.mdi-widgets-outline::before {\n  content: \"\\F1355\";\n}\n\n.mdi-wifi::before {\n  content: \"\\F05A9\";\n}\n\n.mdi-wifi-alert::before {\n  content: \"\\F16B5\";\n}\n\n.mdi-wifi-arrow-down::before {\n  content: \"\\F16B6\";\n}\n\n.mdi-wifi-arrow-left::before {\n  content: \"\\F16B7\";\n}\n\n.mdi-wifi-arrow-left-right::before {\n  content: \"\\F16B8\";\n}\n\n.mdi-wifi-arrow-right::before {\n  content: \"\\F16B9\";\n}\n\n.mdi-wifi-arrow-up::before {\n  content: \"\\F16BA\";\n}\n\n.mdi-wifi-arrow-up-down::before {\n  content: \"\\F16BB\";\n}\n\n.mdi-wifi-cancel::before {\n  content: \"\\F16BC\";\n}\n\n.mdi-wifi-check::before {\n  content: \"\\F16BD\";\n}\n\n.mdi-wifi-cog::before {\n  content: \"\\F16BE\";\n}\n\n.mdi-wifi-lock::before {\n  content: \"\\F16BF\";\n}\n\n.mdi-wifi-lock-open::before {\n  content: \"\\F16C0\";\n}\n\n.mdi-wifi-marker::before {\n  content: \"\\F16C1\";\n}\n\n.mdi-wifi-minus::before {\n  content: \"\\F16C2\";\n}\n\n.mdi-wifi-off::before {\n  content: \"\\F05AA\";\n}\n\n.mdi-wifi-plus::before {\n  content: \"\\F16C3\";\n}\n\n.mdi-wifi-refresh::before {\n  content: \"\\F16C4\";\n}\n\n.mdi-wifi-remove::before {\n  content: \"\\F16C5\";\n}\n\n.mdi-wifi-settings::before {\n  content: \"\\F16C6\";\n}\n\n.mdi-wifi-star::before {\n  content: \"\\F0E0B\";\n}\n\n.mdi-wifi-strength-1::before {\n  content: \"\\F091F\";\n}\n\n.mdi-wifi-strength-1-alert::before {\n  content: \"\\F0920\";\n}\n\n.mdi-wifi-strength-1-lock::before {\n  content: \"\\F0921\";\n}\n\n.mdi-wifi-strength-1-lock-open::before {\n  content: \"\\F16CB\";\n}\n\n.mdi-wifi-strength-2::before {\n  content: \"\\F0922\";\n}\n\n.mdi-wifi-strength-2-alert::before {\n  content: \"\\F0923\";\n}\n\n.mdi-wifi-strength-2-lock::before {\n  content: \"\\F0924\";\n}\n\n.mdi-wifi-strength-2-lock-open::before {\n  content: \"\\F16CC\";\n}\n\n.mdi-wifi-strength-3::before {\n  content: \"\\F0925\";\n}\n\n.mdi-wifi-strength-3-alert::before {\n  content: \"\\F0926\";\n}\n\n.mdi-wifi-strength-3-lock::before {\n  content: \"\\F0927\";\n}\n\n.mdi-wifi-strength-3-lock-open::before {\n  content: \"\\F16CD\";\n}\n\n.mdi-wifi-strength-4::before {\n  content: \"\\F0928\";\n}\n\n.mdi-wifi-strength-4-alert::before {\n  content: \"\\F0929\";\n}\n\n.mdi-wifi-strength-4-lock::before {\n  content: \"\\F092A\";\n}\n\n.mdi-wifi-strength-4-lock-open::before {\n  content: \"\\F16CE\";\n}\n\n.mdi-wifi-strength-alert-outline::before {\n  content: \"\\F092B\";\n}\n\n.mdi-wifi-strength-lock-open-outline::before {\n  content: \"\\F16CF\";\n}\n\n.mdi-wifi-strength-lock-outline::before {\n  content: \"\\F092C\";\n}\n\n.mdi-wifi-strength-off::before {\n  content: \"\\F092D\";\n}\n\n.mdi-wifi-strength-off-outline::before {\n  content: \"\\F092E\";\n}\n\n.mdi-wifi-strength-outline::before {\n  content: \"\\F092F\";\n}\n\n.mdi-wifi-sync::before {\n  content: \"\\F16C7\";\n}\n\n.mdi-wikipedia::before {\n  content: \"\\F05AC\";\n}\n\n.mdi-wind-turbine::before {\n  content: \"\\F0DA5\";\n}\n\n.mdi-window-close::before {\n  content: \"\\F05AD\";\n}\n\n.mdi-window-closed::before {\n  content: \"\\F05AE\";\n}\n\n.mdi-window-closed-variant::before {\n  content: \"\\F11DB\";\n}\n\n.mdi-window-maximize::before {\n  content: \"\\F05AF\";\n}\n\n.mdi-window-minimize::before {\n  content: \"\\F05B0\";\n}\n\n.mdi-window-open::before {\n  content: \"\\F05B1\";\n}\n\n.mdi-window-open-variant::before {\n  content: \"\\F11DC\";\n}\n\n.mdi-window-restore::before {\n  content: \"\\F05B2\";\n}\n\n.mdi-window-shutter::before {\n  content: \"\\F111C\";\n}\n\n.mdi-window-shutter-alert::before {\n  content: \"\\F111D\";\n}\n\n.mdi-window-shutter-open::before {\n  content: \"\\F111E\";\n}\n\n.mdi-windsock::before {\n  content: \"\\F15FA\";\n}\n\n.mdi-wiper::before {\n  content: \"\\F0AE9\";\n}\n\n.mdi-wiper-wash::before {\n  content: \"\\F0DA6\";\n}\n\n.mdi-wizard-hat::before {\n  content: \"\\F1477\";\n}\n\n.mdi-wordpress::before {\n  content: \"\\F05B4\";\n}\n\n.mdi-wrap::before {\n  content: \"\\F05B6\";\n}\n\n.mdi-wrap-disabled::before {\n  content: \"\\F0BDF\";\n}\n\n.mdi-wrench::before {\n  content: \"\\F05B7\";\n}\n\n.mdi-wrench-outline::before {\n  content: \"\\F0BE0\";\n}\n\n.mdi-xamarin::before {\n  content: \"\\F0845\";\n}\n\n.mdi-xamarin-outline::before {\n  content: \"\\F0846\";\n}\n\n.mdi-xing::before {\n  content: \"\\F05BE\";\n}\n\n.mdi-xml::before {\n  content: \"\\F05C0\";\n}\n\n.mdi-xmpp::before {\n  content: \"\\F07FF\";\n}\n\n.mdi-y-combinator::before {\n  content: \"\\F0624\";\n}\n\n.mdi-yahoo::before {\n  content: \"\\F0B4F\";\n}\n\n.mdi-yeast::before {\n  content: \"\\F05C1\";\n}\n\n.mdi-yin-yang::before {\n  content: \"\\F0680\";\n}\n\n.mdi-yoga::before {\n  content: \"\\F117C\";\n}\n\n.mdi-youtube::before {\n  content: \"\\F05C3\";\n}\n\n.mdi-youtube-gaming::before {\n  content: \"\\F0848\";\n}\n\n.mdi-youtube-studio::before {\n  content: \"\\F0847\";\n}\n\n.mdi-youtube-subscription::before {\n  content: \"\\F0D40\";\n}\n\n.mdi-youtube-tv::before {\n  content: \"\\F0448\";\n}\n\n.mdi-yurt::before {\n  content: \"\\F1516\";\n}\n\n.mdi-z-wave::before {\n  content: \"\\F0AEA\";\n}\n\n.mdi-zend::before {\n  content: \"\\F0AEB\";\n}\n\n.mdi-zigbee::before {\n  content: \"\\F0D41\";\n}\n\n.mdi-zip-box::before {\n  content: \"\\F05C4\";\n}\n\n.mdi-zip-box-outline::before {\n  content: \"\\F0FFA\";\n}\n\n.mdi-zip-disk::before {\n  content: \"\\F0A23\";\n}\n\n.mdi-zodiac-aquarius::before {\n  content: \"\\F0A7D\";\n}\n\n.mdi-zodiac-aries::before {\n  content: \"\\F0A7E\";\n}\n\n.mdi-zodiac-cancer::before {\n  content: \"\\F0A7F\";\n}\n\n.mdi-zodiac-capricorn::before {\n  content: \"\\F0A80\";\n}\n\n.mdi-zodiac-gemini::before {\n  content: \"\\F0A81\";\n}\n\n.mdi-zodiac-leo::before {\n  content: \"\\F0A82\";\n}\n\n.mdi-zodiac-libra::before {\n  content: \"\\F0A83\";\n}\n\n.mdi-zodiac-pisces::before {\n  content: \"\\F0A84\";\n}\n\n.mdi-zodiac-sagittarius::before {\n  content: \"\\F0A85\";\n}\n\n.mdi-zodiac-scorpio::before {\n  content: \"\\F0A86\";\n}\n\n.mdi-zodiac-taurus::before {\n  content: \"\\F0A87\";\n}\n\n.mdi-zodiac-virgo::before {\n  content: \"\\F0A88\";\n}\n\n.mdi-blank::before {\n  content: \"\\F68C\";\n  visibility: hidden;\n}\n\n.mdi-18px.mdi-set, .mdi-18px.mdi:before {\n  font-size: 18px;\n}\n\n.mdi-24px.mdi-set, .mdi-24px.mdi:before {\n  font-size: 24px;\n}\n\n.mdi-36px.mdi-set, .mdi-36px.mdi:before {\n  font-size: 36px;\n}\n\n.mdi-48px.mdi-set, .mdi-48px.mdi:before {\n  font-size: 48px;\n}\n\n.mdi-dark:before {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mdi-dark.mdi-inactive:before {\n  color: rgba(0, 0, 0, 0.26);\n}\n\n.mdi-light:before {\n  color: white;\n}\n\n.mdi-light.mdi-inactive:before {\n  color: rgba(255, 255, 255, 0.3);\n}\n\n.mdi-rotate-45 {\n  /*\r\n        // Not included in production\r\n        &.mdi-flip-h:before {\r\n            -webkit-transform: scaleX(-1) rotate(45deg);\r\n            transform: scaleX(-1) rotate(45deg);\r\n            filter: FlipH;\r\n            -ms-filter: \"FlipH\";\r\n        }\r\n        &.mdi-flip-v:before {\r\n            -webkit-transform: scaleY(-1) rotate(45deg);\r\n            -ms-transform: rotate(45deg);\r\n            transform: scaleY(-1) rotate(45deg);\r\n            filter: FlipV;\r\n            -ms-filter: \"FlipV\";\r\n        }\r\n        */\n}\n\n.mdi-rotate-45:before {\n  transform: rotate(45deg);\n}\n\n.mdi-rotate-90 {\n  /*\r\n        // Not included in production\r\n        &.mdi-flip-h:before {\r\n            -webkit-transform: scaleX(-1) rotate(90deg);\r\n            transform: scaleX(-1) rotate(90deg);\r\n            filter: FlipH;\r\n            -ms-filter: \"FlipH\";\r\n        }\r\n        &.mdi-flip-v:before {\r\n            -webkit-transform: scaleY(-1) rotate(90deg);\r\n            -ms-transform: rotate(90deg);\r\n            transform: scaleY(-1) rotate(90deg);\r\n            filter: FlipV;\r\n            -ms-filter: \"FlipV\";\r\n        }\r\n        */\n}\n\n.mdi-rotate-90:before {\n  transform: rotate(90deg);\n}\n\n.mdi-rotate-135 {\n  /*\r\n        // Not included in production\r\n        &.mdi-flip-h:before {\r\n            -webkit-transform: scaleX(-1) rotate(135deg);\r\n            transform: scaleX(-1) rotate(135deg);\r\n            filter: FlipH;\r\n            -ms-filter: \"FlipH\";\r\n        }\r\n        &.mdi-flip-v:before {\r\n            -webkit-transform: scaleY(-1) rotate(135deg);\r\n            -ms-transform: rotate(135deg);\r\n            transform: scaleY(-1) rotate(135deg);\r\n            filter: FlipV;\r\n            -ms-filter: \"FlipV\";\r\n        }\r\n        */\n}\n\n.mdi-rotate-135:before {\n  transform: rotate(135deg);\n}\n\n.mdi-rotate-180 {\n  /*\r\n        // Not included in production\r\n        &.mdi-flip-h:before {\r\n            -webkit-transform: scaleX(-1) rotate(180deg);\r\n            transform: scaleX(-1) rotate(180deg);\r\n            filter: FlipH;\r\n            -ms-filter: \"FlipH\";\r\n        }\r\n        &.mdi-flip-v:before {\r\n            -webkit-transform: scaleY(-1) rotate(180deg);\r\n            -ms-transform: rotate(180deg);\r\n            transform: scaleY(-1) rotate(180deg);\r\n            filter: FlipV;\r\n            -ms-filter: \"FlipV\";\r\n        }\r\n        */\n}\n\n.mdi-rotate-180:before {\n  transform: rotate(180deg);\n}\n\n.mdi-rotate-225 {\n  /*\r\n        // Not included in production\r\n        &.mdi-flip-h:before {\r\n            -webkit-transform: scaleX(-1) rotate(225deg);\r\n            transform: scaleX(-1) rotate(225deg);\r\n            filter: FlipH;\r\n            -ms-filter: \"FlipH\";\r\n        }\r\n        &.mdi-flip-v:before {\r\n            -webkit-transform: scaleY(-1) rotate(225deg);\r\n            -ms-transform: rotate(225deg);\r\n            transform: scaleY(-1) rotate(225deg);\r\n            filter: FlipV;\r\n            -ms-filter: \"FlipV\";\r\n        }\r\n        */\n}\n\n.mdi-rotate-225:before {\n  transform: rotate(225deg);\n}\n\n.mdi-rotate-270 {\n  /*\r\n        // Not included in production\r\n        &.mdi-flip-h:before {\r\n            -webkit-transform: scaleX(-1) rotate(270deg);\r\n            transform: scaleX(-1) rotate(270deg);\r\n            filter: FlipH;\r\n            -ms-filter: \"FlipH\";\r\n        }\r\n        &.mdi-flip-v:before {\r\n            -webkit-transform: scaleY(-1) rotate(270deg);\r\n            -ms-transform: rotate(270deg);\r\n            transform: scaleY(-1) rotate(270deg);\r\n            filter: FlipV;\r\n            -ms-filter: \"FlipV\";\r\n        }\r\n        */\n}\n\n.mdi-rotate-270:before {\n  transform: rotate(270deg);\n}\n\n.mdi-rotate-315 {\n  /*\r\n        // Not included in production\r\n        &.mdi-flip-h:before {\r\n            -webkit-transform: scaleX(-1) rotate(315deg);\r\n            transform: scaleX(-1) rotate(315deg);\r\n            filter: FlipH;\r\n            -ms-filter: \"FlipH\";\r\n        }\r\n        &.mdi-flip-v:before {\r\n            -webkit-transform: scaleY(-1) rotate(315deg);\r\n            -ms-transform: rotate(315deg);\r\n            transform: scaleY(-1) rotate(315deg);\r\n            filter: FlipV;\r\n            -ms-filter: \"FlipV\";\r\n        }\r\n        */\n}\n\n.mdi-rotate-315:before {\n  transform: rotate(315deg);\n}\n\n.mdi-flip-h:before {\n  transform: scaleX(-1);\n  filter: FlipH;\n  -ms-filter: \"FlipH\";\n}\n\n.mdi-flip-v:before {\n  transform: scaleY(-1);\n  filter: FlipV;\n  -ms-filter: \"FlipV\";\n}\n\n.mdi-spin:before {\n  -webkit-animation: mdi-spin 2s infinite linear;\n  animation: mdi-spin 2s infinite linear;\n}\n\n@-webkit-keyframes mdi-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(359deg);\n  }\n}\n\n@keyframes mdi-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(359deg);\n  }\n}", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== "string") {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ "./node_modules/deep-equal/index.js":
/*!******************************************!*\
  !*** ./node_modules/deep-equal/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var objectKeys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var isArguments = __webpack_require__(/*! is-arguments */ "./node_modules/is-arguments/index.js");
var is = __webpack_require__(/*! object-is */ "./node_modules/object-is/index.js");
var isRegex = __webpack_require__(/*! is-regex */ "./node_modules/is-regex/index.js");
var flags = __webpack_require__(/*! regexp.prototype.flags */ "./node_modules/regexp.prototype.flags/index.js");
var isDate = __webpack_require__(/*! is-date-object */ "./node_modules/is-date-object/index.js");

var getTime = Date.prototype.getTime;

function deepEqual(actual, expected, options) {
  var opts = options || {};

  // 7.1. All identical values are equivalent, as determined by ===.
  if (opts.strict ? is(actual, expected) : actual === expected) {
    return true;
  }

  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
    return opts.strict ? is(actual, expected) : actual == expected;
  }

  /*
   * 7.4. For all other Object pairs, including Array objects, equivalence is
   * determined by having the same number of owned properties (as verified
   * with Object.prototype.hasOwnProperty.call), the same set of keys
   * (although not necessarily the same order), equivalent values for every
   * corresponding key, and an identical 'prototype' property. Note: this
   * accounts for both named and indexed properties on Arrays.
   */
  // eslint-disable-next-line no-use-before-define
  return objEquiv(actual, expected, opts);
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer(x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
    return false;
  }
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') {
    return false;
  }
  return true;
}

function objEquiv(a, b, opts) {
  /* eslint max-statements: [2, 50] */
  var i, key;
  if (typeof a !== typeof b) { return false; }
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }

  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) { return false; }

  if (isArguments(a) !== isArguments(b)) { return false; }

  var aIsRegex = isRegex(a);
  var bIsRegex = isRegex(b);
  if (aIsRegex !== bIsRegex) { return false; }
  if (aIsRegex || bIsRegex) {
    return a.source === b.source && flags(a) === flags(b);
  }

  if (isDate(a) && isDate(b)) {
    return getTime.call(a) === getTime.call(b);
  }

  var aIsBuffer = isBuffer(a);
  var bIsBuffer = isBuffer(b);
  if (aIsBuffer !== bIsBuffer) { return false; }
  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
    if (a.length !== b.length) { return false; }
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) { return false; }
    }
    return true;
  }

  if (typeof a !== typeof b) { return false; }

  try {
    var ka = objectKeys(a);
    var kb = objectKeys(b);
  } catch (e) { // happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates hasOwnProperty)
  if (ka.length !== kb.length) { return false; }

  // the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  // ~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) { return false; }
  }
  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) { return false; }
  }

  return true;
}

module.exports = deepEqual;


/***/ }),

/***/ "./node_modules/define-properties/index.js":
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var keys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		origDefineProperty(obj, 'x', { enumerable: false, value: obj });
		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
		for (var _ in obj) { // jscs:ignore disallowUnusedVariables
			return false;
		}
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),

/***/ "./node_modules/extend/index.js":
/*!**************************************!*\
  !*** ./node_modules/extend/index.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";


var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var defineProperty = Object.defineProperty;
var gOPD = Object.getOwnPropertyDescriptor;

var isArray = function isArray(arr) {
	if (typeof Array.isArray === 'function') {
		return Array.isArray(arr);
	}

	return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) { /**/ }

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target
var setProperty = function setProperty(target, options) {
	if (defineProperty && options.name === '__proto__') {
		defineProperty(target, options.name, {
			enumerable: true,
			configurable: true,
			value: options.newValue,
			writable: true
		});
	} else {
		target[options.name] = options.newValue;
	}
};

// Return undefined instead of __proto__ if '__proto__' is not an own property
var getProperty = function getProperty(obj, name) {
	if (name === '__proto__') {
		if (!hasOwn.call(obj, name)) {
			return void 0;
		} else if (gOPD) {
			// In early versions of node, obj['__proto__'] is buggy when obj has
			// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
			return gOPD(obj, name).value;
		}
	}

	return obj[name];
};

module.exports = function extend() {
	var options, name, src, copy, copyIsArray, clone;
	var target = arguments[0];
	var i = 1;
	var length = arguments.length;
	var deep = false;

	// Handle a deep copy situation
	if (typeof target === 'boolean') {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}
	if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {
		target = {};
	}

	for (; i < length; ++i) {
		options = arguments[i];
		// Only deal with non-null/undefined values
		if (options != null) {
			// Extend the base object
			for (name in options) {
				src = getProperty(target, name);
				copy = getProperty(options, name);

				// Prevent never-ending loop
				if (target !== copy) {
					// Recurse if we're merging plain objects or arrays
					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && isArray(src) ? src : [];
						} else {
							clone = src && isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						setProperty(target, { name: name, newValue: extend(deep, clone, copy) });

					// Don't bring in undefined values
					} else if (typeof copy !== 'undefined') {
						setProperty(target, { name: name, newValue: copy });
					}
				}
			}
		}
	}

	// Return the modified object
	return target;
};


/***/ }),

/***/ "./node_modules/fast-diff/diff.js":
/*!****************************************!*\
  !*** ./node_modules/fast-diff/diff.js ***!
  \****************************************/
/***/ ((module) => {

/**
 * This library modifies the diff-patch-match library by Neil Fraser
 * by removing the patch and match functionality and certain advanced
 * options in the diff function. The original license is as follows:
 *
 * ===
 *
 * Diff Match and Patch
 *
 * Copyright 2006 Google Inc.
 * http://code.google.com/p/google-diff-match-patch/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * The data structure representing a diff is an array of tuples:
 * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
 * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
 */
var DIFF_DELETE = -1;
var DIFF_INSERT = 1;
var DIFF_EQUAL = 0;


/**
 * Find the differences between two texts.  Simplifies the problem by stripping
 * any common prefix or suffix off the texts before diffing.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @param {Int} cursor_pos Expected edit position in text1 (optional)
 * @return {Array} Array of diff tuples.
 */
function diff_main(text1, text2, cursor_pos) {
  // Check for equality (speedup).
  if (text1 == text2) {
    if (text1) {
      return [[DIFF_EQUAL, text1]];
    }
    return [];
  }

  // Check cursor_pos within bounds
  if (cursor_pos < 0 || text1.length < cursor_pos) {
    cursor_pos = null;
  }

  // Trim off common prefix (speedup).
  var commonlength = diff_commonPrefix(text1, text2);
  var commonprefix = text1.substring(0, commonlength);
  text1 = text1.substring(commonlength);
  text2 = text2.substring(commonlength);

  // Trim off common suffix (speedup).
  commonlength = diff_commonSuffix(text1, text2);
  var commonsuffix = text1.substring(text1.length - commonlength);
  text1 = text1.substring(0, text1.length - commonlength);
  text2 = text2.substring(0, text2.length - commonlength);

  // Compute the diff on the middle block.
  var diffs = diff_compute_(text1, text2);

  // Restore the prefix and suffix.
  if (commonprefix) {
    diffs.unshift([DIFF_EQUAL, commonprefix]);
  }
  if (commonsuffix) {
    diffs.push([DIFF_EQUAL, commonsuffix]);
  }
  diff_cleanupMerge(diffs);
  if (cursor_pos != null) {
    diffs = fix_cursor(diffs, cursor_pos);
  }
  diffs = fix_emoji(diffs);
  return diffs;
};


/**
 * Find the differences between two texts.  Assumes that the texts do not
 * have any common prefix or suffix.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @return {Array} Array of diff tuples.
 */
function diff_compute_(text1, text2) {
  var diffs;

  if (!text1) {
    // Just add some text (speedup).
    return [[DIFF_INSERT, text2]];
  }

  if (!text2) {
    // Just delete some text (speedup).
    return [[DIFF_DELETE, text1]];
  }

  var longtext = text1.length > text2.length ? text1 : text2;
  var shorttext = text1.length > text2.length ? text2 : text1;
  var i = longtext.indexOf(shorttext);
  if (i != -1) {
    // Shorter text is inside the longer text (speedup).
    diffs = [[DIFF_INSERT, longtext.substring(0, i)],
             [DIFF_EQUAL, shorttext],
             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];
    // Swap insertions for deletions if diff is reversed.
    if (text1.length > text2.length) {
      diffs[0][0] = diffs[2][0] = DIFF_DELETE;
    }
    return diffs;
  }

  if (shorttext.length == 1) {
    // Single character string.
    // After the previous speedup, the character can't be an equality.
    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
  }

  // Check to see if the problem can be split in two.
  var hm = diff_halfMatch_(text1, text2);
  if (hm) {
    // A half-match was found, sort out the return data.
    var text1_a = hm[0];
    var text1_b = hm[1];
    var text2_a = hm[2];
    var text2_b = hm[3];
    var mid_common = hm[4];
    // Send both pairs off for separate processing.
    var diffs_a = diff_main(text1_a, text2_a);
    var diffs_b = diff_main(text1_b, text2_b);
    // Merge the results.
    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
  }

  return diff_bisect_(text1, text2);
};


/**
 * Find the 'middle snake' of a diff, split the problem in two
 * and return the recursively constructed diff.
 * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @return {Array} Array of diff tuples.
 * @private
 */
function diff_bisect_(text1, text2) {
  // Cache the text lengths to prevent multiple calls.
  var text1_length = text1.length;
  var text2_length = text2.length;
  var max_d = Math.ceil((text1_length + text2_length) / 2);
  var v_offset = max_d;
  var v_length = 2 * max_d;
  var v1 = new Array(v_length);
  var v2 = new Array(v_length);
  // Setting all elements to -1 is faster in Chrome & Firefox than mixing
  // integers and undefined.
  for (var x = 0; x < v_length; x++) {
    v1[x] = -1;
    v2[x] = -1;
  }
  v1[v_offset + 1] = 0;
  v2[v_offset + 1] = 0;
  var delta = text1_length - text2_length;
  // If the total number of characters is odd, then the front path will collide
  // with the reverse path.
  var front = (delta % 2 != 0);
  // Offsets for start and end of k loop.
  // Prevents mapping of space beyond the grid.
  var k1start = 0;
  var k1end = 0;
  var k2start = 0;
  var k2end = 0;
  for (var d = 0; d < max_d; d++) {
    // Walk the front path one step.
    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
      var k1_offset = v_offset + k1;
      var x1;
      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {
        x1 = v1[k1_offset + 1];
      } else {
        x1 = v1[k1_offset - 1] + 1;
      }
      var y1 = x1 - k1;
      while (x1 < text1_length && y1 < text2_length &&
             text1.charAt(x1) == text2.charAt(y1)) {
        x1++;
        y1++;
      }
      v1[k1_offset] = x1;
      if (x1 > text1_length) {
        // Ran off the right of the graph.
        k1end += 2;
      } else if (y1 > text2_length) {
        // Ran off the bottom of the graph.
        k1start += 2;
      } else if (front) {
        var k2_offset = v_offset + delta - k1;
        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
          // Mirror x2 onto top-left coordinate system.
          var x2 = text1_length - v2[k2_offset];
          if (x1 >= x2) {
            // Overlap detected.
            return diff_bisectSplit_(text1, text2, x1, y1);
          }
        }
      }
    }

    // Walk the reverse path one step.
    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
      var k2_offset = v_offset + k2;
      var x2;
      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {
        x2 = v2[k2_offset + 1];
      } else {
        x2 = v2[k2_offset - 1] + 1;
      }
      var y2 = x2 - k2;
      while (x2 < text1_length && y2 < text2_length &&
             text1.charAt(text1_length - x2 - 1) ==
             text2.charAt(text2_length - y2 - 1)) {
        x2++;
        y2++;
      }
      v2[k2_offset] = x2;
      if (x2 > text1_length) {
        // Ran off the left of the graph.
        k2end += 2;
      } else if (y2 > text2_length) {
        // Ran off the top of the graph.
        k2start += 2;
      } else if (!front) {
        var k1_offset = v_offset + delta - k2;
        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
          var x1 = v1[k1_offset];
          var y1 = v_offset + x1 - k1_offset;
          // Mirror x2 onto top-left coordinate system.
          x2 = text1_length - x2;
          if (x1 >= x2) {
            // Overlap detected.
            return diff_bisectSplit_(text1, text2, x1, y1);
          }
        }
      }
    }
  }
  // Diff took too long and hit the deadline or
  // number of diffs equals number of characters, no commonality at all.
  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
};


/**
 * Given the location of the 'middle snake', split the diff in two parts
 * and recurse.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @param {number} x Index of split point in text1.
 * @param {number} y Index of split point in text2.
 * @return {Array} Array of diff tuples.
 */
function diff_bisectSplit_(text1, text2, x, y) {
  var text1a = text1.substring(0, x);
  var text2a = text2.substring(0, y);
  var text1b = text1.substring(x);
  var text2b = text2.substring(y);

  // Compute both diffs serially.
  var diffs = diff_main(text1a, text2a);
  var diffsb = diff_main(text1b, text2b);

  return diffs.concat(diffsb);
};


/**
 * Determine the common prefix of two strings.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {number} The number of characters common to the start of each
 *     string.
 */
function diff_commonPrefix(text1, text2) {
  // Quick check for common null cases.
  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
    return 0;
  }
  // Binary search.
  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
  var pointermin = 0;
  var pointermax = Math.min(text1.length, text2.length);
  var pointermid = pointermax;
  var pointerstart = 0;
  while (pointermin < pointermid) {
    if (text1.substring(pointerstart, pointermid) ==
        text2.substring(pointerstart, pointermid)) {
      pointermin = pointermid;
      pointerstart = pointermin;
    } else {
      pointermax = pointermid;
    }
    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
  }
  return pointermid;
};


/**
 * Determine the common suffix of two strings.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {number} The number of characters common to the end of each string.
 */
function diff_commonSuffix(text1, text2) {
  // Quick check for common null cases.
  if (!text1 || !text2 ||
      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
    return 0;
  }
  // Binary search.
  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
  var pointermin = 0;
  var pointermax = Math.min(text1.length, text2.length);
  var pointermid = pointermax;
  var pointerend = 0;
  while (pointermin < pointermid) {
    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==
        text2.substring(text2.length - pointermid, text2.length - pointerend)) {
      pointermin = pointermid;
      pointerend = pointermin;
    } else {
      pointermax = pointermid;
    }
    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
  }
  return pointermid;
};


/**
 * Do the two texts share a substring which is at least half the length of the
 * longer text?
 * This speedup can produce non-minimal diffs.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {Array.<string>} Five element Array, containing the prefix of
 *     text1, the suffix of text1, the prefix of text2, the suffix of
 *     text2 and the common middle.  Or null if there was no match.
 */
function diff_halfMatch_(text1, text2) {
  var longtext = text1.length > text2.length ? text1 : text2;
  var shorttext = text1.length > text2.length ? text2 : text1;
  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
    return null;  // Pointless.
  }

  /**
   * Does a substring of shorttext exist within longtext such that the substring
   * is at least half the length of longtext?
   * Closure, but does not reference any external variables.
   * @param {string} longtext Longer string.
   * @param {string} shorttext Shorter string.
   * @param {number} i Start index of quarter length substring within longtext.
   * @return {Array.<string>} Five element Array, containing the prefix of
   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
   *     of shorttext and the common middle.  Or null if there was no match.
   * @private
   */
  function diff_halfMatchI_(longtext, shorttext, i) {
    // Start with a 1/4 length substring at position i as a seed.
    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));
    var j = -1;
    var best_common = '';
    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;
    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {
      var prefixLength = diff_commonPrefix(longtext.substring(i),
                                           shorttext.substring(j));
      var suffixLength = diff_commonSuffix(longtext.substring(0, i),
                                           shorttext.substring(0, j));
      if (best_common.length < suffixLength + prefixLength) {
        best_common = shorttext.substring(j - suffixLength, j) +
            shorttext.substring(j, j + prefixLength);
        best_longtext_a = longtext.substring(0, i - suffixLength);
        best_longtext_b = longtext.substring(i + prefixLength);
        best_shorttext_a = shorttext.substring(0, j - suffixLength);
        best_shorttext_b = shorttext.substring(j + prefixLength);
      }
    }
    if (best_common.length * 2 >= longtext.length) {
      return [best_longtext_a, best_longtext_b,
              best_shorttext_a, best_shorttext_b, best_common];
    } else {
      return null;
    }
  }

  // First check if the second quarter is the seed for a half-match.
  var hm1 = diff_halfMatchI_(longtext, shorttext,
                             Math.ceil(longtext.length / 4));
  // Check again based on the third quarter.
  var hm2 = diff_halfMatchI_(longtext, shorttext,
                             Math.ceil(longtext.length / 2));
  var hm;
  if (!hm1 && !hm2) {
    return null;
  } else if (!hm2) {
    hm = hm1;
  } else if (!hm1) {
    hm = hm2;
  } else {
    // Both matched.  Select the longest.
    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
  }

  // A half-match was found, sort out the return data.
  var text1_a, text1_b, text2_a, text2_b;
  if (text1.length > text2.length) {
    text1_a = hm[0];
    text1_b = hm[1];
    text2_a = hm[2];
    text2_b = hm[3];
  } else {
    text2_a = hm[0];
    text2_b = hm[1];
    text1_a = hm[2];
    text1_b = hm[3];
  }
  var mid_common = hm[4];
  return [text1_a, text1_b, text2_a, text2_b, mid_common];
};


/**
 * Reorder and merge like edit sections.  Merge equalities.
 * Any edit section can move as long as it doesn't cross an equality.
 * @param {Array} diffs Array of diff tuples.
 */
function diff_cleanupMerge(diffs) {
  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.
  var pointer = 0;
  var count_delete = 0;
  var count_insert = 0;
  var text_delete = '';
  var text_insert = '';
  var commonlength;
  while (pointer < diffs.length) {
    switch (diffs[pointer][0]) {
      case DIFF_INSERT:
        count_insert++;
        text_insert += diffs[pointer][1];
        pointer++;
        break;
      case DIFF_DELETE:
        count_delete++;
        text_delete += diffs[pointer][1];
        pointer++;
        break;
      case DIFF_EQUAL:
        // Upon reaching an equality, check for prior redundancies.
        if (count_delete + count_insert > 1) {
          if (count_delete !== 0 && count_insert !== 0) {
            // Factor out any common prefixies.
            commonlength = diff_commonPrefix(text_insert, text_delete);
            if (commonlength !== 0) {
              if ((pointer - count_delete - count_insert) > 0 &&
                  diffs[pointer - count_delete - count_insert - 1][0] ==
                  DIFF_EQUAL) {
                diffs[pointer - count_delete - count_insert - 1][1] +=
                    text_insert.substring(0, commonlength);
              } else {
                diffs.splice(0, 0, [DIFF_EQUAL,
                                    text_insert.substring(0, commonlength)]);
                pointer++;
              }
              text_insert = text_insert.substring(commonlength);
              text_delete = text_delete.substring(commonlength);
            }
            // Factor out any common suffixies.
            commonlength = diff_commonSuffix(text_insert, text_delete);
            if (commonlength !== 0) {
              diffs[pointer][1] = text_insert.substring(text_insert.length -
                  commonlength) + diffs[pointer][1];
              text_insert = text_insert.substring(0, text_insert.length -
                  commonlength);
              text_delete = text_delete.substring(0, text_delete.length -
                  commonlength);
            }
          }
          // Delete the offending records and add the merged ones.
          if (count_delete === 0) {
            diffs.splice(pointer - count_insert,
                count_delete + count_insert, [DIFF_INSERT, text_insert]);
          } else if (count_insert === 0) {
            diffs.splice(pointer - count_delete,
                count_delete + count_insert, [DIFF_DELETE, text_delete]);
          } else {
            diffs.splice(pointer - count_delete - count_insert,
                count_delete + count_insert, [DIFF_DELETE, text_delete],
                [DIFF_INSERT, text_insert]);
          }
          pointer = pointer - count_delete - count_insert +
                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
          // Merge this equality with the previous one.
          diffs[pointer - 1][1] += diffs[pointer][1];
          diffs.splice(pointer, 1);
        } else {
          pointer++;
        }
        count_insert = 0;
        count_delete = 0;
        text_delete = '';
        text_insert = '';
        break;
    }
  }
  if (diffs[diffs.length - 1][1] === '') {
    diffs.pop();  // Remove the dummy entry at the end.
  }

  // Second pass: look for single edits surrounded on both sides by equalities
  // which can be shifted sideways to eliminate an equality.
  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC
  var changes = false;
  pointer = 1;
  // Intentionally ignore the first and last element (don't need checking).
  while (pointer < diffs.length - 1) {
    if (diffs[pointer - 1][0] == DIFF_EQUAL &&
        diffs[pointer + 1][0] == DIFF_EQUAL) {
      // This is a single edit surrounded by equalities.
      if (diffs[pointer][1].substring(diffs[pointer][1].length -
          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
        // Shift the edit over the previous equality.
        diffs[pointer][1] = diffs[pointer - 1][1] +
            diffs[pointer][1].substring(0, diffs[pointer][1].length -
                                        diffs[pointer - 1][1].length);
        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
        diffs.splice(pointer - 1, 1);
        changes = true;
      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==
          diffs[pointer + 1][1]) {
        // Shift the edit over the next equality.
        diffs[pointer - 1][1] += diffs[pointer + 1][1];
        diffs[pointer][1] =
            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +
            diffs[pointer + 1][1];
        diffs.splice(pointer + 1, 1);
        changes = true;
      }
    }
    pointer++;
  }
  // If shifts were made, the diff needs reordering and another shift sweep.
  if (changes) {
    diff_cleanupMerge(diffs);
  }
};


var diff = diff_main;
diff.INSERT = DIFF_INSERT;
diff.DELETE = DIFF_DELETE;
diff.EQUAL = DIFF_EQUAL;

module.exports = diff;

/*
 * Modify a diff such that the cursor position points to the start of a change:
 * E.g.
 *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)
 *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]
 *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)
 *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]
 *
 * @param {Array} diffs Array of diff tuples
 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
 * @return {Array} A tuple [cursor location in the modified diff, modified diff]
 */
function cursor_normalize_diff (diffs, cursor_pos) {
  if (cursor_pos === 0) {
    return [DIFF_EQUAL, diffs];
  }
  for (var current_pos = 0, i = 0; i < diffs.length; i++) {
    var d = diffs[i];
    if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
      var next_pos = current_pos + d[1].length;
      if (cursor_pos === next_pos) {
        return [i + 1, diffs];
      } else if (cursor_pos < next_pos) {
        // copy to prevent side effects
        diffs = diffs.slice();
        // split d into two diff changes
        var split_pos = cursor_pos - current_pos;
        var d_left = [d[0], d[1].slice(0, split_pos)];
        var d_right = [d[0], d[1].slice(split_pos)];
        diffs.splice(i, 1, d_left, d_right);
        return [i + 1, diffs];
      } else {
        current_pos = next_pos;
      }
    }
  }
  throw new Error('cursor_pos is out of bounds!')
}

/*
 * Modify a diff such that the edit position is "shifted" to the proposed edit location (cursor_position).
 *
 * Case 1)
 *   Check if a naive shift is possible:
 *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)
 *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result
 * Case 2)
 *   Check if the following shifts are possible:
 *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']
 *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']
 *         ^            ^
 *         d          d_next
 *
 * @param {Array} diffs Array of diff tuples
 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
 * @return {Array} Array of diff tuples
 */
function fix_cursor (diffs, cursor_pos) {
  var norm = cursor_normalize_diff(diffs, cursor_pos);
  var ndiffs = norm[1];
  var cursor_pointer = norm[0];
  var d = ndiffs[cursor_pointer];
  var d_next = ndiffs[cursor_pointer + 1];

  if (d == null) {
    // Text was deleted from end of original string,
    // cursor is now out of bounds in new string
    return diffs;
  } else if (d[0] !== DIFF_EQUAL) {
    // A modification happened at the cursor location.
    // This is the expected outcome, so we can return the original diff.
    return diffs;
  } else {
    if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {
      // Case 1)
      // It is possible to perform a naive shift
      ndiffs.splice(cursor_pointer, 2, d_next, d)
      return merge_tuples(ndiffs, cursor_pointer, 2)
    } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {
      // Case 2)
      // d[1] is a prefix of d_next[1]
      // We can assume that d_next[0] !== 0, since d[0] === 0
      // Shift edit locations..
      ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);
      var suffix = d_next[1].slice(d[1].length);
      if (suffix.length > 0) {
        ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
      }
      return merge_tuples(ndiffs, cursor_pointer, 3)
    } else {
      // Not possible to perform any modification
      return diffs;
    }
  }
}

/*
 * Check diff did not split surrogate pairs.
 * Ex. [0, '\uD83D'], [-1, '\uDC36'], [1, '\uDC2F'] -> [-1, '\uD83D\uDC36'], [1, '\uD83D\uDC2F']
 *     '\uD83D\uDC36' === '🐶', '\uD83D\uDC2F' === '🐯'
 *
 * @param {Array} diffs Array of diff tuples
 * @return {Array} Array of diff tuples
 */
function fix_emoji (diffs) {
  var compact = false;
  var starts_with_pair_end = function(str) {
    return str.charCodeAt(0) >= 0xDC00 && str.charCodeAt(0) <= 0xDFFF;
  }
  var ends_with_pair_start = function(str) {
    return str.charCodeAt(str.length-1) >= 0xD800 && str.charCodeAt(str.length-1) <= 0xDBFF;
  }
  for (var i = 2; i < diffs.length; i += 1) {
    if (diffs[i-2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i-2][1]) &&
        diffs[i-1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i-1][1]) &&
        diffs[i][0] === DIFF_INSERT && starts_with_pair_end(diffs[i][1])) {
      compact = true;

      diffs[i-1][1] = diffs[i-2][1].slice(-1) + diffs[i-1][1];
      diffs[i][1] = diffs[i-2][1].slice(-1) + diffs[i][1];

      diffs[i-2][1] = diffs[i-2][1].slice(0, -1);
    }
  }
  if (!compact) {
    return diffs;
  }
  var fixed_diffs = [];
  for (var i = 0; i < diffs.length; i += 1) {
    if (diffs[i][1].length > 0) {
      fixed_diffs.push(diffs[i]);
    }
  }
  return fixed_diffs;
}

/*
 * Try to merge tuples with their neigbors in a given range.
 * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']
 *
 * @param {Array} diffs Array of diff tuples.
 * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).
 * @param {Int} length Number of consecutive elements to check.
 * @return {Array} Array of merged diff tuples.
 */
function merge_tuples (diffs, start, length) {
  // Check from (start-1) to (start+length).
  for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {
    if (i + 1 < diffs.length) {
      var left_d = diffs[i];
      var right_d = diffs[i+1];
      if (left_d[0] === right_d[1]) {
        diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
      }
    }
  }
  return diffs;
}


/***/ }),

/***/ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.eot":
/*!**********************************************************************!*\
  !*** ./node_modules/@mdi/font/fonts/materialdesignicons-webfont.eot ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("/fonts/vendor/@mdi/materialdesignicons-webfont.eot?53f53f50a1b2033979f58d724a02a7e5");

/***/ }),

/***/ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.eot?v=5.9.55":
/*!*******************************************************************************!*\
  !*** ./node_modules/@mdi/font/fonts/materialdesignicons-webfont.eot?v=5.9.55 ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("/fonts/vendor/@mdi/materialdesignicons-webfont.eot?53f53f50a1b2033979f58d724a02a7e5");

/***/ }),

/***/ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.ttf?v=5.9.55":
/*!*******************************************************************************!*\
  !*** ./node_modules/@mdi/font/fonts/materialdesignicons-webfont.ttf?v=5.9.55 ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("/fonts/vendor/@mdi/materialdesignicons-webfont.ttf?0e4e0b3da55fa7faa77b4c2d978008dd");

/***/ }),

/***/ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.woff2?v=5.9.55":
/*!*********************************************************************************!*\
  !*** ./node_modules/@mdi/font/fonts/materialdesignicons-webfont.woff2?v=5.9.55 ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("/fonts/vendor/@mdi/materialdesignicons-webfont.woff2?e9db4005489e24809b62e61177c543a8");

/***/ }),

/***/ "./node_modules/@mdi/font/fonts/materialdesignicons-webfont.woff?v=5.9.55":
/*!********************************************************************************!*\
  !*** ./node_modules/@mdi/font/fonts/materialdesignicons-webfont.woff?v=5.9.55 ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("/fonts/vendor/@mdi/materialdesignicons-webfont.woff?d8e8e0f7931afa097409dbb0ea7815d8");

/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");

module.exports = Function.prototype.bind || implementation;


/***/ }),

/***/ "./node_modules/get-intrinsic/index.js":
/*!*********************************************!*\
  !*** ./node_modules/get-intrinsic/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = __webpack_require__(/*! has-symbols */ "./node_modules/has-symbols/index.js")();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var hasOwn = __webpack_require__(/*! has */ "./node_modules/has/src/index.js");
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};


/***/ }),

/***/ "./node_modules/has-symbols/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = __webpack_require__(/*! ./shams */ "./node_modules/has-symbols/shams.js");

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};


/***/ }),

/***/ "./node_modules/has-symbols/shams.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";


/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};


/***/ }),

/***/ "./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/is-arguments/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-arguments/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;


/***/ }),

/***/ "./node_modules/is-date-object/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-date-object/index.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";


var getDay = Date.prototype.getDay;
var tryDateObject = function tryDateGetDayCall(value) {
	try {
		getDay.call(value);
		return true;
	} catch (e) {
		return false;
	}
};

var toStr = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag;

module.exports = function isDateObject(value) {
	if (typeof value !== 'object' || value === null) {
		return false;
	}
	return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
};


/***/ }),

/***/ "./node_modules/is-regex/index.js":
/*!****************************************!*\
  !*** ./node_modules/is-regex/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var callBound = __webpack_require__(/*! call-bind/callBound */ "./node_modules/call-bind/callBound.js");
var hasSymbols = __webpack_require__(/*! has-symbols/shams */ "./node_modules/has-symbols/shams.js")();
var hasToStringTag = hasSymbols && !!Symbol.toStringTag;
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/***/ ((module) => {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/lodash/lodash.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));


/***/ }),

/***/ "./resources/css/app.css":
/*!*******************************!*\
  !*** ./resources/css/app.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/object-is/implementation.js":
/*!**************************************************!*\
  !*** ./node_modules/object-is/implementation.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


var numberIsNaN = function (value) {
	return value !== value;
};

module.exports = function is(a, b) {
	if (a === 0 && b === 0) {
		return 1 / a === 1 / b;
	}
	if (a === b) {
		return true;
	}
	if (numberIsNaN(a) && numberIsNaN(b)) {
		return true;
	}
	return false;
};



/***/ }),

/***/ "./node_modules/object-is/index.js":
/*!*****************************************!*\
  !*** ./node_modules/object-is/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object-is/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object-is/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/object-is/shim.js");

var polyfill = callBind(getPolyfill(), Object);

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;


/***/ }),

/***/ "./node_modules/object-is/polyfill.js":
/*!********************************************!*\
  !*** ./node_modules/object-is/polyfill.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/object-is/implementation.js");

module.exports = function getPolyfill() {
	return typeof Object.is === 'function' ? Object.is : implementation;
};


/***/ }),

/***/ "./node_modules/object-is/shim.js":
/*!****************************************!*\
  !*** ./node_modules/object-is/shim.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/object-is/polyfill.js");
var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");

module.exports = function shimObjectIs() {
	var polyfill = getPolyfill();
	define(Object, { is: polyfill }, {
		is: function testObjectIs() {
			return Object.is !== polyfill;
		}
	});
	return polyfill;
};


/***/ }),

/***/ "./node_modules/object-keys/implementation.js":
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js"); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;


/***/ }),

/***/ "./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var slice = Array.prototype.slice;
var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js");

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ "./node_modules/object-keys/implementation.js");

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


/***/ }),

/***/ "./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


/***/ }),

/***/ "./node_modules/parchment/dist/parchment.js":
/*!**************************************************!*\
  !*** ./node_modules/parchment/dist/parchment.js ***!
  \**************************************************/
/***/ (function(module) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __nested_webpack_require_578__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_578__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nested_webpack_require_578__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__nested_webpack_require_578__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__nested_webpack_require_578__.d = function(exports, name, getter) {
/******/ 		if(!__nested_webpack_require_578__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__nested_webpack_require_578__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__nested_webpack_require_578__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__nested_webpack_require_578__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__nested_webpack_require_578__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __nested_webpack_require_578__(__nested_webpack_require_578__.s = 9);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ParchmentError = /** @class */ (function (_super) {
    __extends(ParchmentError, _super);
    function ParchmentError(message) {
        var _this = this;
        message = '[Parchment] ' + message;
        _this = _super.call(this, message) || this;
        _this.message = message;
        _this.name = _this.constructor.name;
        return _this;
    }
    return ParchmentError;
}(Error));
exports.ParchmentError = ParchmentError;
var attributes = {};
var classes = {};
var tags = {};
var types = {};
exports.DATA_KEY = '__blot';
var Scope;
(function (Scope) {
    Scope[Scope["TYPE"] = 3] = "TYPE";
    Scope[Scope["LEVEL"] = 12] = "LEVEL";
    Scope[Scope["ATTRIBUTE"] = 13] = "ATTRIBUTE";
    Scope[Scope["BLOT"] = 14] = "BLOT";
    Scope[Scope["INLINE"] = 7] = "INLINE";
    Scope[Scope["BLOCK"] = 11] = "BLOCK";
    Scope[Scope["BLOCK_BLOT"] = 10] = "BLOCK_BLOT";
    Scope[Scope["INLINE_BLOT"] = 6] = "INLINE_BLOT";
    Scope[Scope["BLOCK_ATTRIBUTE"] = 9] = "BLOCK_ATTRIBUTE";
    Scope[Scope["INLINE_ATTRIBUTE"] = 5] = "INLINE_ATTRIBUTE";
    Scope[Scope["ANY"] = 15] = "ANY";
})(Scope = exports.Scope || (exports.Scope = {}));
function create(input, value) {
    var match = query(input);
    if (match == null) {
        throw new ParchmentError("Unable to create " + input + " blot");
    }
    var BlotClass = match;
    var node = 
    // @ts-ignore
    input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);
    return new BlotClass(node, value);
}
exports.create = create;
function find(node, bubble) {
    if (bubble === void 0) { bubble = false; }
    if (node == null)
        return null;
    // @ts-ignore
    if (node[exports.DATA_KEY] != null)
        return node[exports.DATA_KEY].blot;
    if (bubble)
        return find(node.parentNode, bubble);
    return null;
}
exports.find = find;
function query(query, scope) {
    if (scope === void 0) { scope = Scope.ANY; }
    var match;
    if (typeof query === 'string') {
        match = types[query] || attributes[query];
        // @ts-ignore
    }
    else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {
        match = types['text'];
    }
    else if (typeof query === 'number') {
        if (query & Scope.LEVEL & Scope.BLOCK) {
            match = types['block'];
        }
        else if (query & Scope.LEVEL & Scope.INLINE) {
            match = types['inline'];
        }
    }
    else if (query instanceof HTMLElement) {
        var names = (query.getAttribute('class') || '').split(/\s+/);
        for (var i in names) {
            match = classes[names[i]];
            if (match)
                break;
        }
        match = match || tags[query.tagName];
    }
    if (match == null)
        return null;
    // @ts-ignore
    if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope)
        return match;
    return null;
}
exports.query = query;
function register() {
    var Definitions = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        Definitions[_i] = arguments[_i];
    }
    if (Definitions.length > 1) {
        return Definitions.map(function (d) {
            return register(d);
        });
    }
    var Definition = Definitions[0];
    if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {
        throw new ParchmentError('Invalid definition');
    }
    else if (Definition.blotName === 'abstract') {
        throw new ParchmentError('Cannot register abstract class');
    }
    types[Definition.blotName || Definition.attrName] = Definition;
    if (typeof Definition.keyName === 'string') {
        attributes[Definition.keyName] = Definition;
    }
    else {
        if (Definition.className != null) {
            classes[Definition.className] = Definition;
        }
        if (Definition.tagName != null) {
            if (Array.isArray(Definition.tagName)) {
                Definition.tagName = Definition.tagName.map(function (tagName) {
                    return tagName.toUpperCase();
                });
            }
            else {
                Definition.tagName = Definition.tagName.toUpperCase();
            }
            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];
            tagNames.forEach(function (tag) {
                if (tags[tag] == null || Definition.className == null) {
                    tags[tag] = Definition;
                }
            });
        }
    }
    return Definition;
}
exports.register = register;


/***/ }),
/* 1 */
/***/ (function(module, exports, __nested_webpack_require_8065__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Registry = __nested_webpack_require_8065__(0);
var Attributor = /** @class */ (function () {
    function Attributor(attrName, keyName, options) {
        if (options === void 0) { options = {}; }
        this.attrName = attrName;
        this.keyName = keyName;
        var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
        if (options.scope != null) {
            // Ignore type bits, force attribute bit
            this.scope = (options.scope & Registry.Scope.LEVEL) | attributeBit;
        }
        else {
            this.scope = Registry.Scope.ATTRIBUTE;
        }
        if (options.whitelist != null)
            this.whitelist = options.whitelist;
    }
    Attributor.keys = function (node) {
        return [].map.call(node.attributes, function (item) {
            return item.name;
        });
    };
    Attributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        node.setAttribute(this.keyName, value);
        return true;
    };
    Attributor.prototype.canAdd = function (node, value) {
        var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));
        if (match == null)
            return false;
        if (this.whitelist == null)
            return true;
        if (typeof value === 'string') {
            return this.whitelist.indexOf(value.replace(/["']/g, '')) > -1;
        }
        else {
            return this.whitelist.indexOf(value) > -1;
        }
    };
    Attributor.prototype.remove = function (node) {
        node.removeAttribute(this.keyName);
    };
    Attributor.prototype.value = function (node) {
        var value = node.getAttribute(this.keyName);
        if (this.canAdd(node, value) && value) {
            return value;
        }
        return '';
    };
    return Attributor;
}());
exports.default = Attributor;


/***/ }),
/* 2 */
/***/ (function(module, exports, __nested_webpack_require_10111__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var linked_list_1 = __nested_webpack_require_10111__(11);
var shadow_1 = __nested_webpack_require_10111__(5);
var Registry = __nested_webpack_require_10111__(0);
var ContainerBlot = /** @class */ (function (_super) {
    __extends(ContainerBlot, _super);
    function ContainerBlot(domNode) {
        var _this = _super.call(this, domNode) || this;
        _this.build();
        return _this;
    }
    ContainerBlot.prototype.appendChild = function (other) {
        this.insertBefore(other);
    };
    ContainerBlot.prototype.attach = function () {
        _super.prototype.attach.call(this);
        this.children.forEach(function (child) {
            child.attach();
        });
    };
    ContainerBlot.prototype.build = function () {
        var _this = this;
        this.children = new linked_list_1.default();
        // Need to be reversed for if DOM nodes already in order
        [].slice
            .call(this.domNode.childNodes)
            .reverse()
            .forEach(function (node) {
            try {
                var child = makeBlot(node);
                _this.insertBefore(child, _this.children.head || undefined);
            }
            catch (err) {
                if (err instanceof Registry.ParchmentError)
                    return;
                else
                    throw err;
            }
        });
    };
    ContainerBlot.prototype.deleteAt = function (index, length) {
        if (index === 0 && length === this.length()) {
            return this.remove();
        }
        this.children.forEachAt(index, length, function (child, offset, length) {
            child.deleteAt(offset, length);
        });
    };
    ContainerBlot.prototype.descendant = function (criteria, index) {
        var _a = this.children.find(index), child = _a[0], offset = _a[1];
        if ((criteria.blotName == null && criteria(child)) ||
            (criteria.blotName != null && child instanceof criteria)) {
            return [child, offset];
        }
        else if (child instanceof ContainerBlot) {
            return child.descendant(criteria, offset);
        }
        else {
            return [null, -1];
        }
    };
    ContainerBlot.prototype.descendants = function (criteria, index, length) {
        if (index === void 0) { index = 0; }
        if (length === void 0) { length = Number.MAX_VALUE; }
        var descendants = [];
        var lengthLeft = length;
        this.children.forEachAt(index, length, function (child, index, length) {
            if ((criteria.blotName == null && criteria(child)) ||
                (criteria.blotName != null && child instanceof criteria)) {
                descendants.push(child);
            }
            if (child instanceof ContainerBlot) {
                descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));
            }
            lengthLeft -= length;
        });
        return descendants;
    };
    ContainerBlot.prototype.detach = function () {
        this.children.forEach(function (child) {
            child.detach();
        });
        _super.prototype.detach.call(this);
    };
    ContainerBlot.prototype.formatAt = function (index, length, name, value) {
        this.children.forEachAt(index, length, function (child, offset, length) {
            child.formatAt(offset, length, name, value);
        });
    };
    ContainerBlot.prototype.insertAt = function (index, value, def) {
        var _a = this.children.find(index), child = _a[0], offset = _a[1];
        if (child) {
            child.insertAt(offset, value, def);
        }
        else {
            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
            this.appendChild(blot);
        }
    };
    ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {
        if (this.statics.allowedChildren != null &&
            !this.statics.allowedChildren.some(function (child) {
                return childBlot instanceof child;
            })) {
            throw new Registry.ParchmentError("Cannot insert " + childBlot.statics.blotName + " into " + this.statics.blotName);
        }
        childBlot.insertInto(this, refBlot);
    };
    ContainerBlot.prototype.length = function () {
        return this.children.reduce(function (memo, child) {
            return memo + child.length();
        }, 0);
    };
    ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {
        this.children.forEach(function (child) {
            targetParent.insertBefore(child, refNode);
        });
    };
    ContainerBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        if (this.children.length === 0) {
            if (this.statics.defaultChild != null) {
                var child = Registry.create(this.statics.defaultChild);
                this.appendChild(child);
                child.optimize(context);
            }
            else {
                this.remove();
            }
        }
    };
    ContainerBlot.prototype.path = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        var _a = this.children.find(index, inclusive), child = _a[0], offset = _a[1];
        var position = [[this, index]];
        if (child instanceof ContainerBlot) {
            return position.concat(child.path(offset, inclusive));
        }
        else if (child != null) {
            position.push([child, offset]);
        }
        return position;
    };
    ContainerBlot.prototype.removeChild = function (child) {
        this.children.remove(child);
    };
    ContainerBlot.prototype.replace = function (target) {
        if (target instanceof ContainerBlot) {
            target.moveChildren(this);
        }
        _super.prototype.replace.call(this, target);
    };
    ContainerBlot.prototype.split = function (index, force) {
        if (force === void 0) { force = false; }
        if (!force) {
            if (index === 0)
                return this;
            if (index === this.length())
                return this.next;
        }
        var after = this.clone();
        this.parent.insertBefore(after, this.next);
        this.children.forEachAt(index, this.length(), function (child, offset, length) {
            child = child.split(offset, force);
            after.appendChild(child);
        });
        return after;
    };
    ContainerBlot.prototype.unwrap = function () {
        this.moveChildren(this.parent, this.next);
        this.remove();
    };
    ContainerBlot.prototype.update = function (mutations, context) {
        var _this = this;
        var addedNodes = [];
        var removedNodes = [];
        mutations.forEach(function (mutation) {
            if (mutation.target === _this.domNode && mutation.type === 'childList') {
                addedNodes.push.apply(addedNodes, mutation.addedNodes);
                removedNodes.push.apply(removedNodes, mutation.removedNodes);
            }
        });
        removedNodes.forEach(function (node) {
            // Check node has actually been removed
            // One exception is Chrome does not immediately remove IFRAMEs
            // from DOM but MutationRecord is correct in its reported removal
            if (node.parentNode != null &&
                // @ts-ignore
                node.tagName !== 'IFRAME' &&
                document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                return;
            }
            var blot = Registry.find(node);
            if (blot == null)
                return;
            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {
                blot.detach();
            }
        });
        addedNodes
            .filter(function (node) {
            return node.parentNode == _this.domNode;
        })
            .sort(function (a, b) {
            if (a === b)
                return 0;
            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {
                return 1;
            }
            return -1;
        })
            .forEach(function (node) {
            var refBlot = null;
            if (node.nextSibling != null) {
                refBlot = Registry.find(node.nextSibling);
            }
            var blot = makeBlot(node);
            if (blot.next != refBlot || blot.next == null) {
                if (blot.parent != null) {
                    blot.parent.removeChild(_this);
                }
                _this.insertBefore(blot, refBlot || undefined);
            }
        });
    };
    return ContainerBlot;
}(shadow_1.default));
function makeBlot(node) {
    var blot = Registry.find(node);
    if (blot == null) {
        try {
            blot = Registry.create(node);
        }
        catch (e) {
            blot = Registry.create(Registry.Scope.INLINE);
            [].slice.call(node.childNodes).forEach(function (child) {
                // @ts-ignore
                blot.domNode.appendChild(child);
            });
            if (node.parentNode) {
                node.parentNode.replaceChild(blot.domNode, node);
            }
            blot.attach();
        }
    }
    return blot;
}
exports.default = ContainerBlot;


/***/ }),
/* 3 */
/***/ (function(module, exports, __nested_webpack_require_20035__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_20035__(1);
var store_1 = __nested_webpack_require_20035__(6);
var container_1 = __nested_webpack_require_20035__(2);
var Registry = __nested_webpack_require_20035__(0);
var FormatBlot = /** @class */ (function (_super) {
    __extends(FormatBlot, _super);
    function FormatBlot(domNode) {
        var _this = _super.call(this, domNode) || this;
        _this.attributes = new store_1.default(_this.domNode);
        return _this;
    }
    FormatBlot.formats = function (domNode) {
        if (typeof this.tagName === 'string') {
            return true;
        }
        else if (Array.isArray(this.tagName)) {
            return domNode.tagName.toLowerCase();
        }
        return undefined;
    };
    FormatBlot.prototype.format = function (name, value) {
        var format = Registry.query(name);
        if (format instanceof attributor_1.default) {
            this.attributes.attribute(format, value);
        }
        else if (value) {
            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {
                this.replaceWith(name, value);
            }
        }
    };
    FormatBlot.prototype.formats = function () {
        var formats = this.attributes.values();
        var format = this.statics.formats(this.domNode);
        if (format != null) {
            formats[this.statics.blotName] = format;
        }
        return formats;
    };
    FormatBlot.prototype.replaceWith = function (name, value) {
        var replacement = _super.prototype.replaceWith.call(this, name, value);
        this.attributes.copy(replacement);
        return replacement;
    };
    FormatBlot.prototype.update = function (mutations, context) {
        var _this = this;
        _super.prototype.update.call(this, mutations, context);
        if (mutations.some(function (mutation) {
            return mutation.target === _this.domNode && mutation.type === 'attributes';
        })) {
            this.attributes.build();
        }
    };
    FormatBlot.prototype.wrap = function (name, value) {
        var wrapper = _super.prototype.wrap.call(this, name, value);
        if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {
            this.attributes.move(wrapper);
        }
        return wrapper;
    };
    return FormatBlot;
}(container_1.default));
exports.default = FormatBlot;


/***/ }),
/* 4 */
/***/ (function(module, exports, __nested_webpack_require_23054__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var shadow_1 = __nested_webpack_require_23054__(5);
var Registry = __nested_webpack_require_23054__(0);
var LeafBlot = /** @class */ (function (_super) {
    __extends(LeafBlot, _super);
    function LeafBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LeafBlot.value = function (domNode) {
        return true;
    };
    LeafBlot.prototype.index = function (node, offset) {
        if (this.domNode === node ||
            this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
            return Math.min(offset, 1);
        }
        return -1;
    };
    LeafBlot.prototype.position = function (index, inclusive) {
        var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);
        if (index > 0)
            offset += 1;
        return [this.parent.domNode, offset];
    };
    LeafBlot.prototype.value = function () {
        return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;
        var _a;
    };
    LeafBlot.scope = Registry.Scope.INLINE_BLOT;
    return LeafBlot;
}(shadow_1.default));
exports.default = LeafBlot;


/***/ }),
/* 5 */
/***/ (function(module, exports, __nested_webpack_require_24839__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Registry = __nested_webpack_require_24839__(0);
var ShadowBlot = /** @class */ (function () {
    function ShadowBlot(domNode) {
        this.domNode = domNode;
        // @ts-ignore
        this.domNode[Registry.DATA_KEY] = { blot: this };
    }
    Object.defineProperty(ShadowBlot.prototype, "statics", {
        // Hack for accessing inherited static methods
        get: function () {
            return this.constructor;
        },
        enumerable: true,
        configurable: true
    });
    ShadowBlot.create = function (value) {
        if (this.tagName == null) {
            throw new Registry.ParchmentError('Blot definition missing tagName');
        }
        var node;
        if (Array.isArray(this.tagName)) {
            if (typeof value === 'string') {
                value = value.toUpperCase();
                if (parseInt(value).toString() === value) {
                    value = parseInt(value);
                }
            }
            if (typeof value === 'number') {
                node = document.createElement(this.tagName[value - 1]);
            }
            else if (this.tagName.indexOf(value) > -1) {
                node = document.createElement(value);
            }
            else {
                node = document.createElement(this.tagName[0]);
            }
        }
        else {
            node = document.createElement(this.tagName);
        }
        if (this.className) {
            node.classList.add(this.className);
        }
        return node;
    };
    ShadowBlot.prototype.attach = function () {
        if (this.parent != null) {
            this.scroll = this.parent.scroll;
        }
    };
    ShadowBlot.prototype.clone = function () {
        var domNode = this.domNode.cloneNode(false);
        return Registry.create(domNode);
    };
    ShadowBlot.prototype.detach = function () {
        if (this.parent != null)
            this.parent.removeChild(this);
        // @ts-ignore
        delete this.domNode[Registry.DATA_KEY];
    };
    ShadowBlot.prototype.deleteAt = function (index, length) {
        var blot = this.isolate(index, length);
        blot.remove();
    };
    ShadowBlot.prototype.formatAt = function (index, length, name, value) {
        var blot = this.isolate(index, length);
        if (Registry.query(name, Registry.Scope.BLOT) != null && value) {
            blot.wrap(name, value);
        }
        else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {
            var parent_1 = Registry.create(this.statics.scope);
            blot.wrap(parent_1);
            parent_1.format(name, value);
        }
    };
    ShadowBlot.prototype.insertAt = function (index, value, def) {
        var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
        var ref = this.split(index);
        this.parent.insertBefore(blot, ref);
    };
    ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {
        if (refBlot === void 0) { refBlot = null; }
        if (this.parent != null) {
            this.parent.children.remove(this);
        }
        var refDomNode = null;
        parentBlot.children.insertBefore(this, refBlot);
        if (refBlot != null) {
            refDomNode = refBlot.domNode;
        }
        if (this.domNode.parentNode != parentBlot.domNode ||
            this.domNode.nextSibling != refDomNode) {
            parentBlot.domNode.insertBefore(this.domNode, refDomNode);
        }
        this.parent = parentBlot;
        this.attach();
    };
    ShadowBlot.prototype.isolate = function (index, length) {
        var target = this.split(index);
        target.split(length);
        return target;
    };
    ShadowBlot.prototype.length = function () {
        return 1;
    };
    ShadowBlot.prototype.offset = function (root) {
        if (root === void 0) { root = this.parent; }
        if (this.parent == null || this == root)
            return 0;
        return this.parent.children.offset(this) + this.parent.offset(root);
    };
    ShadowBlot.prototype.optimize = function (context) {
        // TODO clean up once we use WeakMap
        // @ts-ignore
        if (this.domNode[Registry.DATA_KEY] != null) {
            // @ts-ignore
            delete this.domNode[Registry.DATA_KEY].mutations;
        }
    };
    ShadowBlot.prototype.remove = function () {
        if (this.domNode.parentNode != null) {
            this.domNode.parentNode.removeChild(this.domNode);
        }
        this.detach();
    };
    ShadowBlot.prototype.replace = function (target) {
        if (target.parent == null)
            return;
        target.parent.insertBefore(this, target.next);
        target.remove();
    };
    ShadowBlot.prototype.replaceWith = function (name, value) {
        var replacement = typeof name === 'string' ? Registry.create(name, value) : name;
        replacement.replace(this);
        return replacement;
    };
    ShadowBlot.prototype.split = function (index, force) {
        return index === 0 ? this : this.next;
    };
    ShadowBlot.prototype.update = function (mutations, context) {
        // Nothing to do by default
    };
    ShadowBlot.prototype.wrap = function (name, value) {
        var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;
        if (this.parent != null) {
            this.parent.insertBefore(wrapper, this.next);
        }
        wrapper.appendChild(this);
        return wrapper;
    };
    ShadowBlot.blotName = 'abstract';
    return ShadowBlot;
}());
exports.default = ShadowBlot;


/***/ }),
/* 6 */
/***/ (function(module, exports, __nested_webpack_require_30541__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_30541__(1);
var class_1 = __nested_webpack_require_30541__(7);
var style_1 = __nested_webpack_require_30541__(8);
var Registry = __nested_webpack_require_30541__(0);
var AttributorStore = /** @class */ (function () {
    function AttributorStore(domNode) {
        this.attributes = {};
        this.domNode = domNode;
        this.build();
    }
    AttributorStore.prototype.attribute = function (attribute, value) {
        // verb
        if (value) {
            if (attribute.add(this.domNode, value)) {
                if (attribute.value(this.domNode) != null) {
                    this.attributes[attribute.attrName] = attribute;
                }
                else {
                    delete this.attributes[attribute.attrName];
                }
            }
        }
        else {
            attribute.remove(this.domNode);
            delete this.attributes[attribute.attrName];
        }
    };
    AttributorStore.prototype.build = function () {
        var _this = this;
        this.attributes = {};
        var attributes = attributor_1.default.keys(this.domNode);
        var classes = class_1.default.keys(this.domNode);
        var styles = style_1.default.keys(this.domNode);
        attributes
            .concat(classes)
            .concat(styles)
            .forEach(function (name) {
            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);
            if (attr instanceof attributor_1.default) {
                _this.attributes[attr.attrName] = attr;
            }
        });
    };
    AttributorStore.prototype.copy = function (target) {
        var _this = this;
        Object.keys(this.attributes).forEach(function (key) {
            var value = _this.attributes[key].value(_this.domNode);
            target.format(key, value);
        });
    };
    AttributorStore.prototype.move = function (target) {
        var _this = this;
        this.copy(target);
        Object.keys(this.attributes).forEach(function (key) {
            _this.attributes[key].remove(_this.domNode);
        });
        this.attributes = {};
    };
    AttributorStore.prototype.values = function () {
        var _this = this;
        return Object.keys(this.attributes).reduce(function (attributes, name) {
            attributes[name] = _this.attributes[name].value(_this.domNode);
            return attributes;
        }, {});
    };
    return AttributorStore;
}());
exports.default = AttributorStore;


/***/ }),
/* 7 */
/***/ (function(module, exports, __nested_webpack_require_33135__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_33135__(1);
function match(node, prefix) {
    var className = node.getAttribute('class') || '';
    return className.split(/\s+/).filter(function (name) {
        return name.indexOf(prefix + "-") === 0;
    });
}
var ClassAttributor = /** @class */ (function (_super) {
    __extends(ClassAttributor, _super);
    function ClassAttributor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ClassAttributor.keys = function (node) {
        return (node.getAttribute('class') || '').split(/\s+/).map(function (name) {
            return name
                .split('-')
                .slice(0, -1)
                .join('-');
        });
    };
    ClassAttributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        this.remove(node);
        node.classList.add(this.keyName + "-" + value);
        return true;
    };
    ClassAttributor.prototype.remove = function (node) {
        var matches = match(node, this.keyName);
        matches.forEach(function (name) {
            node.classList.remove(name);
        });
        if (node.classList.length === 0) {
            node.removeAttribute('class');
        }
    };
    ClassAttributor.prototype.value = function (node) {
        var result = match(node, this.keyName)[0] || '';
        var value = result.slice(this.keyName.length + 1); // +1 for hyphen
        return this.canAdd(node, value) ? value : '';
    };
    return ClassAttributor;
}(attributor_1.default));
exports.default = ClassAttributor;


/***/ }),
/* 8 */
/***/ (function(module, exports, __nested_webpack_require_35377__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_35377__(1);
function camelize(name) {
    var parts = name.split('-');
    var rest = parts
        .slice(1)
        .map(function (part) {
        return part[0].toUpperCase() + part.slice(1);
    })
        .join('');
    return parts[0] + rest;
}
var StyleAttributor = /** @class */ (function (_super) {
    __extends(StyleAttributor, _super);
    function StyleAttributor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StyleAttributor.keys = function (node) {
        return (node.getAttribute('style') || '').split(';').map(function (value) {
            var arr = value.split(':');
            return arr[0].trim();
        });
    };
    StyleAttributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        // @ts-ignore
        node.style[camelize(this.keyName)] = value;
        return true;
    };
    StyleAttributor.prototype.remove = function (node) {
        // @ts-ignore
        node.style[camelize(this.keyName)] = '';
        if (!node.getAttribute('style')) {
            node.removeAttribute('style');
        }
    };
    StyleAttributor.prototype.value = function (node) {
        // @ts-ignore
        var value = node.style[camelize(this.keyName)];
        return this.canAdd(node, value) ? value : '';
    };
    return StyleAttributor;
}(attributor_1.default));
exports.default = StyleAttributor;


/***/ }),
/* 9 */
/***/ (function(module, exports, __nested_webpack_require_37481__) {

module.exports = __nested_webpack_require_37481__(10);


/***/ }),
/* 10 */
/***/ (function(module, exports, __nested_webpack_require_37601__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __nested_webpack_require_37601__(2);
var format_1 = __nested_webpack_require_37601__(3);
var leaf_1 = __nested_webpack_require_37601__(4);
var scroll_1 = __nested_webpack_require_37601__(12);
var inline_1 = __nested_webpack_require_37601__(13);
var block_1 = __nested_webpack_require_37601__(14);
var embed_1 = __nested_webpack_require_37601__(15);
var text_1 = __nested_webpack_require_37601__(16);
var attributor_1 = __nested_webpack_require_37601__(1);
var class_1 = __nested_webpack_require_37601__(7);
var style_1 = __nested_webpack_require_37601__(8);
var store_1 = __nested_webpack_require_37601__(6);
var Registry = __nested_webpack_require_37601__(0);
var Parchment = {
    Scope: Registry.Scope,
    create: Registry.create,
    find: Registry.find,
    query: Registry.query,
    register: Registry.register,
    Container: container_1.default,
    Format: format_1.default,
    Leaf: leaf_1.default,
    Embed: embed_1.default,
    Scroll: scroll_1.default,
    Block: block_1.default,
    Inline: inline_1.default,
    Text: text_1.default,
    Attributor: {
        Attribute: attributor_1.default,
        Class: class_1.default,
        Style: style_1.default,
        Store: store_1.default,
    },
};
exports.default = Parchment;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var LinkedList = /** @class */ (function () {
    function LinkedList() {
        this.head = this.tail = null;
        this.length = 0;
    }
    LinkedList.prototype.append = function () {
        var nodes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            nodes[_i] = arguments[_i];
        }
        this.insertBefore(nodes[0], null);
        if (nodes.length > 1) {
            this.append.apply(this, nodes.slice(1));
        }
    };
    LinkedList.prototype.contains = function (node) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            if (cur === node)
                return true;
        }
        return false;
    };
    LinkedList.prototype.insertBefore = function (node, refNode) {
        if (!node)
            return;
        node.next = refNode;
        if (refNode != null) {
            node.prev = refNode.prev;
            if (refNode.prev != null) {
                refNode.prev.next = node;
            }
            refNode.prev = node;
            if (refNode === this.head) {
                this.head = node;
            }
        }
        else if (this.tail != null) {
            this.tail.next = node;
            node.prev = this.tail;
            this.tail = node;
        }
        else {
            node.prev = null;
            this.head = this.tail = node;
        }
        this.length += 1;
    };
    LinkedList.prototype.offset = function (target) {
        var index = 0, cur = this.head;
        while (cur != null) {
            if (cur === target)
                return index;
            index += cur.length();
            cur = cur.next;
        }
        return -1;
    };
    LinkedList.prototype.remove = function (node) {
        if (!this.contains(node))
            return;
        if (node.prev != null)
            node.prev.next = node.next;
        if (node.next != null)
            node.next.prev = node.prev;
        if (node === this.head)
            this.head = node.next;
        if (node === this.tail)
            this.tail = node.prev;
        this.length -= 1;
    };
    LinkedList.prototype.iterator = function (curNode) {
        if (curNode === void 0) { curNode = this.head; }
        // TODO use yield when we can
        return function () {
            var ret = curNode;
            if (curNode != null)
                curNode = curNode.next;
            return ret;
        };
    };
    LinkedList.prototype.find = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        var cur, next = this.iterator();
        while ((cur = next())) {
            var length_1 = cur.length();
            if (index < length_1 ||
                (inclusive && index === length_1 && (cur.next == null || cur.next.length() !== 0))) {
                return [cur, index];
            }
            index -= length_1;
        }
        return [null, 0];
    };
    LinkedList.prototype.forEach = function (callback) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            callback(cur);
        }
    };
    LinkedList.prototype.forEachAt = function (index, length, callback) {
        if (length <= 0)
            return;
        var _a = this.find(index), startNode = _a[0], offset = _a[1];
        var cur, curIndex = index - offset, next = this.iterator(startNode);
        while ((cur = next()) && curIndex < index + length) {
            var curLength = cur.length();
            if (index > curIndex) {
                callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));
            }
            else {
                callback(cur, 0, Math.min(curLength, index + length - curIndex));
            }
            curIndex += curLength;
        }
    };
    LinkedList.prototype.map = function (callback) {
        return this.reduce(function (memo, cur) {
            memo.push(callback(cur));
            return memo;
        }, []);
    };
    LinkedList.prototype.reduce = function (callback, memo) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            memo = callback(memo, cur);
        }
        return memo;
    };
    return LinkedList;
}());
exports.default = LinkedList;


/***/ }),
/* 12 */
/***/ (function(module, exports, __nested_webpack_require_43256__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __nested_webpack_require_43256__(2);
var Registry = __nested_webpack_require_43256__(0);
var OBSERVER_CONFIG = {
    attributes: true,
    characterData: true,
    characterDataOldValue: true,
    childList: true,
    subtree: true,
};
var MAX_OPTIMIZE_ITERATIONS = 100;
var ScrollBlot = /** @class */ (function (_super) {
    __extends(ScrollBlot, _super);
    function ScrollBlot(node) {
        var _this = _super.call(this, node) || this;
        _this.scroll = _this;
        _this.observer = new MutationObserver(function (mutations) {
            _this.update(mutations);
        });
        _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
        _this.attach();
        return _this;
    }
    ScrollBlot.prototype.detach = function () {
        _super.prototype.detach.call(this);
        this.observer.disconnect();
    };
    ScrollBlot.prototype.deleteAt = function (index, length) {
        this.update();
        if (index === 0 && length === this.length()) {
            this.children.forEach(function (child) {
                child.remove();
            });
        }
        else {
            _super.prototype.deleteAt.call(this, index, length);
        }
    };
    ScrollBlot.prototype.formatAt = function (index, length, name, value) {
        this.update();
        _super.prototype.formatAt.call(this, index, length, name, value);
    };
    ScrollBlot.prototype.insertAt = function (index, value, def) {
        this.update();
        _super.prototype.insertAt.call(this, index, value, def);
    };
    ScrollBlot.prototype.optimize = function (mutations, context) {
        var _this = this;
        if (mutations === void 0) { mutations = []; }
        if (context === void 0) { context = {}; }
        _super.prototype.optimize.call(this, context);
        // We must modify mutations directly, cannot make copy and then modify
        var records = [].slice.call(this.observer.takeRecords());
        // Array.push currently seems to be implemented by a non-tail recursive function
        // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());
        while (records.length > 0)
            mutations.push(records.pop());
        // TODO use WeakMap
        var mark = function (blot, markParent) {
            if (markParent === void 0) { markParent = true; }
            if (blot == null || blot === _this)
                return;
            if (blot.domNode.parentNode == null)
                return;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations = [];
            }
            if (markParent)
                mark(blot.parent);
        };
        var optimize = function (blot) {
            // Post-order traversal
            if (
            // @ts-ignore
            blot.domNode[Registry.DATA_KEY] == null ||
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations == null) {
                return;
            }
            if (blot instanceof container_1.default) {
                blot.children.forEach(optimize);
            }
            blot.optimize(context);
        };
        var remaining = mutations;
        for (var i = 0; remaining.length > 0; i += 1) {
            if (i >= MAX_OPTIMIZE_ITERATIONS) {
                throw new Error('[Parchment] Maximum optimize iterations reached');
            }
            remaining.forEach(function (mutation) {
                var blot = Registry.find(mutation.target, true);
                if (blot == null)
                    return;
                if (blot.domNode === mutation.target) {
                    if (mutation.type === 'childList') {
                        mark(Registry.find(mutation.previousSibling, false));
                        [].forEach.call(mutation.addedNodes, function (node) {
                            var child = Registry.find(node, false);
                            mark(child, false);
                            if (child instanceof container_1.default) {
                                child.children.forEach(function (grandChild) {
                                    mark(grandChild, false);
                                });
                            }
                        });
                    }
                    else if (mutation.type === 'attributes') {
                        mark(blot.prev);
                    }
                }
                mark(blot);
            });
            this.children.forEach(optimize);
            remaining = [].slice.call(this.observer.takeRecords());
            records = remaining.slice();
            while (records.length > 0)
                mutations.push(records.pop());
        }
    };
    ScrollBlot.prototype.update = function (mutations, context) {
        var _this = this;
        if (context === void 0) { context = {}; }
        mutations = mutations || this.observer.takeRecords();
        // TODO use WeakMap
        mutations
            .map(function (mutation) {
            var blot = Registry.find(mutation.target, true);
            if (blot == null)
                return null;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations = [mutation];
                return blot;
            }
            else {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
                return null;
            }
        })
            .forEach(function (blot) {
            if (blot == null ||
                blot === _this ||
                //@ts-ignore
                blot.domNode[Registry.DATA_KEY] == null)
                return;
            // @ts-ignore
            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);
        });
        // @ts-ignore
        if (this.domNode[Registry.DATA_KEY].mutations != null) {
            // @ts-ignore
            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);
        }
        this.optimize(mutations, context);
    };
    ScrollBlot.blotName = 'scroll';
    ScrollBlot.defaultChild = 'block';
    ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;
    ScrollBlot.tagName = 'DIV';
    return ScrollBlot;
}(container_1.default));
exports.default = ScrollBlot;


/***/ }),
/* 13 */
/***/ (function(module, exports, __nested_webpack_require_50369__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var format_1 = __nested_webpack_require_50369__(3);
var Registry = __nested_webpack_require_50369__(0);
// Shallow object comparison
function isEqual(obj1, obj2) {
    if (Object.keys(obj1).length !== Object.keys(obj2).length)
        return false;
    // @ts-ignore
    for (var prop in obj1) {
        // @ts-ignore
        if (obj1[prop] !== obj2[prop])
            return false;
    }
    return true;
}
var InlineBlot = /** @class */ (function (_super) {
    __extends(InlineBlot, _super);
    function InlineBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InlineBlot.formats = function (domNode) {
        if (domNode.tagName === InlineBlot.tagName)
            return undefined;
        return _super.formats.call(this, domNode);
    };
    InlineBlot.prototype.format = function (name, value) {
        var _this = this;
        if (name === this.statics.blotName && !value) {
            this.children.forEach(function (child) {
                if (!(child instanceof format_1.default)) {
                    child = child.wrap(InlineBlot.blotName, true);
                }
                _this.attributes.copy(child);
            });
            this.unwrap();
        }
        else {
            _super.prototype.format.call(this, name, value);
        }
    };
    InlineBlot.prototype.formatAt = function (index, length, name, value) {
        if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {
            var blot = this.isolate(index, length);
            blot.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    InlineBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        var formats = this.formats();
        if (Object.keys(formats).length === 0) {
            return this.unwrap(); // unformatted span
        }
        var next = this.next;
        if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {
            next.moveChildren(this);
            next.remove();
        }
    };
    InlineBlot.blotName = 'inline';
    InlineBlot.scope = Registry.Scope.INLINE_BLOT;
    InlineBlot.tagName = 'SPAN';
    return InlineBlot;
}(format_1.default));
exports.default = InlineBlot;


/***/ }),
/* 14 */
/***/ (function(module, exports, __nested_webpack_require_53360__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var format_1 = __nested_webpack_require_53360__(3);
var Registry = __nested_webpack_require_53360__(0);
var BlockBlot = /** @class */ (function (_super) {
    __extends(BlockBlot, _super);
    function BlockBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BlockBlot.formats = function (domNode) {
        var tagName = Registry.query(BlockBlot.blotName).tagName;
        if (domNode.tagName === tagName)
            return undefined;
        return _super.formats.call(this, domNode);
    };
    BlockBlot.prototype.format = function (name, value) {
        if (Registry.query(name, Registry.Scope.BLOCK) == null) {
            return;
        }
        else if (name === this.statics.blotName && !value) {
            this.replaceWith(BlockBlot.blotName);
        }
        else {
            _super.prototype.format.call(this, name, value);
        }
    };
    BlockBlot.prototype.formatAt = function (index, length, name, value) {
        if (Registry.query(name, Registry.Scope.BLOCK) != null) {
            this.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    BlockBlot.prototype.insertAt = function (index, value, def) {
        if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {
            // Insert text or inline
            _super.prototype.insertAt.call(this, index, value, def);
        }
        else {
            var after = this.split(index);
            var blot = Registry.create(value, def);
            after.parent.insertBefore(blot, after);
        }
    };
    BlockBlot.prototype.update = function (mutations, context) {
        if (navigator.userAgent.match(/Trident/)) {
            this.build();
        }
        else {
            _super.prototype.update.call(this, mutations, context);
        }
    };
    BlockBlot.blotName = 'block';
    BlockBlot.scope = Registry.Scope.BLOCK_BLOT;
    BlockBlot.tagName = 'P';
    return BlockBlot;
}(format_1.default));
exports.default = BlockBlot;


/***/ }),
/* 15 */
/***/ (function(module, exports, __nested_webpack_require_56067__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var leaf_1 = __nested_webpack_require_56067__(4);
var EmbedBlot = /** @class */ (function (_super) {
    __extends(EmbedBlot, _super);
    function EmbedBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmbedBlot.formats = function (domNode) {
        return undefined;
    };
    EmbedBlot.prototype.format = function (name, value) {
        // super.formatAt wraps, which is what we want in general,
        // but this allows subclasses to overwrite for formats
        // that just apply to particular embeds
        _super.prototype.formatAt.call(this, 0, this.length(), name, value);
    };
    EmbedBlot.prototype.formatAt = function (index, length, name, value) {
        if (index === 0 && length === this.length()) {
            this.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    EmbedBlot.prototype.formats = function () {
        return this.statics.formats(this.domNode);
    };
    return EmbedBlot;
}(leaf_1.default));
exports.default = EmbedBlot;


/***/ }),
/* 16 */
/***/ (function(module, exports, __nested_webpack_require_57807__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var leaf_1 = __nested_webpack_require_57807__(4);
var Registry = __nested_webpack_require_57807__(0);
var TextBlot = /** @class */ (function (_super) {
    __extends(TextBlot, _super);
    function TextBlot(node) {
        var _this = _super.call(this, node) || this;
        _this.text = _this.statics.value(_this.domNode);
        return _this;
    }
    TextBlot.create = function (value) {
        return document.createTextNode(value);
    };
    TextBlot.value = function (domNode) {
        var text = domNode.data;
        // @ts-ignore
        if (text['normalize'])
            text = text['normalize']();
        return text;
    };
    TextBlot.prototype.deleteAt = function (index, length) {
        this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);
    };
    TextBlot.prototype.index = function (node, offset) {
        if (this.domNode === node) {
            return offset;
        }
        return -1;
    };
    TextBlot.prototype.insertAt = function (index, value, def) {
        if (def == null) {
            this.text = this.text.slice(0, index) + value + this.text.slice(index);
            this.domNode.data = this.text;
        }
        else {
            _super.prototype.insertAt.call(this, index, value, def);
        }
    };
    TextBlot.prototype.length = function () {
        return this.text.length;
    };
    TextBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        this.text = this.statics.value(this.domNode);
        if (this.text.length === 0) {
            this.remove();
        }
        else if (this.next instanceof TextBlot && this.next.prev === this) {
            this.insertAt(this.length(), this.next.value());
            this.next.remove();
        }
    };
    TextBlot.prototype.position = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        return [this.domNode, index];
    };
    TextBlot.prototype.split = function (index, force) {
        if (force === void 0) { force = false; }
        if (!force) {
            if (index === 0)
                return this;
            if (index === this.length())
                return this.next;
        }
        var after = Registry.create(this.domNode.splitText(index));
        this.parent.insertBefore(after, this.next);
        this.text = this.statics.value(this.domNode);
        return after;
    };
    TextBlot.prototype.update = function (mutations, context) {
        var _this = this;
        if (mutations.some(function (mutation) {
            return mutation.type === 'characterData' && mutation.target === _this.domNode;
        })) {
            this.text = this.statics.value(this.domNode);
        }
    };
    TextBlot.prototype.value = function () {
        return this.text;
    };
    TextBlot.blotName = 'text';
    TextBlot.scope = Registry.Scope.INLINE_BLOT;
    return TextBlot;
}(leaf_1.default));
exports.default = TextBlot;


/***/ })
/******/ ]);
});
//# sourceMappingURL=parchment.js.map

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/quill-delta/lib/delta.js":
/*!***********************************************!*\
  !*** ./node_modules/quill-delta/lib/delta.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var diff = __webpack_require__(/*! fast-diff */ "./node_modules/fast-diff/diff.js");
var equal = __webpack_require__(/*! deep-equal */ "./node_modules/deep-equal/index.js");
var extend = __webpack_require__(/*! extend */ "./node_modules/extend/index.js");
var op = __webpack_require__(/*! ./op */ "./node_modules/quill-delta/lib/op.js");


var NULL_CHARACTER = String.fromCharCode(0);  // Placeholder char for embed in diff()


var Delta = function (ops) {
  // Assume we are given a well formed ops
  if (Array.isArray(ops)) {
    this.ops = ops;
  } else if (ops != null && Array.isArray(ops.ops)) {
    this.ops = ops.ops;
  } else {
    this.ops = [];
  }
};


Delta.prototype.insert = function (text, attributes) {
  var newOp = {};
  if (text.length === 0) return this;
  newOp.insert = text;
  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
    newOp.attributes = attributes;
  }
  return this.push(newOp);
};

Delta.prototype['delete'] = function (length) {
  if (length <= 0) return this;
  return this.push({ 'delete': length });
};

Delta.prototype.retain = function (length, attributes) {
  if (length <= 0) return this;
  var newOp = { retain: length };
  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
    newOp.attributes = attributes;
  }
  return this.push(newOp);
};

Delta.prototype.push = function (newOp) {
  var index = this.ops.length;
  var lastOp = this.ops[index - 1];
  newOp = extend(true, {}, newOp);
  if (typeof lastOp === 'object') {
    if (typeof newOp['delete'] === 'number' && typeof lastOp['delete'] === 'number') {
      this.ops[index - 1] = { 'delete': lastOp['delete'] + newOp['delete'] };
      return this;
    }
    // Since it does not matter if we insert before or after deleting at the same index,
    // always prefer to insert first
    if (typeof lastOp['delete'] === 'number' && newOp.insert != null) {
      index -= 1;
      lastOp = this.ops[index - 1];
      if (typeof lastOp !== 'object') {
        this.ops.unshift(newOp);
        return this;
      }
    }
    if (equal(newOp.attributes, lastOp.attributes)) {
      if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {
        this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };
        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes
        return this;
      } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {
        this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };
        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes
        return this;
      }
    }
  }
  if (index === this.ops.length) {
    this.ops.push(newOp);
  } else {
    this.ops.splice(index, 0, newOp);
  }
  return this;
};

Delta.prototype.chop = function () {
  var lastOp = this.ops[this.ops.length - 1];
  if (lastOp && lastOp.retain && !lastOp.attributes) {
    this.ops.pop();
  }
  return this;
};

Delta.prototype.filter = function (predicate) {
  return this.ops.filter(predicate);
};

Delta.prototype.forEach = function (predicate) {
  this.ops.forEach(predicate);
};

Delta.prototype.map = function (predicate) {
  return this.ops.map(predicate);
};

Delta.prototype.partition = function (predicate) {
  var passed = [], failed = [];
  this.forEach(function(op) {
    var target = predicate(op) ? passed : failed;
    target.push(op);
  });
  return [passed, failed];
};

Delta.prototype.reduce = function (predicate, initial) {
  return this.ops.reduce(predicate, initial);
};

Delta.prototype.changeLength = function () {
  return this.reduce(function (length, elem) {
    if (elem.insert) {
      return length + op.length(elem);
    } else if (elem.delete) {
      return length - elem.delete;
    }
    return length;
  }, 0);
};

Delta.prototype.length = function () {
  return this.reduce(function (length, elem) {
    return length + op.length(elem);
  }, 0);
};

Delta.prototype.slice = function (start, end) {
  start = start || 0;
  if (typeof end !== 'number') end = Infinity;
  var ops = [];
  var iter = op.iterator(this.ops);
  var index = 0;
  while (index < end && iter.hasNext()) {
    var nextOp;
    if (index < start) {
      nextOp = iter.next(start - index);
    } else {
      nextOp = iter.next(end - index);
      ops.push(nextOp);
    }
    index += op.length(nextOp);
  }
  return new Delta(ops);
};


Delta.prototype.compose = function (other) {
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  var ops = [];
  var firstOther = otherIter.peek();
  if (firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null) {
    var firstLeft = firstOther.retain;
    while (thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft) {
      firstLeft -= thisIter.peekLength();
      ops.push(thisIter.next());
    }
    if (firstOther.retain - firstLeft > 0) {
      otherIter.next(firstOther.retain - firstLeft);
    }
  }
  var delta = new Delta(ops);
  while (thisIter.hasNext() || otherIter.hasNext()) {
    if (otherIter.peekType() === 'insert') {
      delta.push(otherIter.next());
    } else if (thisIter.peekType() === 'delete') {
      delta.push(thisIter.next());
    } else {
      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
      var thisOp = thisIter.next(length);
      var otherOp = otherIter.next(length);
      if (typeof otherOp.retain === 'number') {
        var newOp = {};
        if (typeof thisOp.retain === 'number') {
          newOp.retain = length;
        } else {
          newOp.insert = thisOp.insert;
        }
        // Preserve null when composing with a retain, otherwise remove it for inserts
        var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');
        if (attributes) newOp.attributes = attributes;
        delta.push(newOp);

        // Optimization if rest of other is just retain
        if (!otherIter.hasNext() && equal(delta.ops[delta.ops.length - 1], newOp)) {
          var rest = new Delta(thisIter.rest());
          return delta.concat(rest).chop();
        }

      // Other op should be delete, we could be an insert or retain
      // Insert + delete cancels out
      } else if (typeof otherOp['delete'] === 'number' && typeof thisOp.retain === 'number') {
        delta.push(otherOp);
      }
    }
  }
  return delta.chop();
};

Delta.prototype.concat = function (other) {
  var delta = new Delta(this.ops.slice());
  if (other.ops.length > 0) {
    delta.push(other.ops[0]);
    delta.ops = delta.ops.concat(other.ops.slice(1));
  }
  return delta;
};

Delta.prototype.diff = function (other, index) {
  if (this.ops === other.ops) {
    return new Delta();
  }
  var strings = [this, other].map(function (delta) {
    return delta.map(function (op) {
      if (op.insert != null) {
        return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;
      }
      var prep = (delta === other) ? 'on' : 'with';
      throw new Error('diff() called ' + prep + ' non-document');
    }).join('');
  });
  var delta = new Delta();
  var diffResult = diff(strings[0], strings[1], index);
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  diffResult.forEach(function (component) {
    var length = component[1].length;
    while (length > 0) {
      var opLength = 0;
      switch (component[0]) {
        case diff.INSERT:
          opLength = Math.min(otherIter.peekLength(), length);
          delta.push(otherIter.next(opLength));
          break;
        case diff.DELETE:
          opLength = Math.min(length, thisIter.peekLength());
          thisIter.next(opLength);
          delta['delete'](opLength);
          break;
        case diff.EQUAL:
          opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);
          var thisOp = thisIter.next(opLength);
          var otherOp = otherIter.next(opLength);
          if (equal(thisOp.insert, otherOp.insert)) {
            delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));
          } else {
            delta.push(otherOp)['delete'](opLength);
          }
          break;
      }
      length -= opLength;
    }
  });
  return delta.chop();
};

Delta.prototype.eachLine = function (predicate, newline) {
  newline = newline || '\n';
  var iter = op.iterator(this.ops);
  var line = new Delta();
  var i = 0;
  while (iter.hasNext()) {
    if (iter.peekType() !== 'insert') return;
    var thisOp = iter.peek();
    var start = op.length(thisOp) - iter.peekLength();
    var index = typeof thisOp.insert === 'string' ?
      thisOp.insert.indexOf(newline, start) - start : -1;
    if (index < 0) {
      line.push(iter.next());
    } else if (index > 0) {
      line.push(iter.next(index));
    } else {
      if (predicate(line, iter.next(1).attributes || {}, i) === false) {
        return;
      }
      i += 1;
      line = new Delta();
    }
  }
  if (line.length() > 0) {
    predicate(line, {}, i);
  }
};

Delta.prototype.transform = function (other, priority) {
  priority = !!priority;
  if (typeof other === 'number') {
    return this.transformPosition(other, priority);
  }
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  var delta = new Delta();
  while (thisIter.hasNext() || otherIter.hasNext()) {
    if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {
      delta.retain(op.length(thisIter.next()));
    } else if (otherIter.peekType() === 'insert') {
      delta.push(otherIter.next());
    } else {
      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
      var thisOp = thisIter.next(length);
      var otherOp = otherIter.next(length);
      if (thisOp['delete']) {
        // Our delete either makes their delete redundant or removes their retain
        continue;
      } else if (otherOp['delete']) {
        delta.push(otherOp);
      } else {
        // We retain either their retain or insert
        delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));
      }
    }
  }
  return delta.chop();
};

Delta.prototype.transformPosition = function (index, priority) {
  priority = !!priority;
  var thisIter = op.iterator(this.ops);
  var offset = 0;
  while (thisIter.hasNext() && offset <= index) {
    var length = thisIter.peekLength();
    var nextType = thisIter.peekType();
    thisIter.next();
    if (nextType === 'delete') {
      index -= Math.min(length, index - offset);
      continue;
    } else if (nextType === 'insert' && (offset < index || !priority)) {
      index += length;
    }
    offset += length;
  }
  return index;
};


module.exports = Delta;


/***/ }),

/***/ "./node_modules/quill-delta/lib/op.js":
/*!********************************************!*\
  !*** ./node_modules/quill-delta/lib/op.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var equal = __webpack_require__(/*! deep-equal */ "./node_modules/deep-equal/index.js");
var extend = __webpack_require__(/*! extend */ "./node_modules/extend/index.js");


var lib = {
  attributes: {
    compose: function (a, b, keepNull) {
      if (typeof a !== 'object') a = {};
      if (typeof b !== 'object') b = {};
      var attributes = extend(true, {}, b);
      if (!keepNull) {
        attributes = Object.keys(attributes).reduce(function (copy, key) {
          if (attributes[key] != null) {
            copy[key] = attributes[key];
          }
          return copy;
        }, {});
      }
      for (var key in a) {
        if (a[key] !== undefined && b[key] === undefined) {
          attributes[key] = a[key];
        }
      }
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    },

    diff: function(a, b) {
      if (typeof a !== 'object') a = {};
      if (typeof b !== 'object') b = {};
      var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {
        if (!equal(a[key], b[key])) {
          attributes[key] = b[key] === undefined ? null : b[key];
        }
        return attributes;
      }, {});
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    },

    transform: function (a, b, priority) {
      if (typeof a !== 'object') return b;
      if (typeof b !== 'object') return undefined;
      if (!priority) return b;  // b simply overwrites us without priority
      var attributes = Object.keys(b).reduce(function (attributes, key) {
        if (a[key] === undefined) attributes[key] = b[key];  // null is a valid value
        return attributes;
      }, {});
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    }
  },

  iterator: function (ops) {
    return new Iterator(ops);
  },

  length: function (op) {
    if (typeof op['delete'] === 'number') {
      return op['delete'];
    } else if (typeof op.retain === 'number') {
      return op.retain;
    } else {
      return typeof op.insert === 'string' ? op.insert.length : 1;
    }
  }
};


function Iterator(ops) {
  this.ops = ops;
  this.index = 0;
  this.offset = 0;
};

Iterator.prototype.hasNext = function () {
  return this.peekLength() < Infinity;
};

Iterator.prototype.next = function (length) {
  if (!length) length = Infinity;
  var nextOp = this.ops[this.index];
  if (nextOp) {
    var offset = this.offset;
    var opLength = lib.length(nextOp)
    if (length >= opLength - offset) {
      length = opLength - offset;
      this.index += 1;
      this.offset = 0;
    } else {
      this.offset += length;
    }
    if (typeof nextOp['delete'] === 'number') {
      return { 'delete': length };
    } else {
      var retOp = {};
      if (nextOp.attributes) {
        retOp.attributes = nextOp.attributes;
      }
      if (typeof nextOp.retain === 'number') {
        retOp.retain = length;
      } else if (typeof nextOp.insert === 'string') {
        retOp.insert = nextOp.insert.substr(offset, length);
      } else {
        // offset should === 0, length should === 1
        retOp.insert = nextOp.insert;
      }
      return retOp;
    }
  } else {
    return { retain: Infinity };
  }
};

Iterator.prototype.peek = function () {
  return this.ops[this.index];
};

Iterator.prototype.peekLength = function () {
  if (this.ops[this.index]) {
    // Should never return 0 if our index is being managed correctly
    return lib.length(this.ops[this.index]) - this.offset;
  } else {
    return Infinity;
  }
};

Iterator.prototype.peekType = function () {
  if (this.ops[this.index]) {
    if (typeof this.ops[this.index]['delete'] === 'number') {
      return 'delete';
    } else if (typeof this.ops[this.index].retain === 'number') {
      return 'retain';
    } else {
      return 'insert';
    }
  }
  return 'retain';
};

Iterator.prototype.rest = function () {
  if (!this.hasNext()) {
    return [];
  } else if (this.offset === 0) {
    return this.ops.slice(this.index);
  } else {
    var offset = this.offset;
    var index = this.index;
    var next = this.next();
    var rest = this.ops.slice(this.index);
    this.offset = offset;
    this.index = index;
    return [next].concat(rest);
  }
};


module.exports = lib;


/***/ }),

/***/ "./node_modules/quill/blots/block.js":
/*!*******************************************!*\
  !*** ./node_modules/quill/blots/block.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bubbleFormats": () => (/* binding */ bubbleFormats),
/* harmony export */   "BlockEmbed": () => (/* binding */ BlockEmbed),
/* harmony export */   "default": () => (/* binding */ Block)
/* harmony export */ });
/* harmony import */ var extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! extend */ "./node_modules/extend/index.js");
/* harmony import */ var extend__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(extend__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var quill_delta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! quill-delta */ "./node_modules/quill-delta/lib/delta.js");
/* harmony import */ var quill_delta__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(quill_delta__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! parchment */ "./node_modules/parchment/dist/parchment.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(parchment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _break__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./break */ "./node_modules/quill/blots/break.js");
/* harmony import */ var _inline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./inline */ "./node_modules/quill/blots/inline.js");
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text */ "./node_modules/quill/blots/text.js");








const NEWLINE_LENGTH = 1;


class BlockEmbed extends (parchment__WEBPACK_IMPORTED_MODULE_2___default().Embed) {
  attach() {
    super.attach();
    this.attributes = new (parchment__WEBPACK_IMPORTED_MODULE_2___default().Attributor.Store)(this.domNode);
  }

  delta() {
    return new (quill_delta__WEBPACK_IMPORTED_MODULE_1___default())().insert(this.value(), extend__WEBPACK_IMPORTED_MODULE_0___default()(this.formats(), this.attributes.values()));
  }

  format(name, value) {
    let attribute = parchment__WEBPACK_IMPORTED_MODULE_2___default().query(name, (parchment__WEBPACK_IMPORTED_MODULE_2___default().Scope.BLOCK_ATTRIBUTE));
    if (attribute != null) {
      this.attributes.attribute(attribute, value);
    }
  }

  formatAt(index, length, name, value) {
    this.format(name, value);
  }

  insertAt(index, value, def) {
    if (typeof value === 'string' && value.endsWith('\n')) {
      let block = parchment__WEBPACK_IMPORTED_MODULE_2___default().create(Block.blotName);
      this.parent.insertBefore(block, index === 0 ? this : this.next);
      block.insertAt(0, value.slice(0, -1));
    } else {
      super.insertAt(index, value, def);
    }
  }
}
BlockEmbed.scope = (parchment__WEBPACK_IMPORTED_MODULE_2___default().Scope.BLOCK_BLOT);
// It is important for cursor behavior BlockEmbeds use tags that are block level elements


class Block extends (parchment__WEBPACK_IMPORTED_MODULE_2___default().Block) {
  constructor(domNode) {
    super(domNode);
    this.cache = {};
  }

  delta() {
    if (this.cache.delta == null) {
      this.cache.delta = this.descendants((parchment__WEBPACK_IMPORTED_MODULE_2___default().Leaf)).reduce((delta, leaf) => {
        if (leaf.length() === 0) {
          return delta;
        } else {
          return delta.insert(leaf.value(), bubbleFormats(leaf));
        }
      }, new (quill_delta__WEBPACK_IMPORTED_MODULE_1___default())()).insert('\n', bubbleFormats(this));
    }
    return this.cache.delta;
  }

  deleteAt(index, length) {
    super.deleteAt(index, length);
    this.cache = {};
  }

  formatAt(index, length, name, value) {
    if (length <= 0) return;
    if (parchment__WEBPACK_IMPORTED_MODULE_2___default().query(name, (parchment__WEBPACK_IMPORTED_MODULE_2___default().Scope.BLOCK))) {
      if (index + length === this.length()) {
        this.format(name, value);
      }
    } else {
      super.formatAt(index, Math.min(length, this.length() - index - 1), name, value);
    }
    this.cache = {};
  }

  insertAt(index, value, def) {
    if (def != null) return super.insertAt(index, value, def);
    if (value.length === 0) return;
    let lines = value.split('\n');
    let text = lines.shift();
    if (text.length > 0) {
      if (index < this.length() - 1 || this.children.tail == null) {
        super.insertAt(Math.min(index, this.length() - 1), text);
      } else {
        this.children.tail.insertAt(this.children.tail.length(), text);
      }
      this.cache = {};
    }
    let block = this;
    lines.reduce(function(index, line) {
      block = block.split(index, true);
      block.insertAt(0, line);
      return line.length;
    }, index + text.length);
  }

  insertBefore(blot, ref) {
    let head = this.children.head;
    super.insertBefore(blot, ref);
    if (head instanceof _break__WEBPACK_IMPORTED_MODULE_3__.default) {
      head.remove();
    }
    this.cache = {};
  }

  length() {
    if (this.cache.length == null) {
      this.cache.length = super.length() + NEWLINE_LENGTH;
    }
    return this.cache.length;
  }

  moveChildren(target, ref) {
    super.moveChildren(target, ref);
    this.cache = {};
  }

  optimize(context) {
    super.optimize(context);
    this.cache = {};
  }

  path(index) {
    return super.path(index, true);
  }

  removeChild(child) {
    super.removeChild(child);
    this.cache = {};
  }

  split(index, force = false) {
    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {
      let clone = this.clone();
      if (index === 0) {
        this.parent.insertBefore(clone, this);
        return this;
      } else {
        this.parent.insertBefore(clone, this.next);
        return clone;
      }
    } else {
      let next = super.split(index, force);
      this.cache = {};
      return next;
    }
  }
}
Block.blotName = 'block';
Block.tagName = 'P';
Block.defaultChild = 'break';
Block.allowedChildren = [_inline__WEBPACK_IMPORTED_MODULE_4__.default, (parchment__WEBPACK_IMPORTED_MODULE_2___default().Embed), _text__WEBPACK_IMPORTED_MODULE_5__.default];


function bubbleFormats(blot, formats = {}) {
  if (blot == null) return formats;
  if (typeof blot.formats === 'function') {
    formats = extend__WEBPACK_IMPORTED_MODULE_0___default()(formats, blot.formats());
  }
  if (blot.parent == null || blot.parent.blotName == 'scroll' || blot.parent.statics.scope !== blot.statics.scope) {
    return formats;
  }
  return bubbleFormats(blot.parent, formats);
}





/***/ }),

/***/ "./node_modules/quill/blots/break.js":
/*!*******************************************!*\
  !*** ./node_modules/quill/blots/break.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parchment */ "./node_modules/parchment/dist/parchment.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(parchment__WEBPACK_IMPORTED_MODULE_0__);



class Break extends (parchment__WEBPACK_IMPORTED_MODULE_0___default().Embed) {
  static value() {
    return undefined;
  }

  insertInto(parent, ref) {
    if (parent.children.length === 0) {
      super.insertInto(parent, ref);
    } else {
      this.remove();
    }
  }

  length() {
    return 0;
  }

  value() {
    return '';
  }
}
Break.blotName = 'break';
Break.tagName = 'BR';


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Break);


/***/ }),

/***/ "./node_modules/quill/blots/cursor.js":
/*!********************************************!*\
  !*** ./node_modules/quill/blots/cursor.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parchment */ "./node_modules/parchment/dist/parchment.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(parchment__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./text */ "./node_modules/quill/blots/text.js");




class Cursor extends (parchment__WEBPACK_IMPORTED_MODULE_0___default().Embed) {
  static value() {
    return undefined;
  }

  constructor(domNode, selection) {
    super(domNode);
    this.selection = selection;
    this.textNode = document.createTextNode(Cursor.CONTENTS);
    this.domNode.appendChild(this.textNode);
    this._length = 0;
  }

  detach() {
    // super.detach() will also clear domNode.__blot
    if (this.parent != null) this.parent.removeChild(this);
  }

  format(name, value) {
    if (this._length !== 0) {
      return super.format(name, value);
    }
    let target = this, index = 0;
    while (target != null && target.statics.scope !== (parchment__WEBPACK_IMPORTED_MODULE_0___default().Scope.BLOCK_BLOT)) {
      index += target.offset(target.parent);
      target = target.parent;
    }
    if (target != null) {
      this._length = Cursor.CONTENTS.length;
      target.optimize();
      target.formatAt(index, Cursor.CONTENTS.length, name, value);
      this._length = 0;
    }
  }

  index(node, offset) {
    if (node === this.textNode) return 0;
    return super.index(node, offset);
  }

  length() {
    return this._length;
  }

  position() {
    return [this.textNode, this.textNode.data.length];
  }

  remove() {
    super.remove();
    this.parent = null;
  }

  restore() {
    if (this.selection.composing || this.parent == null) return;
    let textNode = this.textNode;
    let range = this.selection.getNativeRange();
    let restoreText, start, end;
    if (range != null && range.start.node === textNode && range.end.node === textNode) {
      [restoreText, start, end] = [textNode, range.start.offset, range.end.offset];
    }
    // Link format will insert text outside of anchor tag
    while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {
      this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);
    }
    if (this.textNode.data !== Cursor.CONTENTS) {
      let text = this.textNode.data.split(Cursor.CONTENTS).join('');
      if (this.next instanceof _text__WEBPACK_IMPORTED_MODULE_1__.default) {
        restoreText = this.next.domNode;
        this.next.insertAt(0, text);
        this.textNode.data = Cursor.CONTENTS;
      } else {
        this.textNode.data = text;
        this.parent.insertBefore(parchment__WEBPACK_IMPORTED_MODULE_0___default().create(this.textNode), this);
        this.textNode = document.createTextNode(Cursor.CONTENTS);
        this.domNode.appendChild(this.textNode);
      }
    }
    this.remove();
    if (start != null) {
      [start, end] = [start, end].map(function(offset) {
        return Math.max(0, Math.min(restoreText.data.length, offset - 1));
      });
      return {
        startNode: restoreText,
        startOffset: start,
        endNode: restoreText,
        endOffset: end
      };
    }
  }

  update(mutations, context) {
    if (mutations.some((mutation) => {
      return mutation.type === 'characterData' && mutation.target === this.textNode;
    })) {
      let range = this.restore();
      if (range) context.range = range;
    }
  }

  value() {
    return '';
  }
}
Cursor.blotName = 'cursor';
Cursor.className = 'ql-cursor';
Cursor.tagName = 'span';
Cursor.CONTENTS = "\uFEFF";   // Zero width no break space


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Cursor);


/***/ }),

/***/ "./node_modules/quill/blots/inline.js":
/*!********************************************!*\
  !*** ./node_modules/quill/blots/inline.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _text__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text */ "./node_modules/quill/blots/text.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! parchment */ "./node_modules/parchment/dist/parchment.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(parchment__WEBPACK_IMPORTED_MODULE_1__);




class Inline extends (parchment__WEBPACK_IMPORTED_MODULE_1___default().Inline) {
  static compare(self, other) {
    let selfIndex = Inline.order.indexOf(self);
    let otherIndex = Inline.order.indexOf(other);
    if (selfIndex >= 0 || otherIndex >= 0) {
      return selfIndex - otherIndex;
    } else if (self === other) {
      return 0;
    } else if (self < other) {
      return -1;
    } else {
      return 1;
    }
  }

  formatAt(index, length, name, value) {
    if (Inline.compare(this.statics.blotName, name) < 0 && parchment__WEBPACK_IMPORTED_MODULE_1___default().query(name, (parchment__WEBPACK_IMPORTED_MODULE_1___default().Scope.BLOT))) {
      let blot = this.isolate(index, length);
      if (value) {
        blot.wrap(name, value);
      }
    } else {
      super.formatAt(index, length, name, value);
    }
  }

  optimize(context) {
    super.optimize(context);
    if (this.parent instanceof Inline &&
        Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {
      let parent = this.parent.isolate(this.offset(), this.length());
      this.moveChildren(parent);
      parent.wrap(this);
    }
  }
}
Inline.allowedChildren = [Inline, (parchment__WEBPACK_IMPORTED_MODULE_1___default().Embed), _text__WEBPACK_IMPORTED_MODULE_0__.default];
// Lower index means deeper in the DOM tree, since not found (-1) is for embeds
Inline.order = [
  'cursor', 'inline',   // Must be lower
  'underline', 'strike', 'italic', 'bold', 'script',
  'link', 'code'        // Must be higher
];


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Inline);


/***/ }),

/***/ "./node_modules/quill/blots/text.js":
/*!******************************************!*\
  !*** ./node_modules/quill/blots/text.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parchment */ "./node_modules/parchment/dist/parchment.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(parchment__WEBPACK_IMPORTED_MODULE_0__);


class TextBlot extends (parchment__WEBPACK_IMPORTED_MODULE_0___default().Text) { }

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextBlot);


/***/ }),

/***/ "./node_modules/quill/core/editor.js":
/*!*******************************************!*\
  !*** ./node_modules/quill/core/editor.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var quill_delta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! quill-delta */ "./node_modules/quill-delta/lib/delta.js");
/* harmony import */ var quill_delta__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(quill_delta__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var quill_delta_lib_op__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! quill-delta/lib/op */ "./node_modules/quill-delta/lib/op.js");
/* harmony import */ var quill_delta_lib_op__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(quill_delta_lib_op__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! parchment */ "./node_modules/parchment/dist/parchment.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(parchment__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _formats_code__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../formats/code */ "./node_modules/quill/formats/code.js");
/* harmony import */ var _blots_cursor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blots/cursor */ "./node_modules/quill/blots/cursor.js");
/* harmony import */ var _blots_block__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../blots/block */ "./node_modules/quill/blots/block.js");
/* harmony import */ var _blots_break__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../blots/break */ "./node_modules/quill/blots/break.js");
/* harmony import */ var clone__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! clone */ "./node_modules/clone/clone.js");
/* harmony import */ var clone__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(clone__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! deep-equal */ "./node_modules/deep-equal/index.js");
/* harmony import */ var deep_equal__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(deep_equal__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var extend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! extend */ "./node_modules/extend/index.js");
/* harmony import */ var extend__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(extend__WEBPACK_IMPORTED_MODULE_9__);












const ASCII = /^[ -~]*$/;


class Editor {
  constructor(scroll) {
    this.scroll = scroll;
    this.delta = this.getDelta();
  }

  applyDelta(delta) {
    let consumeNextNewline = false;
    this.scroll.update();
    let scrollLength = this.scroll.length();
    this.scroll.batchStart();
    delta = normalizeDelta(delta);
    delta.reduce((index, op) => {
      let length = op.retain || op.delete || op.insert.length || 1;
      let attributes = op.attributes || {};
      if (op.insert != null) {
        if (typeof op.insert === 'string') {
          let text = op.insert;
          if (text.endsWith('\n') && consumeNextNewline) {
            consumeNextNewline = false;
            text = text.slice(0, -1);
          }
          if (index >= scrollLength && !text.endsWith('\n')) {
            consumeNextNewline = true;
          }
          this.scroll.insertAt(index, text);
          let [line, offset] = this.scroll.line(index);
          let formats = extend__WEBPACK_IMPORTED_MODULE_9___default()({}, (0,_blots_block__WEBPACK_IMPORTED_MODULE_5__.bubbleFormats)(line));
          if (line instanceof _blots_block__WEBPACK_IMPORTED_MODULE_5__.default) {
            let [leaf, ] = line.descendant((parchment__WEBPACK_IMPORTED_MODULE_2___default().Leaf), offset);
            formats = extend__WEBPACK_IMPORTED_MODULE_9___default()(formats, (0,_blots_block__WEBPACK_IMPORTED_MODULE_5__.bubbleFormats)(leaf));
          }
          attributes = quill_delta_lib_op__WEBPACK_IMPORTED_MODULE_1___default().attributes.diff(formats, attributes) || {};
        } else if (typeof op.insert === 'object') {
          let key = Object.keys(op.insert)[0];  // There should only be one key
          if (key == null) return index;
          this.scroll.insertAt(index, key, op.insert[key]);
        }
        scrollLength += length;
      }
      Object.keys(attributes).forEach((name) => {
        this.scroll.formatAt(index, length, name, attributes[name]);
      });
      return index + length;
    }, 0);
    delta.reduce((index, op) => {
      if (typeof op.delete === 'number') {
        this.scroll.deleteAt(index, op.delete);
        return index;
      }
      return index + (op.retain || op.insert.length || 1);
    }, 0);
    this.scroll.batchEnd();
    return this.update(delta);
  }

  deleteText(index, length) {
    this.scroll.deleteAt(index, length);
    return this.update(new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().retain(index).delete(length));
  }

  formatLine(index, length, formats = {}) {
    this.scroll.update();
    Object.keys(formats).forEach((format) => {
      if (this.scroll.whitelist != null && !this.scroll.whitelist[format]) return;
      let lines = this.scroll.lines(index, Math.max(length, 1));
      let lengthRemaining = length;
      lines.forEach((line) => {
        let lineLength = line.length();
        if (!(line instanceof _formats_code__WEBPACK_IMPORTED_MODULE_3__.default)) {
          line.format(format, formats[format]);
        } else {
          let codeIndex = index - line.offset(this.scroll);
          let codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;
          line.formatAt(codeIndex, codeLength, format, formats[format]);
        }
        lengthRemaining -= lineLength;
      });
    });
    this.scroll.optimize();
    return this.update(new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().retain(index).retain(length, clone__WEBPACK_IMPORTED_MODULE_7___default()(formats)));
  }

  formatText(index, length, formats = {}) {
    Object.keys(formats).forEach((format) => {
      this.scroll.formatAt(index, length, format, formats[format]);
    });
    return this.update(new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().retain(index).retain(length, clone__WEBPACK_IMPORTED_MODULE_7___default()(formats)));
  }

  getContents(index, length) {
    return this.delta.slice(index, index + length);
  }

  getDelta() {
    return this.scroll.lines().reduce((delta, line) => {
      return delta.concat(line.delta());
    }, new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())());
  }

  getFormat(index, length = 0) {
    let lines = [], leaves = [];
    if (length === 0) {
      this.scroll.path(index).forEach(function(path) {
        let [blot, ] = path;
        if (blot instanceof _blots_block__WEBPACK_IMPORTED_MODULE_5__.default) {
          lines.push(blot);
        } else if (blot instanceof (parchment__WEBPACK_IMPORTED_MODULE_2___default().Leaf)) {
          leaves.push(blot);
        }
      });
    } else {
      lines = this.scroll.lines(index, length);
      leaves = this.scroll.descendants((parchment__WEBPACK_IMPORTED_MODULE_2___default().Leaf), index, length);
    }
    let formatsArr = [lines, leaves].map(function(blots) {
      if (blots.length === 0) return {};
      let formats = (0,_blots_block__WEBPACK_IMPORTED_MODULE_5__.bubbleFormats)(blots.shift());
      while (Object.keys(formats).length > 0) {
        let blot = blots.shift();
        if (blot == null) return formats;
        formats = combineFormats((0,_blots_block__WEBPACK_IMPORTED_MODULE_5__.bubbleFormats)(blot), formats);
      }
      return formats;
    });
    return extend__WEBPACK_IMPORTED_MODULE_9___default().apply((extend__WEBPACK_IMPORTED_MODULE_9___default()), formatsArr);
  }

  getText(index, length) {
    return this.getContents(index, length).filter(function(op) {
      return typeof op.insert === 'string';
    }).map(function(op) {
      return op.insert;
    }).join('');
  }

  insertEmbed(index, embed, value) {
    this.scroll.insertAt(index, embed, value);
    return this.update(new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().retain(index).insert({ [embed]: value }));
  }

  insertText(index, text, formats = {}) {
    text = text.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
    this.scroll.insertAt(index, text);
    Object.keys(formats).forEach((format) => {
      this.scroll.formatAt(index, text.length, format, formats[format]);
    });
    return this.update(new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().retain(index).insert(text, clone__WEBPACK_IMPORTED_MODULE_7___default()(formats)));
  }

  isBlank() {
    if (this.scroll.children.length == 0) return true;
    if (this.scroll.children.length > 1) return false;
    let block = this.scroll.children.head;
    if (block.statics.blotName !== _blots_block__WEBPACK_IMPORTED_MODULE_5__.default.blotName) return false;
    if (block.children.length > 1) return false;
    return block.children.head instanceof _blots_break__WEBPACK_IMPORTED_MODULE_6__.default;
  }

  removeFormat(index, length) {
    let text = this.getText(index, length);
    let [line, offset] = this.scroll.line(index + length);
    let suffixLength = 0, suffix = new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())();
    if (line != null) {
      if (!(line instanceof _formats_code__WEBPACK_IMPORTED_MODULE_3__.default)) {
        suffixLength = line.length() - offset;
      } else {
        suffixLength = line.newlineIndex(offset) - offset + 1;
      }
      suffix = line.delta().slice(offset, offset + suffixLength - 1).insert('\n');
    }
    let contents = this.getContents(index, length + suffixLength);
    let diff = contents.diff(new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().insert(text).concat(suffix));
    let delta = new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().retain(index).concat(diff);
    return this.applyDelta(delta);
  }

  update(change, mutations = [], cursorIndex = undefined) {
    let oldDelta = this.delta;
    if (mutations.length === 1 &&
        mutations[0].type === 'characterData' &&
        mutations[0].target.data.match(ASCII) &&
        parchment__WEBPACK_IMPORTED_MODULE_2___default().find(mutations[0].target)) {
      // Optimization for character changes
      let textBlot = parchment__WEBPACK_IMPORTED_MODULE_2___default().find(mutations[0].target);
      let formats = (0,_blots_block__WEBPACK_IMPORTED_MODULE_5__.bubbleFormats)(textBlot);
      let index = textBlot.offset(this.scroll);
      let oldValue = mutations[0].oldValue.replace(_blots_cursor__WEBPACK_IMPORTED_MODULE_4__.default.CONTENTS, '');
      let oldText = new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().insert(oldValue);
      let newText = new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().insert(textBlot.value());
      let diffDelta = new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())().retain(index).concat(oldText.diff(newText, cursorIndex));
      change = diffDelta.reduce(function(delta, op) {
        if (op.insert) {
          return delta.insert(op.insert, formats);
        } else {
          return delta.push(op);
        }
      }, new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())());
      this.delta = oldDelta.compose(change);
    } else {
      this.delta = this.getDelta();
      if (!change || !deep_equal__WEBPACK_IMPORTED_MODULE_8___default()(oldDelta.compose(change), this.delta)) {
        change = oldDelta.diff(this.delta, cursorIndex);
      }
    }
    return change;
  }
}


function combineFormats(formats, combined) {
  return Object.keys(combined).reduce(function(merged, name) {
    if (formats[name] == null) return merged;
    if (combined[name] === formats[name]) {
      merged[name] = combined[name];
    } else if (Array.isArray(combined[name])) {
      if (combined[name].indexOf(formats[name]) < 0) {
        merged[name] = combined[name].concat([formats[name]]);
      }
    } else {
      merged[name] = [combined[name], formats[name]];
    }
    return merged;
  }, {});
}

function normalizeDelta(delta) {
  return delta.reduce(function(delta, op) {
    if (op.insert === 1) {
      let attributes = clone__WEBPACK_IMPORTED_MODULE_7___default()(op.attributes);
      delete attributes['image'];
      return delta.insert({ image: op.attributes.image }, attributes);
    }
    if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {
      op = clone__WEBPACK_IMPORTED_MODULE_7___default()(op);
      if (op.attributes.list) {
        op.attributes.list = 'ordered';
      } else {
        op.attributes.list = 'bullet';
        delete op.attributes.bullet;
      }
    }
    if (typeof op.insert === 'string') {
      let text = op.insert.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
      return delta.insert(text, op.attributes);
    }
    return delta.push(op);
  }, new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())());
}


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Editor);


/***/ }),

/***/ "./node_modules/quill/formats/code.js":
/*!********************************************!*\
  !*** ./node_modules/quill/formats/code.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Code": () => (/* binding */ Code),
/* harmony export */   "default": () => (/* binding */ CodeBlock)
/* harmony export */ });
/* harmony import */ var quill_delta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! quill-delta */ "./node_modules/quill-delta/lib/delta.js");
/* harmony import */ var quill_delta__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(quill_delta__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! parchment */ "./node_modules/parchment/dist/parchment.js");
/* harmony import */ var parchment__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(parchment__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _blots_block__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../blots/block */ "./node_modules/quill/blots/block.js");
/* harmony import */ var _blots_inline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../blots/inline */ "./node_modules/quill/blots/inline.js");
/* harmony import */ var _blots_text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../blots/text */ "./node_modules/quill/blots/text.js");







class Code extends _blots_inline__WEBPACK_IMPORTED_MODULE_3__.default {}
Code.blotName = 'code';
Code.tagName = 'CODE';


class CodeBlock extends _blots_block__WEBPACK_IMPORTED_MODULE_2__.default {
  static create(value) {
    let domNode = super.create(value);
    domNode.setAttribute('spellcheck', false);
    return domNode;
  }

  static formats() {
    return true;
  }

  delta() {
    let text = this.domNode.textContent;
    if (text.endsWith('\n')) {      // Should always be true
      text = text.slice(0, -1);
    }
    return text.split('\n').reduce((delta, frag) => {
      return delta.insert(frag).insert('\n', this.formats());
    }, new (quill_delta__WEBPACK_IMPORTED_MODULE_0___default())());
  }

  format(name, value) {
    if (name === this.statics.blotName && value) return;
    let [text, ] = this.descendant(_blots_text__WEBPACK_IMPORTED_MODULE_4__.default, this.length() - 1);
    if (text != null) {
      text.deleteAt(text.length() - 1, 1);
    }
    super.format(name, value);
  }

  formatAt(index, length, name, value) {
    if (length === 0) return;
    if (parchment__WEBPACK_IMPORTED_MODULE_1___default().query(name, (parchment__WEBPACK_IMPORTED_MODULE_1___default().Scope.BLOCK)) == null ||
        (name === this.statics.blotName && value === this.statics.formats(this.domNode))) {
      return;
    }
    let nextNewline = this.newlineIndex(index);
    if (nextNewline < 0 || nextNewline >= index + length) return;
    let prevNewline = this.newlineIndex(index, true) + 1;
    let isolateLength = nextNewline - prevNewline + 1;
    let blot = this.isolate(prevNewline, isolateLength);
    let next = blot.next;
    blot.format(name, value);
    if (next instanceof CodeBlock) {
      next.formatAt(0, index - prevNewline + length - isolateLength, name, value);
    }
  }

  insertAt(index, value, def) {
    if (def != null) return;
    let [text, offset] = this.descendant(_blots_text__WEBPACK_IMPORTED_MODULE_4__.default, index);
    text.insertAt(offset, value);
  }

  length() {
    let length = this.domNode.textContent.length;
    if (!this.domNode.textContent.endsWith('\n')) {
      return length + 1;
    }
    return length;
  }

  newlineIndex(searchIndex, reverse = false) {
    if (!reverse) {
      let offset = this.domNode.textContent.slice(searchIndex).indexOf('\n');
      return offset > -1 ? searchIndex + offset : -1;
    } else {
      return this.domNode.textContent.slice(0, searchIndex).lastIndexOf('\n');
    }
  }

  optimize(context) {
    if (!this.domNode.textContent.endsWith('\n')) {
      this.appendChild(parchment__WEBPACK_IMPORTED_MODULE_1___default().create('text', '\n'));
    }
    super.optimize(context);
    let next = this.next;
    if (next != null && next.prev === this &&
        next.statics.blotName === this.statics.blotName &&
        this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {
      next.optimize(context);
      next.moveChildren(this);
      next.remove();
    }
  }

  replace(target) {
    super.replace(target);
    [].slice.call(this.domNode.querySelectorAll('*')).forEach(function(node) {
      let blot = parchment__WEBPACK_IMPORTED_MODULE_1___default().find(node);
      if (blot == null) {
        node.parentNode.removeChild(node);
      } else if (blot instanceof (parchment__WEBPACK_IMPORTED_MODULE_1___default().Embed)) {
        blot.remove();
      } else {
        blot.unwrap();
      }
    });
  }
}
CodeBlock.blotName = 'code-block';
CodeBlock.tagName = 'PRE';
CodeBlock.TAB = '  ';





/***/ }),

/***/ "./node_modules/regexp.prototype.flags/implementation.js":
/*!***************************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/implementation.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


var $Object = Object;
var $TypeError = TypeError;

module.exports = function flags() {
	if (this != null && this !== $Object(this)) {
		throw new $TypeError('RegExp.prototype.flags getter called on non-object');
	}
	var result = '';
	if (this.global) {
		result += 'g';
	}
	if (this.ignoreCase) {
		result += 'i';
	}
	if (this.multiline) {
		result += 'm';
	}
	if (this.dotAll) {
		result += 's';
	}
	if (this.unicode) {
		result += 'u';
	}
	if (this.sticky) {
		result += 'y';
	}
	return result;
};


/***/ }),

/***/ "./node_modules/regexp.prototype.flags/index.js":
/*!******************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var callBind = __webpack_require__(/*! call-bind */ "./node_modules/call-bind/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/regexp.prototype.flags/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/regexp.prototype.flags/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/regexp.prototype.flags/shim.js");

var flagsBound = callBind(implementation);

define(flagsBound, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = flagsBound;


/***/ }),

/***/ "./node_modules/regexp.prototype.flags/polyfill.js":
/*!*********************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/polyfill.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/regexp.prototype.flags/implementation.js");

var supportsDescriptors = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js").supportsDescriptors;
var $gOPD = Object.getOwnPropertyDescriptor;
var $TypeError = TypeError;

module.exports = function getPolyfill() {
	if (!supportsDescriptors) {
		throw new $TypeError('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
	}
	if ((/a/mig).flags === 'gim') {
		var descriptor = $gOPD(RegExp.prototype, 'flags');
		if (descriptor && typeof descriptor.get === 'function' && typeof (/a/).dotAll === 'boolean') {
			return descriptor.get;
		}
	}
	return implementation;
};


/***/ }),

/***/ "./node_modules/regexp.prototype.flags/shim.js":
/*!*****************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/shim.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var supportsDescriptors = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js").supportsDescriptors;
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/regexp.prototype.flags/polyfill.js");
var gOPD = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var TypeErr = TypeError;
var getProto = Object.getPrototypeOf;
var regex = /a/;

module.exports = function shimFlags() {
	if (!supportsDescriptors || !getProto) {
		throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
	}
	var polyfill = getPolyfill();
	var proto = getProto(regex);
	var descriptor = gOPD(proto, 'flags');
	if (!descriptor || descriptor.get !== polyfill) {
		defineProperty(proto, 'flags', {
			configurable: true,
			enumerable: false,
			get: polyfill
		});
	}
	return polyfill;
};


/***/ }),

/***/ "./node_modules/@mdi/font/css/materialdesignicons.css":
/*!************************************************************!*\
  !*** ./node_modules/@mdi/font/css/materialdesignicons.css ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_2_materialdesignicons_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!../../../postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./materialdesignicons.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[6].oneOf[1].use[2]!./node_modules/@mdi/font/css/materialdesignicons.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_2_materialdesignicons_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_6_oneOf_1_use_2_materialdesignicons_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/css/app.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;